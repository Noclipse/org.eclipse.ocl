[**
 * <copyright>
 *
 * Copyright (c) 2011 E.D.Willink and others.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *     E.D.Willink - initial API and implementation
 *
 * </copyright>
 *
 * $Id$
 **/]
[comment encoding = UTF-8 /]
[module org::eclipse::ocl::examples::codegen::common::elementQueries('http://www.eclipse.org/ocl/3.1.0/Pivot')/]

[query public asIntegerStringOrEmpty(elem : Element) : String =
invoke('org.eclipse.ocl.examples.codegen.common.PivotQueries', 'asIntegerStringOrEmpty(org.eclipse.ocl.examples.pivot.Element)', Sequence{elem}) /]

[query public asRealStringOrNull(elem : Element) : String =
invoke('org.eclipse.ocl.examples.codegen.common.PivotQueries', 'asRealStringOrNull(org.eclipse.ocl.examples.pivot.Element)', Sequence{elem}) /]

[query public getExpressionInOCL(specification : ValueSpecification, contextElement : NamedElement) : ExpressionInOCL =
invoke('org.eclipse.ocl.examples.pivot.utilities.PivotUtil', 'getExpressionInOCL(org.eclipse.ocl.examples.pivot.NamedElement, org.eclipse.ocl.examples.pivot.ValueSpecification)', Sequence{contextElement, specification}) /]

[query public getMoniker(elem : Element) : String =
invoke('org.eclipse.ocl.examples.codegen.common.PivotQueries', 'getMoniker(org.eclipse.ocl.examples.pivot.Element)', Sequence{elem}) /]

[query public getFragmentURI(elem : Element) : String =
invoke('org.eclipse.ocl.examples.codegen.common.PivotQueries', 'getFragmentURI(org.eclipse.ocl.examples.pivot.Element)', Sequence{elem}) /]
