[**
 * <copyright>
 *
 * Copyright (c) 2011 E.D.Willink and others.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *     E.D.Willink - initial API and implementation
 *
 * </copyright>
 *
 * $Id$
 **/]
[comment encoding = UTF-8 /]
[module org::eclipse::ocl::examples::codegen::common::emitQueries('http://www.eclipse.org/ocl/3.1.0/Pivot','http://www.eclipse.org/emf/2002/Ecore','http://www.eclipse.org/emf/2002/GenModel')/]

[query public emitCast(ecoreType : String) : String =
if ecoreType.size() > 0 then '(' + ecoreType + ')' else '' endif /]

[query public emitDomainElementsType(name : String) : String =
emitType('org.eclipse.ocl.examples.domain.elements.' + name) /]

[query public emitDomainEvaluationType(name : String) : String =
emitType('org.eclipse.ocl.examples.domain.evaluation.' + name) /]

[query public emitDomainLibraryType(name : String) : String =
emitType('org.eclipse.ocl.examples.domain.library.' + name) /]

[query public emitDomainValuesType(name : String) : String =
emitType('org.eclipse.ocl.examples.domain.values.' + name) /]

[query public emitEcoreType(type : Type) : String = 'XYZZY' /]

[query public emitJavaUtilType(name : String) : String =
emitType('java.util.' + name) /]

[query public emitOperationType(prefix : String, arity : Integer) : String =
emitType('org.eclipse.ocl.examples.domain.library.Library' +
if arity = 0 then 'UnaryOperation'
else if arity = 1 then 'BinaryOperation'
else if arity = 2 then 'TernaryOperation'
else 'TernaryOperation' endif endif endif
) /]

[template public emitSuppressThrowWarnings(any : OclAny)]

	[emitType('org.eclipse.ocl.examples.domain.utilities.DomainUtil')/].suppressThrowWarnings();
[/template]

[query public emitType(qualifiedName : String) : String =
'<%' + qualifiedName + '%>' /]
