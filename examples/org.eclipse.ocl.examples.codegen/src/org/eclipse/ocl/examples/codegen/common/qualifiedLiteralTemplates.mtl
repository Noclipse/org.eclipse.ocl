[**
 * <copyright>
 *
 * Copyright (c) 2011 E.D.Willink and others.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *     E.D.Willink - initial API and implementation
 *
 * </copyright>
 *
 * $Id$
 **/]
[comment encoding = UTF-8 /]
[module org::eclipse::ocl::examples::codegen::common::qualifiedLiteralTemplates('http://www.eclipse.org/ocl/3.1.0/Pivot','http://www.eclipse.org/emf/2002/GenModel')/]

[import org::eclipse::ocl::examples::codegen::common::emitQueries/]
[import org::eclipse::ocl::examples::codegen::common::genPackageQueries/]
[import org::eclipse::ocl::examples::codegen::common::nameQueries/]
[import org::eclipse::ocl::examples::codegen::common::pivotQueries/]
[import org::eclipse::ocl::examples::codegen::common::stringQueries/]
	
[template public emitQualifiedLiteralName(ast : CollectionType, genPackage : GenPackage)]
[let rawAst : CollectionType = if ast.unspecializedElement <> null then ast.unspecializedElement.oclAsType(CollectionType) else ast endif]
<%[rawAst.getQualifiedTablesClassName(genPackage)/]%>.Types._[ast.encodeName()/][/let][/template]

[template public emitQualifiedLiteralName(ast : Element, genPackage : GenPackage)]
null/*[ast.eClass().name/]*/[/template]

[template public emitQualifiedLiteralName(ast : EnumerationLiteral, genPackage : GenPackage)]
<%[ast.enumeration.getQualifiedTablesClassName(genPackage)/]%>.EnumerationLiterals._[ast.enumeration.name/]__[ast.encodeName()/][/template]

[template public emitQualifiedLiteralName(ast : Operation, genPackage : GenPackage)] 
<%[ast.owningType.getQualifiedTablesClassName(genPackage)/]%>.Operations._[ast.owningType.name/]__[ast.encodeName()/][/template]

[template public emitQualifiedLiteralName(ast : Property, genPackage : GenPackage)]
<%[ast.owningType.getQualifiedTablesClassName(genPackage)/]%>.Properties._[ast.owningType.name/]__[ast.encodeName()/][/template]

[template public emitQualifiedLiteralName(ast : TupleType, genPackage : GenPackage)]
[ast.getTablesClassName(genPackage).getPrefixedSymbolName('tuple_type_')/][/template]
	
[template public emitQualifiedLiteralName(ast : Type, genPackage : GenPackage)]
<%[ast.getQualifiedTablesClassName(genPackage)/]%>.Types._[ast.encodeName()/][/template]
