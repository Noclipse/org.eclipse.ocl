[**
 * <copyright>
 *
 * Copyright (c) 2011 E.D.Willink and others.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *     E.D.Willink - initial API and implementation
 *
 * </copyright>
 *
 * $Id$
 **/]
[comment encoding = UTF-8 /]
[module org::eclipse::ocl::examples::codegen::common::typeIdTemplates('http://www.eclipse.org/ocl/3.1.0/Pivot','http://www.eclipse.org/emf/2002/GenModel')/]

[import org::eclipse::ocl::examples::codegen::common::elementQueries/]
[import org::eclipse::ocl::examples::codegen::common::genPackageQueries/]
[import org::eclipse::ocl::examples::codegen::common::nameQueries/]
[import org::eclipse::ocl::examples::codegen::common::pivotQueries/]
[import org::eclipse::ocl::examples::codegen::common::qualifiedLiteralTemplates/]
[import org::eclipse::ocl::examples::codegen::common::symbolTemplates/]

[**
 * The symbolName template provides a semi-readable name for use by any AST node that is unique within a given ExpressionInOCL.
 **/]

[template public zztypeId(type : Type, expInOcl : ExpressionInOCL) ?(type.isBuiltInType())]
<%TypeId%>.[type.upperName()/][/template]

[template public typeId(type : Type, expInOcl : ExpressionInOCL)]
[type.symbolName(expInOcl)/][/template]

[template public typeIdLiteral(type : Type, genPackage : GenPackage, expInOcl : ExpressionInOCL)]
[if (genPackage.hasTablesClass(type))]
[type.emitQualifiedLiteralName(genPackage)/].getTypeId()[else]
evaluator.getIdResolver().getType([type.symbolName(expInOcl)/], null)[/if]
[/template]
