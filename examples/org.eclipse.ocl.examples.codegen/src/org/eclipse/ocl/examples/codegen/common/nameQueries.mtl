[**
 * <copyright>
 *
 * Copyright (c) 2011 E.D.Willink and others.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *     E.D.Willink - initial API and implementation
 *
 * </copyright>
 *
 * $Id$
 **/]
[comment encoding = UTF-8 /]
[module org::eclipse::ocl::examples::codegen::common::nameQueries('http://www.eclipse.org/ocl/3.1.0/Pivot','http://www.eclipse.org/emf/2002/Ecore')/]

[query public defineFlag(elem : OclAny, flag : String) : String = 
invoke('org.eclipse.ocl.examples.codegen.common.NameQueries', 'defineFlag(java.lang.Object, java.lang.String)', Sequence{elem, flag}) /]

[query public defineSymbolName(elem : OclAny, symbol : String) : String = 
invoke('org.eclipse.ocl.examples.codegen.common.NameQueries', 'defineSymbolName(java.lang.Object, java.lang.String)', Sequence{elem, symbol}) /]

[query public encodeName(elem : NamedElement) : String =
invoke('org.eclipse.ocl.examples.codegen.common.NameQueries', 'encodeName(org.eclipse.ocl.examples.pivot.NamedElement)', Sequence{elem}) /]

[query public getPrefixedSymbolName(elem : OclAny, prefix : String) : String = 
invoke('org.eclipse.ocl.examples.codegen.common.NameQueries', 'getPrefixedSymbolName(java.lang.String, java.lang.Object)', Sequence{prefix, elem}) /]

[query public getSymbolName(elem : OclAny) : String = 
invoke('org.eclipse.ocl.examples.codegen.common.NameQueries', 'getSymbolName(java.lang.Object)', Sequence{elem}) /]

[query public getUniqueText(_context : Element, constraint : Constraint) : String = 
invoke('org.eclipse.ocl.examples.codegen.common.NameQueries', 'getUniqueText(org.eclipse.ocl.examples.pivot.Element, org.eclipse.ocl.examples.pivot.Constraint)', Sequence{_context, constraint}) /]

[query public getUniqueText(_context : Element, operation : Operation) : String = 
invoke('org.eclipse.ocl.examples.codegen.common.NameQueries', 'getUniqueText(org.eclipse.ocl.examples.pivot.Element, org.eclipse.ocl.examples.pivot.Operation)', Sequence{_context, operation}) /]

[query public getUniqueText(_context : Element, property : Property) : String = 
invoke('org.eclipse.ocl.examples.codegen.common.NameQueries', 'getUniqueText(org.eclipse.ocl.examples.pivot.Element, org.eclipse.ocl.examples.pivot.Property)', Sequence{_context, property}) /]

[query public getUniqueText(_context : Element, string : String) : String = 
invoke('org.eclipse.ocl.examples.codegen.common.NameQueries', 'getUniqueText(org.eclipse.ocl.examples.pivot.Element, java.lang.String)', Sequence{_context, string}) /]

[query public getUniqueText(_context : Element, part : TupleLiteralPart) : String = 
invoke('org.eclipse.ocl.examples.codegen.common.NameQueries', 'getUniqueText(org.eclipse.ocl.examples.pivot.Element, org.eclipse.ocl.examples.pivot.TupleLiteralPart)', Sequence{_context, part}) /]

[query public getUniqueText(_context : Element, type : TupleType) : String = 
invoke('org.eclipse.ocl.examples.codegen.common.NameQueries', 'getUniqueText(org.eclipse.ocl.examples.pivot.Element, org.eclipse.ocl.examples.pivot.TupleType)', Sequence{_context, type}) /]

[query public getUniqueText(_context : Element, type : Type) : String = 
invoke('org.eclipse.ocl.examples.codegen.common.NameQueries', 'getUniqueText(org.eclipse.ocl.examples.pivot.Element, org.eclipse.ocl.examples.pivot.Type)', Sequence{_context, type}) /]

[query public getUniqueText(_context : Element, variable : Variable) : String = 
invoke('org.eclipse.ocl.examples.codegen.common.NameQueries', 'getUniqueText(org.eclipse.ocl.examples.pivot.Element, org.eclipse.ocl.examples.pivot.Variable)', Sequence{_context, variable}) /]

[query public isDefinedFlag(elem : OclAny, flag : String) : Boolean = 
invoke('org.eclipse.ocl.examples.codegen.common.NameQueries', 'isDefinedFlag(java.lang.Object, java.lang.String)', Sequence{elem, flag}) /]

[query public resetFlags(elem : OclAny) : String = 
invoke('org.eclipse.ocl.examples.codegen.common.NameQueries', 'resetFlags(java.lang.Object)', Sequence{elem}) /]

[query public resetSymbolNames(elem : OclAny) : String = 
invoke('org.eclipse.ocl.examples.codegen.common.NameQueries', 'resetSymbolNames(java.lang.Object)', Sequence{elem}) /]

[query public upperName(namedElement : NamedElement) : String = 
invoke('org.eclipse.emf.codegen.util.CodeGenUtil', 'upperName(java.lang.String)', Sequence{namedElement.name}) /]
