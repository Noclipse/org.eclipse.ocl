<?xml version="1.0" encoding="UTF-8"?>
<xmi:XMI xmi:version="20110701" xmlns:xmi="http://www.omg.org/spec/XMI/20110701" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:Ecore="http://www.eclipse.org/uml2/schemas/Ecore/5" xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" xmlns:uml="http://www.eclipse.org/uml2/4.0.0/UML"
    xsi:schemaLocation="http://www.eclipse.org/uml2/schemas/Ecore/5 pathmap://UML_PROFILES/Ecore.profile.uml#_z1OFcHjqEdy8S4Cr8Rc_NA">
  <uml:Package xmi:id="_0" name="pivot" URI="http://www.omg.org/spec/UML/20090901">
    <packagedElement xmi:type="uml:PrimitiveType" xmi:id="_9C8LRAKlEeOyhdPgU1X2gQ" name="Boolean">
      <ownedComment xmi:id="_9C8LRQKlEeOyhdPgU1X2gQ" annotatedElement="_9C8LRAKlEeOyhdPgU1X2gQ">
        <body>A Boolean type is used for logical expression, consisting of the predefined values true and false.</body>
      </ownedComment>
    </packagedElement>
    <packagedElement xmi:type="uml:PrimitiveType" xmi:id="_9C8LQgKlEeOyhdPgU1X2gQ" name="Integer">
      <ownedComment xmi:id="_9C8LQwKlEeOyhdPgU1X2gQ" annotatedElement="_9C8LQgKlEeOyhdPgU1X2gQ">
        <body>An integer is a primitive type representing integer values.</body>
      </ownedComment>
    </packagedElement>
    <packagedElement xmi:type="uml:PrimitiveType" xmi:id="_9E4E_gKlEeOyhdPgU1X2gQ" name="LibraryFeature"/>
    <packagedElement xmi:type="uml:PrimitiveType" xmi:id="_9E4E_wKlEeOyhdPgU1X2gQ" name="Object"/>
    <packagedElement xmi:type="uml:PrimitiveType" xmi:id="_9Eki4AKlEeOyhdPgU1X2gQ" name="Real"/>
    <packagedElement xmi:type="uml:PrimitiveType" xmi:id="_9C8LOgKlEeOyhdPgU1X2gQ" name="String">
      <ownedComment xmi:id="_9C8LRgKlEeOyhdPgU1X2gQ" annotatedElement="_9C8LOgKlEeOyhdPgU1X2gQ">
        <body>A string is a sequence of characters in some suitable character set used to display information about the model. Character sets may include non-Roman alphabets and characters.</body>
      </ownedComment>
    </packagedElement>
    <packagedElement xmi:type="uml:PrimitiveType" xmi:id="_9E4FAAKlEeOyhdPgU1X2gQ" name="Throwable"/>
    <packagedElement xmi:type="uml:PrimitiveType" xmi:id="_9C8LRwKlEeOyhdPgU1X2gQ" name="UnlimitedNatural">
      <ownedComment xmi:id="_9C8LSAKlEeOyhdPgU1X2gQ" annotatedElement="_9C8LRwKlEeOyhdPgU1X2gQ">
        <body>An unlimited natural is a primitive type representing unlimited natural values.</body>
      </ownedComment>
    </packagedElement>
    <packagedElement xmi:type="uml:Enumeration" xmi:id="_9FBO5wKlEeOyhdPgU1X2gQ" name="AssociativityKind">
      <ownedLiteral xmi:id="_9FBO6AKlEeOyhdPgU1X2gQ" name="Left"/>
      <ownedLiteral xmi:id="_9FBO6QKlEeOyhdPgU1X2gQ" name="Right"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Enumeration" xmi:id="_9EIeFQKlEeOyhdPgU1X2gQ" name="CollectionKind">
      <ownedLiteral xmi:id="_9EIeFgKlEeOyhdPgU1X2gQ" name="Collection"/>
      <ownedLiteral xmi:id="_9EIeFwKlEeOyhdPgU1X2gQ" name="Set"/>
      <ownedLiteral xmi:id="_9EIeGAKlEeOyhdPgU1X2gQ" name="OrderedSet"/>
      <ownedLiteral xmi:id="_9EIeGQKlEeOyhdPgU1X2gQ" name="Bag"/>
      <ownedLiteral xmi:id="_9EIeGgKlEeOyhdPgU1X2gQ" name="Sequence"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Enumeration" xmi:id="_9DPGkAKlEeOyhdPgU1X2gQ" name="PseudostateKind" visibility="private">
      <ownedComment xmi:id="_9DPGkQKlEeOyhdPgU1X2gQ" annotatedElement="_9DPGkAKlEeOyhdPgU1X2gQ">
        <body>PseudostateKind is an enumeration type.</body>
      </ownedComment>
      <ownedLiteral xmi:id="_9DPGkgKlEeOyhdPgU1X2gQ" name="initial">
        <ownedComment xmi:id="_9DPGkwKlEeOyhdPgU1X2gQ" annotatedElement="_9DPGkgKlEeOyhdPgU1X2gQ">
          <body>An initial pseudostate represents a default vertex that is the source for a single transition to the default state of a composite state. There can be at most one initial vertex in a region. The outgoing transition from the initial vertex may have a behavior, but not a trigger or guard.</body>
        </ownedComment>
      </ownedLiteral>
      <ownedLiteral xmi:id="_9DPGlAKlEeOyhdPgU1X2gQ" name="deepHistory">
        <ownedComment xmi:id="_9DPGlQKlEeOyhdPgU1X2gQ" annotatedElement="_9DPGlAKlEeOyhdPgU1X2gQ">
          <body>DeepHistory represents the most recent active configuration of the composite state that directly contains this pseudostate; e.g. the state configuration that was active when the composite state was last exited. A composite state can have at most one deep history vertex. At most one transition may originate from the history connector to the default deep history state. This transition is taken in case the composite state had never been active before. Entry actions of states entered on the path to the state represented by a deep history are performed.</body>
        </ownedComment>
      </ownedLiteral>
      <ownedLiteral xmi:id="_9DPGlgKlEeOyhdPgU1X2gQ" name="shallowHistory">
        <ownedComment xmi:id="_9DPGlwKlEeOyhdPgU1X2gQ" annotatedElement="_9DPGlgKlEeOyhdPgU1X2gQ">
          <body>ShallowHistory represents the most recent active substate of its containing state (but not the substates of that substate). A composite state can have at most one shallow history vertex. A transition coming into the shallow history vertex is equivalent to a transition coming into the most recent active substate of a state. At most one transition may originate from the history connector to the default shallow history state. This transition is taken in case the composite state had never been active before. Entry actions of states entered on the path to the state represented by a shallow history are performed.</body>
        </ownedComment>
      </ownedLiteral>
      <ownedLiteral xmi:id="_9DPGmAKlEeOyhdPgU1X2gQ" name="join">
        <ownedComment xmi:id="_9DPGmQKlEeOyhdPgU1X2gQ" annotatedElement="_9DPGmAKlEeOyhdPgU1X2gQ">
          <body>Join vertices serve to merge several transitions emanating from source vertices in different orthogonal regions. The transitions entering a join vertex cannot have guards or triggers.</body>
        </ownedComment>
      </ownedLiteral>
      <ownedLiteral xmi:id="_9DPGmgKlEeOyhdPgU1X2gQ" name="fork">
        <ownedComment xmi:id="_9DPGmwKlEeOyhdPgU1X2gQ" annotatedElement="_9DPGmgKlEeOyhdPgU1X2gQ">
          <body>Fork vertices serve to split an incoming transition into two or more transitions terminating on orthogonal target vertices&#xD;
(i.e. vertices in different regions of a composite state). The segments outgoing from a fork vertex must not have guards or triggers.</body>
        </ownedComment>
      </ownedLiteral>
      <ownedLiteral xmi:id="_9DPGnAKlEeOyhdPgU1X2gQ" name="junction">
        <ownedComment xmi:id="_9DPGnQKlEeOyhdPgU1X2gQ" annotatedElement="_9DPGnAKlEeOyhdPgU1X2gQ">
          <body>Junction vertices are semantic-free vertices that are used to chain together multiple transitions. They are used to construct compound transition paths between states. For example, a junction can be used to converge multiple incoming transitions into a single outgoing transition representing a shared transition path (this is known as an merge). Conversely, they can be used to split an incoming transition into multiple outgoing transition segments with different guard conditions. This realizes a static conditional branch. (In the latter case, outgoing transitions whose guard conditions evaluate to false are disabled. A predefined guard denoted 'else' may be defined for at most one outgoing transition. This transition is enabled if all the guards labeling the other transitions are false.) Static conditional branches are distinct from dynamic conditional branches that are realized by choice vertices (described below).</body>
        </ownedComment>
      </ownedLiteral>
      <ownedLiteral xmi:id="_9DPGngKlEeOyhdPgU1X2gQ" name="choice">
        <ownedComment xmi:id="_9DPGnwKlEeOyhdPgU1X2gQ" annotatedElement="_9DPGngKlEeOyhdPgU1X2gQ">
          <body>Choice vertices which, when reached, result in the dynamic evaluation of the guards of the triggers of its outgoing transitions. This realizes a dynamic conditional branch. It allows splitting of transitions into multiple outgoing paths such that the decision on which path to take may be a function of the results of prior actions performed in the same run-tocompletion step. If more than one of the guards evaluates to true, an arbitrary one is selected. If none of the guards evaluates to true, then the model is considered ill-formed. (To avoid this, it is recommended to define one outgoing transition with the predefined else guard for every choice vertex.) Choice vertices should be distinguished from static branch points that are based on junction points (described above).</body>
        </ownedComment>
      </ownedLiteral>
      <ownedLiteral xmi:id="_9DPGoAKlEeOyhdPgU1X2gQ" name="entryPoint">
        <ownedComment xmi:id="_9DPGoQKlEeOyhdPgU1X2gQ" annotatedElement="_9DPGoAKlEeOyhdPgU1X2gQ">
          <body>An entry point pseudostate is an entry point of a state machine or composite state. In each region of the state machine or composite state it has a single transition to a vertex within the same region.</body>
        </ownedComment>
      </ownedLiteral>
      <ownedLiteral xmi:id="_9DPGogKlEeOyhdPgU1X2gQ" name="exitPoint">
        <ownedComment xmi:id="_9DPGowKlEeOyhdPgU1X2gQ" annotatedElement="_9DPGogKlEeOyhdPgU1X2gQ">
          <body>An exit point pseudostate is an exit point of a state machine or composite state. Entering an exit point within any region of the composite state or state machine referenced by a submachine state implies the exit of this composite state or submachine state and the triggering of the transition that has this exit point as source in the state machine enclosing the submachine or composite state.</body>
        </ownedComment>
      </ownedLiteral>
      <ownedLiteral xmi:id="_9DPGpAKlEeOyhdPgU1X2gQ" name="terminate">
        <ownedComment xmi:id="_9DPGpQKlEeOyhdPgU1X2gQ" annotatedElement="_9DPGpAKlEeOyhdPgU1X2gQ">
          <body>Entering a terminate pseudostate implies that the execution of this state machine by means of its context object is terminated. The state machine does not exit any states nor does it perform any exit actions other than those associated with the transition leading to the terminate pseudostate. Entering a terminate pseudostate is equivalent to invoking a DestroyObjectAction.</body>
        </ownedComment>
      </ownedLiteral>
    </packagedElement>
    <packagedElement xmi:type="uml:Enumeration" xmi:id="_9DPGpgKlEeOyhdPgU1X2gQ" name="TransitionKind" visibility="private">
      <ownedComment xmi:id="_9DPGpwKlEeOyhdPgU1X2gQ" annotatedElement="_9DPGpgKlEeOyhdPgU1X2gQ">
        <body>TransitionKind is an enumeration type.</body>
      </ownedComment>
      <ownedLiteral xmi:id="_9DPGrgKlEeOyhdPgU1X2gQ" name="internal">
        <ownedComment xmi:id="_9DPGrwKlEeOyhdPgU1X2gQ" annotatedElement="_9DPGrgKlEeOyhdPgU1X2gQ">
          <body>Implies that the transition, if triggered, occurs without exiting or entering the source state. Thus, it does not cause a state change. This means that the entry or exit condition of the source state will not be invoked. An internal transition can be taken even if the state machine is in one or more regions nested within this state.</body>
        </ownedComment>
      </ownedLiteral>
      <ownedLiteral xmi:id="_9DPGsAKlEeOyhdPgU1X2gQ" name="local">
        <ownedComment xmi:id="_9DPGsQKlEeOyhdPgU1X2gQ" annotatedElement="_9DPGsAKlEeOyhdPgU1X2gQ">
          <body>Implies that the transition, if triggered, will not exit the composite (source) state, but it will apply to any state within the composite state, and these will be exited and entered.</body>
        </ownedComment>
      </ownedLiteral>
      <ownedLiteral xmi:id="_9DPGsgKlEeOyhdPgU1X2gQ" name="external">
        <ownedComment xmi:id="_9DPGswKlEeOyhdPgU1X2gQ" annotatedElement="_9DPGsgKlEeOyhdPgU1X2gQ">
          <body>Implies that the transition, if triggered, will exit the composite (source) state.</body>
        </ownedComment>
      </ownedLiteral>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_9EuT4wKlEeOyhdPgU1X2gQ" name="Annotation">
      <generalization xmi:id="_9EuT5AKlEeOyhdPgU1X2gQ" general="_9CVuQwKlEeOyhdPgU1X2gQ"/>
      <ownedAttribute xmi:id="_9EuT5QKlEeOyhdPgU1X2gQ" name="ownedContent" type="_9CpQZwKlEeOyhdPgU1X2gQ" isOrdered="true" aggregation="composite">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_9EuT5gKlEeOyhdPgU1X2gQ"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_9EuT5wKlEeOyhdPgU1X2gQ" value="*"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_9EuT6AKlEeOyhdPgU1X2gQ" name="ownedDetail" type="_9EuT7gKlEeOyhdPgU1X2gQ" isOrdered="true" aggregation="composite">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_9EuT6QKlEeOyhdPgU1X2gQ"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_9EuT6gKlEeOyhdPgU1X2gQ" value="*"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_9EuT6wKlEeOyhdPgU1X2gQ" name="reference" type="_9CpQZwKlEeOyhdPgU1X2gQ" isOrdered="true">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_9EuT7AKlEeOyhdPgU1X2gQ"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_9EuT7QKlEeOyhdPgU1X2gQ" value="*"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_9Eki4QKlEeOyhdPgU1X2gQ" name="AnyType">
      <generalization xmi:id="_9Eki4gKlEeOyhdPgU1X2gQ" general="_9CVuSQKlEeOyhdPgU1X2gQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_9D-tAAKlEeOyhdPgU1X2gQ" name="AssociationClass">
      <generalization xmi:id="_9D-tAQKlEeOyhdPgU1X2gQ" general="_9CVuSQKlEeOyhdPgU1X2gQ"/>
      <ownedAttribute xmi:id="_9D-tAgKlEeOyhdPgU1X2gQ" name="unownedAttribute" type="_9CVubgKlEeOyhdPgU1X2gQ" association="_9D-tCgKlEeOyhdPgU1X2gQ">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_9D-tAwKlEeOyhdPgU1X2gQ"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_9D-tBAKlEeOyhdPgU1X2gQ" value="*"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_9ERoJgKlEeOyhdPgU1X2gQ" name="AssociationClassCallExp">
      <generalization xmi:id="_9ERoJwKlEeOyhdPgU1X2gQ" general="_9ERoHwKlEeOyhdPgU1X2gQ"/>
      <ownedAttribute xmi:id="_9ERoKAKlEeOyhdPgU1X2gQ" name="referredAssociationClass" type="_9D-tAAKlEeOyhdPgU1X2gQ">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_9ERoKQKlEeOyhdPgU1X2gQ"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_9Eki4wKlEeOyhdPgU1X2gQ" name="BagType">
      <generalization xmi:id="_9Eki5AKlEeOyhdPgU1X2gQ" general="_9Eki5QKlEeOyhdPgU1X2gQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_9DY3WAKlEeOyhdPgU1X2gQ" name="Behavior" isAbstract="true">
      <generalization xmi:id="_9DY3WQKlEeOyhdPgU1X2gQ" general="_9CVuSQKlEeOyhdPgU1X2gQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_9EIeCwKlEeOyhdPgU1X2gQ" name="BooleanLiteralExp">
      <generalization xmi:id="_9EIeDAKlEeOyhdPgU1X2gQ" general="_9ERn8gKlEeOyhdPgU1X2gQ"/>
      <ownedAttribute xmi:id="_9EIeDQKlEeOyhdPgU1X2gQ" name="booleanSymbol" type="_9C8LRAKlEeOyhdPgU1X2gQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_9EIeDgKlEeOyhdPgU1X2gQ" name="CallExp" isAbstract="true">
      <generalization xmi:id="_9EIeDwKlEeOyhdPgU1X2gQ" general="_9EIeGwKlEeOyhdPgU1X2gQ"/>
      <ownedAttribute xmi:id="_9EIeEAKlEeOyhdPgU1X2gQ" name="source" type="_9EIeGwKlEeOyhdPgU1X2gQ" aggregation="composite">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_9EIeEQKlEeOyhdPgU1X2gQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_9EIeEgKlEeOyhdPgU1X2gQ" name="implicit" type="_9C8LRAKlEeOyhdPgU1X2gQ">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_9EIeEwKlEeOyhdPgU1X2gQ"/>
        <defaultValue xmi:type="uml:LiteralString" xmi:id="_9EIeFAKlEeOyhdPgU1X2gQ" value="false"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_9CVuQAKlEeOyhdPgU1X2gQ" name="CallOperationAction">
      <generalization xmi:id="_9CVuQQKlEeOyhdPgU1X2gQ" general="_9CVuQwKlEeOyhdPgU1X2gQ"/>
      <ownedAttribute xmi:id="_9CVuQgKlEeOyhdPgU1X2gQ" name="operation" type="_9CVuRAKlEeOyhdPgU1X2gQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_9CVuSQKlEeOyhdPgU1X2gQ" name="Class">
      <ownedComment xmi:id="_9CVuSgKlEeOyhdPgU1X2gQ" annotatedElement="_9CVuSQKlEeOyhdPgU1X2gQ">
        <body>A class is a type that has objects as its instances.</body>
      </ownedComment>
      <generalization xmi:id="_9CVuSwKlEeOyhdPgU1X2gQ" general="_9CffQAKlEeOyhdPgU1X2gQ"/>
      <generalization xmi:id="_9C8LOwKlEeOyhdPgU1X2gQ" general="_9CyacAKlEeOyhdPgU1X2gQ"/>
      <ownedAttribute xmi:id="_9CVuTAKlEeOyhdPgU1X2gQ" name="isAbstract" type="_9C8LRAKlEeOyhdPgU1X2gQ">
        <ownedComment xmi:id="_9CVuTQKlEeOyhdPgU1X2gQ" annotatedElement="_9CVuTAKlEeOyhdPgU1X2gQ">
          <body>True when a class is abstract.</body>
        </ownedComment>
        <defaultValue xmi:type="uml:LiteralString" xmi:id="_9CVuTgKlEeOyhdPgU1X2gQ" value="false"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_9CVuTwKlEeOyhdPgU1X2gQ" name="ownedAttribute" type="_9CVubgKlEeOyhdPgU1X2gQ" isOrdered="true" aggregation="composite"
          association="_9CpQewKlEeOyhdPgU1X2gQ">
        <ownedComment xmi:id="_9CVuUAKlEeOyhdPgU1X2gQ" annotatedElement="_9CVuTwKlEeOyhdPgU1X2gQ">
          <body>The attributes owned by a class. These do not include the inherited attributes. Attributes are represented by instances of Property.</body>
        </ownedComment>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_9CVuUQKlEeOyhdPgU1X2gQ"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_9CVuUgKlEeOyhdPgU1X2gQ" value="*"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_9CVuUwKlEeOyhdPgU1X2gQ" name="ownedOperation" type="_9CVuRAKlEeOyhdPgU1X2gQ" isOrdered="true" aggregation="composite"
          association="_9CpQgAKlEeOyhdPgU1X2gQ">
        <ownedComment xmi:id="_9CVuVAKlEeOyhdPgU1X2gQ" annotatedElement="_9CVuUwKlEeOyhdPgU1X2gQ">
          <body>The operations owned by a class. These do not include the inherited operations.</body>
        </ownedComment>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_9CVuVQKlEeOyhdPgU1X2gQ"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_9CVuVgKlEeOyhdPgU1X2gQ" value="*"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_9CVuVwKlEeOyhdPgU1X2gQ" name="superClass" type="_9CVuSQKlEeOyhdPgU1X2gQ" association="_9CpQgQKlEeOyhdPgU1X2gQ">
        <ownedComment xmi:id="_9CVuWAKlEeOyhdPgU1X2gQ" annotatedElement="_9CVuVwKlEeOyhdPgU1X2gQ">
          <body>The immediate superclasses of a class, from which the class inherits.</body>
        </ownedComment>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_9CVuWQKlEeOyhdPgU1X2gQ"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_9CVuWgKlEeOyhdPgU1X2gQ" value="*"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_9C8LPAKlEeOyhdPgU1X2gQ" name="nestedType" type="_9CVuSQKlEeOyhdPgU1X2gQ" aggregation="composite">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_9C8LPQKlEeOyhdPgU1X2gQ"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_9C8LPgKlEeOyhdPgU1X2gQ" value="*"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_9DY3WgKlEeOyhdPgU1X2gQ" name="ownedBehavior" type="_9DY3WAKlEeOyhdPgU1X2gQ" aggregation="composite">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_9DY3WwKlEeOyhdPgU1X2gQ"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_9DY3XAKlEeOyhdPgU1X2gQ" value="*"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_9E4E4AKlEeOyhdPgU1X2gQ" name="isInterface" type="_9C8LRAKlEeOyhdPgU1X2gQ">
        <defaultValue xmi:type="uml:LiteralString" xmi:id="_9E4E4QKlEeOyhdPgU1X2gQ" value="false"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_9FBO0wKlEeOyhdPgU1X2gQ" name="instanceClassName" type="_9C8LOgKlEeOyhdPgU1X2gQ">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_9FBO1AKlEeOyhdPgU1X2gQ"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_9ERn_gKlEeOyhdPgU1X2gQ" name="CollectionItem">
      <generalization xmi:id="_9ERn_wKlEeOyhdPgU1X2gQ" general="_9ERn_AKlEeOyhdPgU1X2gQ"/>
      <ownedAttribute xmi:id="_9ERoAAKlEeOyhdPgU1X2gQ" name="item" type="_9EIeGwKlEeOyhdPgU1X2gQ" aggregation="composite"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_9ERn9gKlEeOyhdPgU1X2gQ" name="CollectionLiteralExp">
      <generalization xmi:id="_9ERn9wKlEeOyhdPgU1X2gQ" general="_9ERn8AKlEeOyhdPgU1X2gQ"/>
      <ownedAttribute xmi:id="_9ERn-AKlEeOyhdPgU1X2gQ" name="kind" type="_9EIeFQKlEeOyhdPgU1X2gQ"/>
      <ownedAttribute xmi:id="_9ERn-QKlEeOyhdPgU1X2gQ" name="part" type="_9ERn_AKlEeOyhdPgU1X2gQ" isOrdered="true" aggregation="composite">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_9ERn-gKlEeOyhdPgU1X2gQ"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_9ERn-wKlEeOyhdPgU1X2gQ" value="*"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_9ERn_AKlEeOyhdPgU1X2gQ" name="CollectionLiteralPart" isAbstract="true">
      <generalization xmi:id="_9ERn_QKlEeOyhdPgU1X2gQ" general="_9CpQQAKlEeOyhdPgU1X2gQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_9ERoAQKlEeOyhdPgU1X2gQ" name="CollectionRange">
      <generalization xmi:id="_9ERoAgKlEeOyhdPgU1X2gQ" general="_9ERn_AKlEeOyhdPgU1X2gQ"/>
      <ownedAttribute xmi:id="_9ERoAwKlEeOyhdPgU1X2gQ" name="first" type="_9EIeGwKlEeOyhdPgU1X2gQ" aggregation="composite"/>
      <ownedAttribute xmi:id="_9ERoBAKlEeOyhdPgU1X2gQ" name="last" type="_9EIeGwKlEeOyhdPgU1X2gQ" aggregation="composite"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_9Eki5QKlEeOyhdPgU1X2gQ" name="CollectionType">
      <generalization xmi:id="_9Eki5gKlEeOyhdPgU1X2gQ" general="_9CpQZAKlEeOyhdPgU1X2gQ"/>
      <ownedAttribute xmi:id="_9Eki5wKlEeOyhdPgU1X2gQ" name="elementType" type="_9CffQAKlEeOyhdPgU1X2gQ"/>
      <ownedAttribute xmi:id="_9Eki6AKlEeOyhdPgU1X2gQ" name="lower" type="_9C8LQgKlEeOyhdPgU1X2gQ">
        <defaultValue xmi:type="uml:LiteralString" xmi:id="_9Eki6QKlEeOyhdPgU1X2gQ" value="0"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_9Eki6gKlEeOyhdPgU1X2gQ" name="upper" type="_9C8LRwKlEeOyhdPgU1X2gQ">
        <defaultValue xmi:type="uml:LiteralString" xmi:id="_9Eki6wKlEeOyhdPgU1X2gQ" value="*"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_9CpQbQKlEeOyhdPgU1X2gQ" name="Comment">
      <ownedComment xmi:id="_9CpQbgKlEeOyhdPgU1X2gQ" annotatedElement="_9CpQbQKlEeOyhdPgU1X2gQ">
        <body>A comment is a textual annotation that can be attached to a set of elements.</body>
      </ownedComment>
      <generalization xmi:id="_9CpQbwKlEeOyhdPgU1X2gQ" general="_9CpQZwKlEeOyhdPgU1X2gQ"/>
      <ownedAttribute xmi:id="_9CpQcAKlEeOyhdPgU1X2gQ" name="body" type="_9C8LOgKlEeOyhdPgU1X2gQ">
        <ownedComment xmi:id="_9CpQcQKlEeOyhdPgU1X2gQ" annotatedElement="_9CpQcAKlEeOyhdPgU1X2gQ">
          <body>Specifies a string that is the comment.</body>
        </ownedComment>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_9CpQcgKlEeOyhdPgU1X2gQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_9CpQcwKlEeOyhdPgU1X2gQ" name="annotatedElement" type="_9CpQZwKlEeOyhdPgU1X2gQ" association="_9CpQjAKlEeOyhdPgU1X2gQ">
        <ownedComment xmi:id="_9CpQdAKlEeOyhdPgU1X2gQ" annotatedElement="_9CpQcwKlEeOyhdPgU1X2gQ">
          <body>References the Element(s) being commented.</body>
        </ownedComment>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_9CpQdQKlEeOyhdPgU1X2gQ"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_9CpQdgKlEeOyhdPgU1X2gQ" value="*"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_9DPGXAKlEeOyhdPgU1X2gQ" name="ConnectionPointReference">
      <ownedComment xmi:id="_9DPGXQKlEeOyhdPgU1X2gQ" annotatedElement="_9DPGXAKlEeOyhdPgU1X2gQ">
        <body>A connection point reference represents a usage (as part of a submachine state) of an entry/exit point defined in the statemachine reference by the submachine state.</body>
      </ownedComment>
      <generalization xmi:id="_9DPGZAKlEeOyhdPgU1X2gQ" general="_9DFVjAKlEeOyhdPgU1X2gQ"/>
      <ownedAttribute xmi:id="_9DPGZQKlEeOyhdPgU1X2gQ" name="entry" type="_9DPGIAKlEeOyhdPgU1X2gQ">
        <ownedComment xmi:id="_9DPGZgKlEeOyhdPgU1X2gQ" annotatedElement="_9DPGZQKlEeOyhdPgU1X2gQ">
          <body>The entryPoint kind pseudo states corresponding to this connection point.</body>
        </ownedComment>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_9DPGZwKlEeOyhdPgU1X2gQ"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_9DPGaAKlEeOyhdPgU1X2gQ" value="*"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_9DPGaQKlEeOyhdPgU1X2gQ" name="state" type="_9DFVIAKlEeOyhdPgU1X2gQ">
        <ownedComment xmi:id="_9DPGagKlEeOyhdPgU1X2gQ" annotatedElement="_9DPGaQKlEeOyhdPgU1X2gQ">
          <body>The State in which the connection point refreshens are defined.</body>
        </ownedComment>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_9DPGawKlEeOyhdPgU1X2gQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_9DPGbAKlEeOyhdPgU1X2gQ" name="exit" type="_9DPGIAKlEeOyhdPgU1X2gQ">
        <ownedComment xmi:id="_9DPGbQKlEeOyhdPgU1X2gQ" annotatedElement="_9DPGbAKlEeOyhdPgU1X2gQ">
          <body>The exitPoints kind pseudo states corresponding to this connection point.</body>
        </ownedComment>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_9DPGbgKlEeOyhdPgU1X2gQ"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_9DPGbwKlEeOyhdPgU1X2gQ" value="*"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_9CyaMAKlEeOyhdPgU1X2gQ" name="Constraint">
      <ownedComment xmi:id="_9CyaMQKlEeOyhdPgU1X2gQ" annotatedElement="_9CyaMAKlEeOyhdPgU1X2gQ">
        <body>A constraint is a condition or restriction expressed in natural language text or in a machine readable language for the purpose of declaring some of the semantics of an element.</body>
      </ownedComment>
      <generalization xmi:id="_9CyaOAKlEeOyhdPgU1X2gQ" general="_9CVuQwKlEeOyhdPgU1X2gQ"/>
      <ownedAttribute xmi:id="_9CyaOQKlEeOyhdPgU1X2gQ" name="constrainedElement" type="_9CpQZwKlEeOyhdPgU1X2gQ" isOrdered="true">
        <ownedComment xmi:id="_9CyaOgKlEeOyhdPgU1X2gQ" annotatedElement="_9CyaOQKlEeOyhdPgU1X2gQ">
          <body>The ordered set of Elements referenced by this Constraint.</body>
        </ownedComment>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_9CyaOwKlEeOyhdPgU1X2gQ"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_9CyaPAKlEeOyhdPgU1X2gQ" value="*"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_9CyaPQKlEeOyhdPgU1X2gQ" name="specification" type="_9CyaYgKlEeOyhdPgU1X2gQ" aggregation="composite">
        <ownedComment xmi:id="_9CyaPgKlEeOyhdPgU1X2gQ" annotatedElement="_9CyaPQKlEeOyhdPgU1X2gQ">
          <body>A condition that must be true when evaluated in order for the constraint to be satisfied.</body>
        </ownedComment>
      </ownedAttribute>
      <ownedAttribute xmi:id="_9CyaPwKlEeOyhdPgU1X2gQ" name="context" type="_9CyacAKlEeOyhdPgU1X2gQ" isDerived="true">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_9CyaQAKlEeOyhdPgU1X2gQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_9E4E-AKlEeOyhdPgU1X2gQ" name="isCallable" type="_9C8LRAKlEeOyhdPgU1X2gQ">
        <defaultValue xmi:type="uml:LiteralString" xmi:id="_9E4E-QKlEeOyhdPgU1X2gQ" value="false"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_9EbY_QKlEeOyhdPgU1X2gQ" name="ConstructorExp">
      <generalization xmi:id="_9EbY_gKlEeOyhdPgU1X2gQ" general="_9EIeGwKlEeOyhdPgU1X2gQ"/>
      <ownedAttribute xmi:id="_9EbY_wKlEeOyhdPgU1X2gQ" name="part" type="_9EbZBAKlEeOyhdPgU1X2gQ" isOrdered="true" aggregation="composite">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_9EbZAAKlEeOyhdPgU1X2gQ"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_9EbZAQKlEeOyhdPgU1X2gQ" value="*"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_9EbZAgKlEeOyhdPgU1X2gQ" name="value" type="_9C8LOgKlEeOyhdPgU1X2gQ">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_9EbZAwKlEeOyhdPgU1X2gQ"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_9EbZBAKlEeOyhdPgU1X2gQ" name="ConstructorPart">
      <generalization xmi:id="_9EbZBQKlEeOyhdPgU1X2gQ" general="_9CpQQAKlEeOyhdPgU1X2gQ"/>
      <ownedAttribute xmi:id="_9EbZBgKlEeOyhdPgU1X2gQ" name="referredProperty" type="_9CVubgKlEeOyhdPgU1X2gQ"/>
      <ownedAttribute xmi:id="_9EbZBwKlEeOyhdPgU1X2gQ" name="initExpression" type="_9EIeGwKlEeOyhdPgU1X2gQ" aggregation="composite"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_9CpQZAKlEeOyhdPgU1X2gQ" name="DataType">
      <ownedComment xmi:id="_9CpQZQKlEeOyhdPgU1X2gQ" annotatedElement="_9CpQZAKlEeOyhdPgU1X2gQ">
        <body>DataType is an abstract class that acts as a common superclass for different kinds of data types.</body>
      </ownedComment>
      <generalization xmi:id="_9CpQZgKlEeOyhdPgU1X2gQ" general="_9CffQAKlEeOyhdPgU1X2gQ"/>
      <generalization xmi:id="_9D-tCwKlEeOyhdPgU1X2gQ" general="_9CVuSQKlEeOyhdPgU1X2gQ"/>
      <ownedAttribute xmi:id="_9E4E4gKlEeOyhdPgU1X2gQ" name="isSerializable" type="_9C8LRAKlEeOyhdPgU1X2gQ">
        <defaultValue xmi:type="uml:LiteralString" xmi:id="_9E4E4wKlEeOyhdPgU1X2gQ" value="true"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_9E4E5AKlEeOyhdPgU1X2gQ" name="behavioralType" type="_9CffQAKlEeOyhdPgU1X2gQ">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_9E4E5QKlEeOyhdPgU1X2gQ"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_9EuT7gKlEeOyhdPgU1X2gQ" name="Detail">
      <generalization xmi:id="_9EuT7wKlEeOyhdPgU1X2gQ" general="_9CVuQwKlEeOyhdPgU1X2gQ"/>
      <ownedAttribute xmi:id="_9EuT8AKlEeOyhdPgU1X2gQ" name="value" type="_9C8LOgKlEeOyhdPgU1X2gQ">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_9EuT8QKlEeOyhdPgU1X2gQ" value="*"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_9EuT_QKlEeOyhdPgU1X2gQ" name="DynamicElement">
      <generalization xmi:id="_9EuT_gKlEeOyhdPgU1X2gQ" general="_9CpQZwKlEeOyhdPgU1X2gQ"/>
      <ownedAttribute xmi:id="_9EuT_wKlEeOyhdPgU1X2gQ" name="metaType" type="_9CffQAKlEeOyhdPgU1X2gQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_9EuUAAKlEeOyhdPgU1X2gQ" name="DynamicProperty">
      <generalization xmi:id="_9EuUAQKlEeOyhdPgU1X2gQ" general="_9CpQZwKlEeOyhdPgU1X2gQ"/>
      <ownedAttribute xmi:id="_9EuUAgKlEeOyhdPgU1X2gQ" name="referredProperty" type="_9CVubgKlEeOyhdPgU1X2gQ"/>
      <ownedAttribute xmi:id="_9EuUAwKlEeOyhdPgU1X2gQ" name="default" type="_9C8LOgKlEeOyhdPgU1X2gQ">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_9EuUBAKlEeOyhdPgU1X2gQ"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_9EuUBQKlEeOyhdPgU1X2gQ" name="DynamicType">
      <generalization xmi:id="_9EuUBgKlEeOyhdPgU1X2gQ" general="_9EuT_QKlEeOyhdPgU1X2gQ"/>
      <generalization xmi:id="_9EuUBwKlEeOyhdPgU1X2gQ" general="_9CffQAKlEeOyhdPgU1X2gQ"/>
      <ownedAttribute xmi:id="_9EuUCAKlEeOyhdPgU1X2gQ" name="metaType" type="_9CffQAKlEeOyhdPgU1X2gQ"/>
      <ownedAttribute xmi:id="_9EuUCQKlEeOyhdPgU1X2gQ" name="ownedProperty" type="_9EuUAAKlEeOyhdPgU1X2gQ" aggregation="composite">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_9EuUCgKlEeOyhdPgU1X2gQ"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_9EuUCwKlEeOyhdPgU1X2gQ" value="*"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_9CpQZwKlEeOyhdPgU1X2gQ" clientDependency="_9FUJ1gKlEeOyhdPgU1X2gQ" name="Element" isAbstract="true">
      <ownedComment xmi:id="_9CpQaAKlEeOyhdPgU1X2gQ" annotatedElement="_9CpQZwKlEeOyhdPgU1X2gQ">
        <body>An element is a constituent of a model.</body>
      </ownedComment>
      <ownedAttribute xmi:id="_9CpQaQKlEeOyhdPgU1X2gQ" name="ownedComment" type="_9CpQbQKlEeOyhdPgU1X2gQ" aggregation="composite" association="_9CpQkAKlEeOyhdPgU1X2gQ">
        <ownedComment xmi:id="_9CpQagKlEeOyhdPgU1X2gQ" annotatedElement="_9CpQaQKlEeOyhdPgU1X2gQ">
          <body>The Comments owned by this element.</body>
        </ownedComment>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_9CpQawKlEeOyhdPgU1X2gQ"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_9CpQbAKlEeOyhdPgU1X2gQ" value="*"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_9FUJxgKlEeOyhdPgU1X2gQ" name="extension" type="_9FUJyQKlEeOyhdPgU1X2gQ" aggregation="composite" association="_9FUJzwKlEeOyhdPgU1X2gQ">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_9FUJxwKlEeOyhdPgU1X2gQ"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_9FUJyAKlEeOyhdPgU1X2gQ" value="*"/>
      </ownedAttribute>
      <interfaceRealization xmi:id="_9FUJ1gKlEeOyhdPgU1X2gQ" client="_9CpQZwKlEeOyhdPgU1X2gQ" supplier="_9FUJ1wKlEeOyhdPgU1X2gQ" contract="_9FUJ1wKlEeOyhdPgU1X2gQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_9FUJyQKlEeOyhdPgU1X2gQ" name="ElementExtension">
      <generalization xmi:id="_9FUJygKlEeOyhdPgU1X2gQ" general="_9CffQAKlEeOyhdPgU1X2gQ"/>
      <ownedAttribute xmi:id="_9FUJywKlEeOyhdPgU1X2gQ" name="base" type="_9CpQZwKlEeOyhdPgU1X2gQ" association="_9FUJzwKlEeOyhdPgU1X2gQ"/>
      <ownedAttribute xmi:id="_9FUJzAKlEeOyhdPgU1X2gQ" name="stereotype" type="_9CffQAKlEeOyhdPgU1X2gQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_9EIeIAKlEeOyhdPgU1X2gQ" name="EnumLiteralExp">
      <generalization xmi:id="_9EIeIQKlEeOyhdPgU1X2gQ" general="_9ERn8AKlEeOyhdPgU1X2gQ"/>
      <ownedAttribute xmi:id="_9EIeIgKlEeOyhdPgU1X2gQ" name="referredEnumLiteral" type="_9CpQTQKlEeOyhdPgU1X2gQ">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_9EIeIwKlEeOyhdPgU1X2gQ"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_9CpQRgKlEeOyhdPgU1X2gQ" name="Enumeration">
      <ownedComment xmi:id="_9CpQRwKlEeOyhdPgU1X2gQ" annotatedElement="_9CpQRgKlEeOyhdPgU1X2gQ">
        <body>An enumeration defines a set of literals that can be used as its values.</body>
      </ownedComment>
      <generalization xmi:id="_9CpQSAKlEeOyhdPgU1X2gQ" general="_9CpQZAKlEeOyhdPgU1X2gQ"/>
      <ownedAttribute xmi:id="_9CpQSQKlEeOyhdPgU1X2gQ" name="ownedLiteral" type="_9CpQTQKlEeOyhdPgU1X2gQ" isOrdered="true" aggregation="composite"
          association="_9CpQiQKlEeOyhdPgU1X2gQ">
        <ownedComment xmi:id="_9CpQSgKlEeOyhdPgU1X2gQ" annotatedElement="_9CpQSQKlEeOyhdPgU1X2gQ">
          <body>The ordered set of literals for this Enumeration.</body>
        </ownedComment>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_9CpQSwKlEeOyhdPgU1X2gQ"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_9CpQTAKlEeOyhdPgU1X2gQ" value="*"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_9CpQTQKlEeOyhdPgU1X2gQ" name="EnumerationLiteral">
      <ownedComment xmi:id="_9CpQTgKlEeOyhdPgU1X2gQ" annotatedElement="_9CpQTQKlEeOyhdPgU1X2gQ">
        <body>An enumeration literal is a value of an enumeration.</body>
      </ownedComment>
      <generalization xmi:id="_9CpQTwKlEeOyhdPgU1X2gQ" general="_9CVuQwKlEeOyhdPgU1X2gQ"/>
      <ownedAttribute xmi:id="_9CpQUAKlEeOyhdPgU1X2gQ" name="enumeration" type="_9CpQRgKlEeOyhdPgU1X2gQ" association="_9CpQiQKlEeOyhdPgU1X2gQ">
        <ownedComment xmi:id="_9CpQUQKlEeOyhdPgU1X2gQ" annotatedElement="_9CpQUAKlEeOyhdPgU1X2gQ">
          <body>The Enumeration that this EnumerationLiteral is a member of.</body>
        </ownedComment>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_9CpQUgKlEeOyhdPgU1X2gQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_9E4E5gKlEeOyhdPgU1X2gQ" name="value" type="_9C8LQgKlEeOyhdPgU1X2gQ">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_9E4E5wKlEeOyhdPgU1X2gQ"/>
        <defaultValue xmi:type="uml:LiteralString" xmi:id="_9E4E6AKlEeOyhdPgU1X2gQ" value="0"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_9EIeCgKlEeOyhdPgU1X2gQ" name="ExpressionInOCL">
      <generalization xmi:id="_9ERoDAKlEeOyhdPgU1X2gQ" general="_9CyaYgKlEeOyhdPgU1X2gQ"/>
      <ownedAttribute xmi:id="_9ERoDQKlEeOyhdPgU1X2gQ" name="bodyExpression" type="_9EIeGwKlEeOyhdPgU1X2gQ" aggregation="composite"/>
      <ownedAttribute xmi:id="_9ERoDgKlEeOyhdPgU1X2gQ" name="contextVariable" type="_9EIeLQKlEeOyhdPgU1X2gQ" aggregation="composite">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_9ERoDwKlEeOyhdPgU1X2gQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_9ERoEAKlEeOyhdPgU1X2gQ" name="resultVariable" type="_9EIeLQKlEeOyhdPgU1X2gQ" aggregation="composite">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_9ERoEQKlEeOyhdPgU1X2gQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_9ERoEgKlEeOyhdPgU1X2gQ" name="parameterVariable" type="_9EIeLQKlEeOyhdPgU1X2gQ" isOrdered="true" aggregation="composite">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_9ERoEwKlEeOyhdPgU1X2gQ"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_9ERoFAKlEeOyhdPgU1X2gQ" value="*"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_9EuT9QKlEeOyhdPgU1X2gQ" name="messageExpression" type="_9EIeGwKlEeOyhdPgU1X2gQ" aggregation="composite">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_9EuT9gKlEeOyhdPgU1X2gQ"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_9DiBEAKlEeOyhdPgU1X2gQ" name="Feature" isAbstract="true">
      <generalization xmi:id="_9DiBEQKlEeOyhdPgU1X2gQ" general="_9CVuQwKlEeOyhdPgU1X2gQ"/>
      <generalization xmi:id="_9FUJ0AKlEeOyhdPgU1X2gQ" general="_9FUJ1AKlEeOyhdPgU1X2gQ"/>
      <ownedAttribute xmi:id="_9DiBEgKlEeOyhdPgU1X2gQ" name="isStatic" type="_9C8LRAKlEeOyhdPgU1X2gQ"/>
      <ownedAttribute xmi:id="_9E4E-gKlEeOyhdPgU1X2gQ" name="implementationClass" type="_9C8LOgKlEeOyhdPgU1X2gQ">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_9E4E-wKlEeOyhdPgU1X2gQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_9E4E_AKlEeOyhdPgU1X2gQ" name="implementation" type="_9E4E_gKlEeOyhdPgU1X2gQ">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_9E4E_QKlEeOyhdPgU1X2gQ"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_9ERoFwKlEeOyhdPgU1X2gQ" name="FeatureCallExp" isAbstract="true">
      <generalization xmi:id="_9ERoGAKlEeOyhdPgU1X2gQ" general="_9EIeDgKlEeOyhdPgU1X2gQ"/>
      <ownedAttribute xmi:id="_9ERoGQKlEeOyhdPgU1X2gQ" name="isPre" type="_9C8LRAKlEeOyhdPgU1X2gQ">
        <defaultValue xmi:type="uml:LiteralString" xmi:id="_9ERoGgKlEeOyhdPgU1X2gQ" value="false"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_9DPGRwKlEeOyhdPgU1X2gQ" name="FinalState">
      <ownedComment xmi:id="_9DPGSAKlEeOyhdPgU1X2gQ" annotatedElement="_9DPGRwKlEeOyhdPgU1X2gQ">
        <body>A special kind of state signifying that the enclosing region is completed. If the enclosing region is directly contained in a state machine and all other regions in the state machine also are completed, then it means that the entire state machine is completed.</body>
      </ownedComment>
      <generalization xmi:id="_9DPGWwKlEeOyhdPgU1X2gQ" general="_9DFVIAKlEeOyhdPgU1X2gQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_9EIeJAKlEeOyhdPgU1X2gQ" name="IfExp">
      <generalization xmi:id="_9EIeJQKlEeOyhdPgU1X2gQ" general="_9EIeGwKlEeOyhdPgU1X2gQ"/>
      <ownedAttribute xmi:id="_9EIeJgKlEeOyhdPgU1X2gQ" name="condition" type="_9EIeGwKlEeOyhdPgU1X2gQ" aggregation="composite"/>
      <ownedAttribute xmi:id="_9EIeJwKlEeOyhdPgU1X2gQ" name="thenExpression" type="_9EIeGwKlEeOyhdPgU1X2gQ" aggregation="composite"/>
      <ownedAttribute xmi:id="_9EIeKAKlEeOyhdPgU1X2gQ" name="elseExpression" type="_9EIeGwKlEeOyhdPgU1X2gQ" aggregation="composite"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_9CyadAKlEeOyhdPgU1X2gQ" name="Import">
      <generalization xmi:id="_9CyadQKlEeOyhdPgU1X2gQ" general="_9CVuQwKlEeOyhdPgU1X2gQ"/>
      <ownedAttribute xmi:id="_9CyadgKlEeOyhdPgU1X2gQ" name="importedNamespace" type="_9CyacAKlEeOyhdPgU1X2gQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_9EIeSgKlEeOyhdPgU1X2gQ" name="IntegerLiteralExp">
      <generalization xmi:id="_9EIeSwKlEeOyhdPgU1X2gQ" general="_9ERn9AKlEeOyhdPgU1X2gQ"/>
      <ownedAttribute xmi:id="_9EIeTAKlEeOyhdPgU1X2gQ" name="integerSymbol" type="_9C8LQgKlEeOyhdPgU1X2gQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_9ERoFQKlEeOyhdPgU1X2gQ" name="InvalidLiteralExp">
      <generalization xmi:id="_9ERoFgKlEeOyhdPgU1X2gQ" general="_9ERn8AKlEeOyhdPgU1X2gQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_9Eki7AKlEeOyhdPgU1X2gQ" name="InvalidType">
      <generalization xmi:id="_9Eki7QKlEeOyhdPgU1X2gQ" general="_9CVuSQKlEeOyhdPgU1X2gQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_9EbY9wKlEeOyhdPgU1X2gQ" clientDependency="_9FK_4AKlEeOyhdPgU1X2gQ" name="IterateExp">
      <generalization xmi:id="_9EbY-AKlEeOyhdPgU1X2gQ" general="_9EIePwKlEeOyhdPgU1X2gQ"/>
      <ownedAttribute xmi:id="_9EbY-QKlEeOyhdPgU1X2gQ" name="result" type="_9EIeLQKlEeOyhdPgU1X2gQ" isOrdered="true" aggregation="composite">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_9EbY-gKlEeOyhdPgU1X2gQ"/>
      </ownedAttribute>
      <interfaceRealization xmi:id="_9FK_4AKlEeOyhdPgU1X2gQ" client="_9EbY9wKlEeOyhdPgU1X2gQ" supplier="_9FUJwAKlEeOyhdPgU1X2gQ" contract="_9FUJwAKlEeOyhdPgU1X2gQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_9EbZCAKlEeOyhdPgU1X2gQ" name="Iteration">
      <generalization xmi:id="_9EbZCQKlEeOyhdPgU1X2gQ" general="_9CVuRAKlEeOyhdPgU1X2gQ"/>
      <ownedAttribute xmi:id="_9EbZCgKlEeOyhdPgU1X2gQ" name="ownedIterator" type="_9CVuaAKlEeOyhdPgU1X2gQ" isOrdered="true" aggregation="composite">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_9EbZCwKlEeOyhdPgU1X2gQ"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_9EbZDAKlEeOyhdPgU1X2gQ" value="*"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_9EbZDQKlEeOyhdPgU1X2gQ" name="ownedAccumulator" type="_9CVuaAKlEeOyhdPgU1X2gQ" isOrdered="true" aggregation="composite">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_9EbZDgKlEeOyhdPgU1X2gQ"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_9EbZDwKlEeOyhdPgU1X2gQ" value="*"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_9EbY-wKlEeOyhdPgU1X2gQ" clientDependency="_9FK_4QKlEeOyhdPgU1X2gQ" name="IteratorExp">
      <generalization xmi:id="_9EbY_AKlEeOyhdPgU1X2gQ" general="_9EIePwKlEeOyhdPgU1X2gQ"/>
      <interfaceRealization xmi:id="_9FK_4QKlEeOyhdPgU1X2gQ" client="_9EbY-wKlEeOyhdPgU1X2gQ" supplier="_9FUJwAKlEeOyhdPgU1X2gQ" contract="_9FUJwAKlEeOyhdPgU1X2gQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_9Eki7gKlEeOyhdPgU1X2gQ" name="LambdaType">
      <generalization xmi:id="_9Eki7wKlEeOyhdPgU1X2gQ" general="_9CpQZAKlEeOyhdPgU1X2gQ"/>
      <ownedAttribute xmi:id="_9Eki8AKlEeOyhdPgU1X2gQ" name="contextType" type="_9CffQAKlEeOyhdPgU1X2gQ"/>
      <ownedAttribute xmi:id="_9Eki8QKlEeOyhdPgU1X2gQ" name="parameterType" type="_9CffQAKlEeOyhdPgU1X2gQ" isOrdered="true" isUnique="false">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_9Eki8gKlEeOyhdPgU1X2gQ"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_9Eki8wKlEeOyhdPgU1X2gQ" value="*"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_9Eki9AKlEeOyhdPgU1X2gQ" name="resultType" type="_9CffQAKlEeOyhdPgU1X2gQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_9EIeKQKlEeOyhdPgU1X2gQ" name="LetExp">
      <generalization xmi:id="_9EIeKgKlEeOyhdPgU1X2gQ" general="_9EIeGwKlEeOyhdPgU1X2gQ"/>
      <ownedAttribute xmi:id="_9EIeKwKlEeOyhdPgU1X2gQ" name="in" type="_9EIeGwKlEeOyhdPgU1X2gQ" aggregation="composite"/>
      <ownedAttribute xmi:id="_9EIeLAKlEeOyhdPgU1X2gQ" name="variable" type="_9EIeLQKlEeOyhdPgU1X2gQ" aggregation="composite"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_9EbZEAKlEeOyhdPgU1X2gQ" name="Library">
      <generalization xmi:id="_9EbZEQKlEeOyhdPgU1X2gQ" general="_9CpQVgKlEeOyhdPgU1X2gQ"/>
      <ownedAttribute xmi:id="_9FBO8AKlEeOyhdPgU1X2gQ" name="ownedPrecedence" type="_9FBO8wKlEeOyhdPgU1X2gQ" isOrdered="true" aggregation="composite">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_9FBO8QKlEeOyhdPgU1X2gQ"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_9FBO8gKlEeOyhdPgU1X2gQ" value="*"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_9ERn8AKlEeOyhdPgU1X2gQ" name="LiteralExp" isAbstract="true">
      <generalization xmi:id="_9ERn8QKlEeOyhdPgU1X2gQ" general="_9EIeGwKlEeOyhdPgU1X2gQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_9EIePwKlEeOyhdPgU1X2gQ" name="LoopExp" isAbstract="true">
      <generalization xmi:id="_9EIeQAKlEeOyhdPgU1X2gQ" general="_9EIeDgKlEeOyhdPgU1X2gQ"/>
      <ownedAttribute xmi:id="_9EIeQQKlEeOyhdPgU1X2gQ" name="body" type="_9EIeGwKlEeOyhdPgU1X2gQ" aggregation="composite"/>
      <ownedAttribute xmi:id="_9EIeQgKlEeOyhdPgU1X2gQ" name="iterator" type="_9EIeLQKlEeOyhdPgU1X2gQ" isOrdered="true" aggregation="composite">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_9EIeQwKlEeOyhdPgU1X2gQ"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_9EIeRAKlEeOyhdPgU1X2gQ" value="*"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_9EIeRQKlEeOyhdPgU1X2gQ" name="referredIteration" type="_9EbZCAKlEeOyhdPgU1X2gQ">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_9EIeRgKlEeOyhdPgU1X2gQ"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_9ERoKgKlEeOyhdPgU1X2gQ" name="MessageExp">
      <generalization xmi:id="_9ERoKwKlEeOyhdPgU1X2gQ" general="_9EIeGwKlEeOyhdPgU1X2gQ"/>
      <ownedAttribute xmi:id="_9ERoLAKlEeOyhdPgU1X2gQ" name="target" type="_9EIeGwKlEeOyhdPgU1X2gQ" aggregation="composite"/>
      <ownedAttribute xmi:id="_9ERoLQKlEeOyhdPgU1X2gQ" name="argument" type="_9EIeGwKlEeOyhdPgU1X2gQ" isOrdered="true" aggregation="composite">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_9ERoLgKlEeOyhdPgU1X2gQ"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_9ERoLwKlEeOyhdPgU1X2gQ" value="*"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_9ERoMAKlEeOyhdPgU1X2gQ" name="calledOperation" type="_9CVuQAKlEeOyhdPgU1X2gQ" aggregation="composite">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_9ERoMQKlEeOyhdPgU1X2gQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_9ERoMgKlEeOyhdPgU1X2gQ" name="sentSignal" type="_9CVuRQKlEeOyhdPgU1X2gQ" aggregation="composite">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_9ERoMwKlEeOyhdPgU1X2gQ"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_9Eki9QKlEeOyhdPgU1X2gQ" name="MessageType">
      <generalization xmi:id="_9Eki9gKlEeOyhdPgU1X2gQ" general="_9CffQAKlEeOyhdPgU1X2gQ"/>
      <ownedAttribute xmi:id="_9Eki9wKlEeOyhdPgU1X2gQ" name="referredSignal" type="_9CVuSAKlEeOyhdPgU1X2gQ">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_9Eki-AKlEeOyhdPgU1X2gQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_9Eki-QKlEeOyhdPgU1X2gQ" name="referredOperation" type="_9CVuRAKlEeOyhdPgU1X2gQ">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_9Eki-gKlEeOyhdPgU1X2gQ"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_9Eki-wKlEeOyhdPgU1X2gQ" name="Metaclass">
      <ownedTemplateSignature xmi:type="uml:RedefinableTemplateSignature" xmi:id="_9Eki_AKlEeOyhdPgU1X2gQ" parameter="_9Eki_QKlEeOyhdPgU1X2gQ">
        <ownedParameter xmi:type="uml:ClassifierTemplateParameter" xmi:id="_9Eki_QKlEeOyhdPgU1X2gQ" parameteredElement="_9Eki_gKlEeOyhdPgU1X2gQ">
          <ownedParameteredElement xmi:type="uml:Class" xmi:id="_9Eki_gKlEeOyhdPgU1X2gQ" name="T" templateParameter="_9Eki_QKlEeOyhdPgU1X2gQ"/>
        </ownedParameter>
      </ownedTemplateSignature>
      <generalization xmi:id="_9Eki_wKlEeOyhdPgU1X2gQ" general="_9CVuSQKlEeOyhdPgU1X2gQ"/>
      <ownedAttribute xmi:id="_9EkjAAKlEeOyhdPgU1X2gQ" name="instanceType" type="_9CffQAKlEeOyhdPgU1X2gQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_9CVuQwKlEeOyhdPgU1X2gQ" clientDependency="_9FBO1wKlEeOyhdPgU1X2gQ" name="NamedElement"
        isAbstract="true">
      <ownedComment xmi:id="_9CffRgKlEeOyhdPgU1X2gQ" annotatedElement="_9CVuQwKlEeOyhdPgU1X2gQ">
        <body>A named element represents an element with a name.</body>
      </ownedComment>
      <generalization xmi:id="_9CffRwKlEeOyhdPgU1X2gQ" general="_9CpQZwKlEeOyhdPgU1X2gQ"/>
      <ownedAttribute xmi:id="_9CffSAKlEeOyhdPgU1X2gQ" name="name" type="_9C8LOgKlEeOyhdPgU1X2gQ">
        <ownedComment xmi:id="_9CffSQKlEeOyhdPgU1X2gQ" annotatedElement="_9CffSAKlEeOyhdPgU1X2gQ">
          <body>The name of the NamedElement.</body>
        </ownedComment>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_9CffSgKlEeOyhdPgU1X2gQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_9DiBEwKlEeOyhdPgU1X2gQ" name="isStatic" type="_9C8LRAKlEeOyhdPgU1X2gQ"/>
      <ownedAttribute xmi:id="_9EuT8gKlEeOyhdPgU1X2gQ" name="ownedAnnotation" type="_9EuT4wKlEeOyhdPgU1X2gQ" isOrdered="true" aggregation="composite">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_9EuT8wKlEeOyhdPgU1X2gQ"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_9EuT9AKlEeOyhdPgU1X2gQ" value="*"/>
      </ownedAttribute>
      <interfaceRealization xmi:id="_9FBO1wKlEeOyhdPgU1X2gQ" name="" client="_9CVuQwKlEeOyhdPgU1X2gQ" supplier="_9FBO1gKlEeOyhdPgU1X2gQ"
          contract="_9FBO1gKlEeOyhdPgU1X2gQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_9CyacAKlEeOyhdPgU1X2gQ" name="Namespace" isAbstract="true">
      <generalization xmi:id="_9C8LPwKlEeOyhdPgU1X2gQ" general="_9CVuQwKlEeOyhdPgU1X2gQ"/>
      <ownedAttribute xmi:id="_9CyacQKlEeOyhdPgU1X2gQ" name="ownedRule" type="_9CyaMAKlEeOyhdPgU1X2gQ" isOrdered="true" aggregation="composite">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_9CyacgKlEeOyhdPgU1X2gQ"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_9CyacwKlEeOyhdPgU1X2gQ" value="*"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_9ERoHwKlEeOyhdPgU1X2gQ" name="NavigationCallExp" isAbstract="true">
      <generalization xmi:id="_9ERoIAKlEeOyhdPgU1X2gQ" general="_9ERoFwKlEeOyhdPgU1X2gQ"/>
      <ownedAttribute xmi:id="_9ERoIQKlEeOyhdPgU1X2gQ" name="qualifier" type="_9EIeGwKlEeOyhdPgU1X2gQ" isOrdered="true">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_9ERoIgKlEeOyhdPgU1X2gQ"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_9ERoIwKlEeOyhdPgU1X2gQ" value="*"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_9ERoJAKlEeOyhdPgU1X2gQ" name="navigationSource" type="_9CVubgKlEeOyhdPgU1X2gQ" isOrdered="true">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_9ERoJQKlEeOyhdPgU1X2gQ"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_9ERoCgKlEeOyhdPgU1X2gQ" name="NullLiteralExp">
      <generalization xmi:id="_9ERoCwKlEeOyhdPgU1X2gQ" general="_9ERn8gKlEeOyhdPgU1X2gQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_9ERn9AKlEeOyhdPgU1X2gQ" name="NumericLiteralExp" isAbstract="true">
      <generalization xmi:id="_9ERn9QKlEeOyhdPgU1X2gQ" general="_9ERn8gKlEeOyhdPgU1X2gQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_9EIeGwKlEeOyhdPgU1X2gQ" name="OCLExpression" isAbstract="true">
      <generalization xmi:id="_9EIeHAKlEeOyhdPgU1X2gQ" general="_9CpQQAKlEeOyhdPgU1X2gQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_9CyaYgKlEeOyhdPgU1X2gQ" name="OpaqueExpression">
      <ownedComment xmi:id="_9CyaYwKlEeOyhdPgU1X2gQ" annotatedElement="_9CyaYgKlEeOyhdPgU1X2gQ">
        <body>An opaque expression is an uninterpreted textual statement that denotes a (possibly empty) set of values when evaluated in a context.</body>
      </ownedComment>
      <generalization xmi:id="_9CyaZwKlEeOyhdPgU1X2gQ" general="_9CyaQQKlEeOyhdPgU1X2gQ"/>
      <ownedAttribute xmi:id="_9CyaaAKlEeOyhdPgU1X2gQ" name="body" type="_9C8LOgKlEeOyhdPgU1X2gQ" isOrdered="true" isUnique="false" aggregation="composite">
        <ownedComment xmi:id="_9CyaaQKlEeOyhdPgU1X2gQ" annotatedElement="_9CyaaAKlEeOyhdPgU1X2gQ">
          <body>The text of the expression, possibly in multiple languages.</body>
        </ownedComment>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_9CyaagKlEeOyhdPgU1X2gQ"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_9CyaawKlEeOyhdPgU1X2gQ" value="*"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_9CyabAKlEeOyhdPgU1X2gQ" name="language" type="_9C8LOgKlEeOyhdPgU1X2gQ" isOrdered="true" aggregation="composite">
        <ownedComment xmi:id="_9CyabQKlEeOyhdPgU1X2gQ" annotatedElement="_9CyabAKlEeOyhdPgU1X2gQ">
          <body>Specifies the languages in which the expression is stated. The interpretation of the expression body depends on the languages. If the languages are unspecified, they might be implicit from the expression body or the context. Languages are matched to body strings by order.</body>
        </ownedComment>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_9CyabgKlEeOyhdPgU1X2gQ"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_9CyabwKlEeOyhdPgU1X2gQ" value="*"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_9EuT9wKlEeOyhdPgU1X2gQ" name="message" type="_9C8LOgKlEeOyhdPgU1X2gQ" isOrdered="true" isUnique="false">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_9EuT-AKlEeOyhdPgU1X2gQ"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_9EuT-QKlEeOyhdPgU1X2gQ" value="*"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_9CVuRAKlEeOyhdPgU1X2gQ" name="Operation">
      <ownedComment xmi:id="_9CVuWwKlEeOyhdPgU1X2gQ" annotatedElement="_9CVuRAKlEeOyhdPgU1X2gQ">
        <body>An operation is owned by a class and may be invoked in the context of objects that are instances of that class. It is a typed element and a multiplicity element.</body>
      </ownedComment>
      <ownedComment xmi:id="_9DryegKlEeOyhdPgU1X2gQ" annotatedElement="_9CVuRAKlEeOyhdPgU1X2gQ">
        <body>Operation specializes TemplateableElement in order to support specification of template operations and bound operations. Operation specializes ParameterableElement to specify that an operation can be exposed as a formal template parameter, and provided as an actual parameter in a binding of a template.</body>
      </ownedComment>
      <generalization xmi:id="_9CVuXAKlEeOyhdPgU1X2gQ" general="_9CpQQAKlEeOyhdPgU1X2gQ"/>
      <generalization xmi:id="_9C8LQAKlEeOyhdPgU1X2gQ" general="_9CyacAKlEeOyhdPgU1X2gQ"/>
      <generalization xmi:id="_9DiBFAKlEeOyhdPgU1X2gQ" general="_9DiBEAKlEeOyhdPgU1X2gQ"/>
      <generalization xmi:id="_9DryewKlEeOyhdPgU1X2gQ" general="_9DryaAKlEeOyhdPgU1X2gQ"/>
      <generalization xmi:id="_9DryfAKlEeOyhdPgU1X2gQ" general="_9DryUgKlEeOyhdPgU1X2gQ"/>
      <ownedAttribute xmi:id="_9CVuXQKlEeOyhdPgU1X2gQ" name="raisedException" type="_9CffQAKlEeOyhdPgU1X2gQ" association="_9CpQdwKlEeOyhdPgU1X2gQ">
        <ownedComment xmi:id="_9CVuXgKlEeOyhdPgU1X2gQ" annotatedElement="_9CVuXQKlEeOyhdPgU1X2gQ">
          <body>The exceptions that are declared as possible during an invocation of the operation.</body>
        </ownedComment>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_9CVuXwKlEeOyhdPgU1X2gQ"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_9CVuYAKlEeOyhdPgU1X2gQ" value="*"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_9CVuYQKlEeOyhdPgU1X2gQ" name="ownedParameter" type="_9CVuaAKlEeOyhdPgU1X2gQ" isOrdered="true" aggregation="composite"
          association="_9CpQfwKlEeOyhdPgU1X2gQ">
        <ownedComment xmi:id="_9CVuYgKlEeOyhdPgU1X2gQ" annotatedElement="_9CVuYQKlEeOyhdPgU1X2gQ">
          <body>The parameters to the operation.</body>
        </ownedComment>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_9CVuYwKlEeOyhdPgU1X2gQ"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_9CVuZAKlEeOyhdPgU1X2gQ" value="*"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_9CVuZQKlEeOyhdPgU1X2gQ" name="class" type="_9CVuSQKlEeOyhdPgU1X2gQ" association="_9CpQgAKlEeOyhdPgU1X2gQ">
        <ownedComment xmi:id="_9CVuZgKlEeOyhdPgU1X2gQ" annotatedElement="_9CVuZQKlEeOyhdPgU1X2gQ">
          <body>The class that owns the operation.</body>
        </ownedComment>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_9CVuZwKlEeOyhdPgU1X2gQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_9DryfQKlEeOyhdPgU1X2gQ" name="templateParameter" type="_9D08AAKlEeOyhdPgU1X2gQ" redefinedProperty="_9DryawKlEeOyhdPgU1X2gQ"
          association="_9D08RQKlEeOyhdPgU1X2gQ">
        <ownedComment xmi:id="_9DryfgKlEeOyhdPgU1X2gQ" annotatedElement="_9DryfQKlEeOyhdPgU1X2gQ">
          <body>The template parameter that exposes this element as a formal parameter.</body>
        </ownedComment>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_9DryfwKlEeOyhdPgU1X2gQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_9D-tDAKlEeOyhdPgU1X2gQ" name="owningType" type="_9CffQAKlEeOyhdPgU1X2gQ" association="_9D-tGgKlEeOyhdPgU1X2gQ">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_9D-tDQKlEeOyhdPgU1X2gQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_9D-tGwKlEeOyhdPgU1X2gQ" name="precondition" type="_9CyaMAKlEeOyhdPgU1X2gQ" aggregation="composite">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_9D-tHAKlEeOyhdPgU1X2gQ"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_9D-tHQKlEeOyhdPgU1X2gQ" value="*"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_9EIeAAKlEeOyhdPgU1X2gQ" name="postcondition" type="_9CyaMAKlEeOyhdPgU1X2gQ" aggregation="composite">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_9EIeAQKlEeOyhdPgU1X2gQ"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_9EIeAgKlEeOyhdPgU1X2gQ" value="*"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_9EIeAwKlEeOyhdPgU1X2gQ" name="bodyExpression" type="_9CyaYgKlEeOyhdPgU1X2gQ" aggregation="composite">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_9EIeBAKlEeOyhdPgU1X2gQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_9FBO6gKlEeOyhdPgU1X2gQ" name="isInvalidating" type="_9C8LRAKlEeOyhdPgU1X2gQ">
        <defaultValue xmi:type="uml:LiteralString" xmi:id="_9FBO6wKlEeOyhdPgU1X2gQ" value="false"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_9FBO7AKlEeOyhdPgU1X2gQ" name="isValidating" type="_9C8LRAKlEeOyhdPgU1X2gQ">
        <defaultValue xmi:type="uml:LiteralString" xmi:id="_9FBO7QKlEeOyhdPgU1X2gQ" value="false"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_9FBO7gKlEeOyhdPgU1X2gQ" name="precedence" type="_9FBO8wKlEeOyhdPgU1X2gQ">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_9FBO7wKlEeOyhdPgU1X2gQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_9FK_1wKlEeOyhdPgU1X2gQ" name="redefinedOperation" type="_9CVuRAKlEeOyhdPgU1X2gQ">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_9FK_2AKlEeOyhdPgU1X2gQ"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_9FK_2QKlEeOyhdPgU1X2gQ" value="*"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_9EIeTQKlEeOyhdPgU1X2gQ" clientDependency="_9FK_4gKlEeOyhdPgU1X2gQ" name="OperationCallExp">
      <generalization xmi:id="_9EIeTgKlEeOyhdPgU1X2gQ" general="_9ERoFwKlEeOyhdPgU1X2gQ"/>
      <ownedAttribute xmi:id="_9EIeTwKlEeOyhdPgU1X2gQ" name="argument" type="_9EIeGwKlEeOyhdPgU1X2gQ" isOrdered="true" aggregation="composite">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_9EIeUAKlEeOyhdPgU1X2gQ"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_9EIeUQKlEeOyhdPgU1X2gQ" value="*"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_9EIeUgKlEeOyhdPgU1X2gQ" name="referredOperation" type="_9CVuRAKlEeOyhdPgU1X2gQ">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_9EIeUwKlEeOyhdPgU1X2gQ"/>
      </ownedAttribute>
      <interfaceRealization xmi:id="_9FK_4gKlEeOyhdPgU1X2gQ" client="_9EIeTQKlEeOyhdPgU1X2gQ" supplier="_9FUJwAKlEeOyhdPgU1X2gQ" contract="_9FUJwAKlEeOyhdPgU1X2gQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_9D08AAKlEeOyhdPgU1X2gQ" name="OperationTemplateParameter">
      <ownedComment xmi:id="_9D08AQKlEeOyhdPgU1X2gQ" annotatedElement="_9D08AAKlEeOyhdPgU1X2gQ">
        <body>An operation template parameter exposes an operation as a formal parameter for a template.</body>
      </ownedComment>
      <generalization xmi:id="_9D08AgKlEeOyhdPgU1X2gQ" general="_9DryHwKlEeOyhdPgU1X2gQ"/>
      <ownedAttribute xmi:id="_9D08AwKlEeOyhdPgU1X2gQ" name="parameteredElement" type="_9CVuRAKlEeOyhdPgU1X2gQ" redefinedProperty="_9DryJwKlEeOyhdPgU1X2gQ"
          association="_9D08RQKlEeOyhdPgU1X2gQ">
        <ownedComment xmi:id="_9D08BAKlEeOyhdPgU1X2gQ" annotatedElement="_9D08AwKlEeOyhdPgU1X2gQ">
          <body>The operation for this template parameter.</body>
        </ownedComment>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_9EkjAQKlEeOyhdPgU1X2gQ" name="OrderedSetType">
      <generalization xmi:id="_9EkjAgKlEeOyhdPgU1X2gQ" general="_9Eki5QKlEeOyhdPgU1X2gQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_9CpQVgKlEeOyhdPgU1X2gQ" name="Package">
      <ownedComment xmi:id="_9CpQVwKlEeOyhdPgU1X2gQ" annotatedElement="_9CpQVgKlEeOyhdPgU1X2gQ">
        <body>A package is a container for types and other packages.</body>
      </ownedComment>
      <ownedComment xmi:id="_9D08IgKlEeOyhdPgU1X2gQ" annotatedElement="_9CpQVgKlEeOyhdPgU1X2gQ">
        <body>Package specializes TemplateableElement and PackageableElement specializes ParameterableElement to specify that a package can be used as a template and a PackageableElement as a template parameter.</body>
      </ownedComment>
      <generalization xmi:id="_9CpQWAKlEeOyhdPgU1X2gQ" general="_9CVuQwKlEeOyhdPgU1X2gQ"/>
      <generalization xmi:id="_9C8LQQKlEeOyhdPgU1X2gQ" general="_9CyacAKlEeOyhdPgU1X2gQ"/>
      <generalization xmi:id="_9D08IwKlEeOyhdPgU1X2gQ" general="_9DryUgKlEeOyhdPgU1X2gQ"/>
      <ownedAttribute xmi:id="_9CpQWQKlEeOyhdPgU1X2gQ" name="nestedPackage" type="_9CpQVgKlEeOyhdPgU1X2gQ" aggregation="composite" association="_9CpQigKlEeOyhdPgU1X2gQ">
        <ownedComment xmi:id="_9CpQWgKlEeOyhdPgU1X2gQ" annotatedElement="_9CpQWQKlEeOyhdPgU1X2gQ">
          <body>The set of contained packages.</body>
        </ownedComment>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_9CpQWwKlEeOyhdPgU1X2gQ"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_9CpQXAKlEeOyhdPgU1X2gQ" value="*"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_9CpQXQKlEeOyhdPgU1X2gQ" name="nestingPackage" type="_9CpQVgKlEeOyhdPgU1X2gQ" association="_9CpQigKlEeOyhdPgU1X2gQ">
        <ownedComment xmi:id="_9CpQXgKlEeOyhdPgU1X2gQ" annotatedElement="_9CpQXQKlEeOyhdPgU1X2gQ">
          <body>The containing package.</body>
        </ownedComment>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_9CpQXwKlEeOyhdPgU1X2gQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_9CpQYAKlEeOyhdPgU1X2gQ" name="ownedType" type="_9CffQAKlEeOyhdPgU1X2gQ" aggregation="composite" association="_9CpQiwKlEeOyhdPgU1X2gQ">
        <ownedComment xmi:id="_9CpQYQKlEeOyhdPgU1X2gQ" annotatedElement="_9CpQYAKlEeOyhdPgU1X2gQ">
          <body>The set of contained types.</body>
        </ownedComment>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_9CpQYgKlEeOyhdPgU1X2gQ"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_9CpQYwKlEeOyhdPgU1X2gQ" value="*"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_9FBO2AKlEeOyhdPgU1X2gQ" name="nsPrefix" type="_9C8LOgKlEeOyhdPgU1X2gQ">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_9FBO2QKlEeOyhdPgU1X2gQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_9FBO2gKlEeOyhdPgU1X2gQ" name="nsURI" type="_9C8LOgKlEeOyhdPgU1X2gQ">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_9FBO2wKlEeOyhdPgU1X2gQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_9FBO3AKlEeOyhdPgU1X2gQ" name="importedPackage" type="_9CpQVgKlEeOyhdPgU1X2gQ">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_9FBO3QKlEeOyhdPgU1X2gQ"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_9FBO3gKlEeOyhdPgU1X2gQ" value="*"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_9D08BQKlEeOyhdPgU1X2gQ" name="PackageableElement" isAbstract="true">
      <ownedComment xmi:id="_9D08BgKlEeOyhdPgU1X2gQ" annotatedElement="_9D08BQKlEeOyhdPgU1X2gQ">
        <body>Packageable elements are able to serve as a template parameter.</body>
      </ownedComment>
      <generalization xmi:id="_9D08BwKlEeOyhdPgU1X2gQ" general="_9DryaAKlEeOyhdPgU1X2gQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_9CVuaAKlEeOyhdPgU1X2gQ" name="Parameter">
      <ownedComment xmi:id="_9CVuaQKlEeOyhdPgU1X2gQ" annotatedElement="_9CVuaAKlEeOyhdPgU1X2gQ">
        <body>A parameter is a typed element that represents a parameter of an operation.</body>
      </ownedComment>
      <generalization xmi:id="_9CVuagKlEeOyhdPgU1X2gQ" general="_9CpQQAKlEeOyhdPgU1X2gQ"/>
      <generalization xmi:id="_9EkjEwKlEeOyhdPgU1X2gQ" general="_9EbY9gKlEeOyhdPgU1X2gQ"/>
      <generalization xmi:id="_9FUJ0QKlEeOyhdPgU1X2gQ" general="_9FUJ1AKlEeOyhdPgU1X2gQ"/>
      <ownedAttribute xmi:id="_9CVuawKlEeOyhdPgU1X2gQ" name="operation" type="_9CVuRAKlEeOyhdPgU1X2gQ" association="_9CpQfwKlEeOyhdPgU1X2gQ">
        <ownedComment xmi:id="_9CVubAKlEeOyhdPgU1X2gQ" annotatedElement="_9CVuawKlEeOyhdPgU1X2gQ">
          <body>The operation that owns the parameter.</body>
        </ownedComment>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_9CVubQKlEeOyhdPgU1X2gQ"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_9DryaAKlEeOyhdPgU1X2gQ" name="ParameterableElement" isAbstract="true">
      <ownedComment xmi:id="_9DryaQKlEeOyhdPgU1X2gQ" annotatedElement="_9DryaAKlEeOyhdPgU1X2gQ">
        <body>A parameterable element is an element that can be exposed as a formal template parameter for a template, or specified as an actual parameter in a binding of a template.</body>
      </ownedComment>
      <generalization xmi:id="_9DryagKlEeOyhdPgU1X2gQ" general="_9CpQZwKlEeOyhdPgU1X2gQ"/>
      <ownedAttribute xmi:id="_9DryawKlEeOyhdPgU1X2gQ" name="templateParameter" type="_9DryHwKlEeOyhdPgU1X2gQ" association="_9D08NwKlEeOyhdPgU1X2gQ">
        <ownedComment xmi:id="_9DrybAKlEeOyhdPgU1X2gQ" annotatedElement="_9DryawKlEeOyhdPgU1X2gQ">
          <body>The template parameter that exposes this element as a formal parameter.</body>
        </ownedComment>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_9DrybQKlEeOyhdPgU1X2gQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_9DrybgKlEeOyhdPgU1X2gQ" name="owningTemplateParameter" type="_9DryHwKlEeOyhdPgU1X2gQ" subsettedProperty="_9DryawKlEeOyhdPgU1X2gQ"
          association="_9D08OQKlEeOyhdPgU1X2gQ">
        <ownedComment xmi:id="_9DrybwKlEeOyhdPgU1X2gQ" annotatedElement="_9DrybgKlEeOyhdPgU1X2gQ">
          <body>The formal template parameter that owns this element.</body>
        </ownedComment>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_9DrycAKlEeOyhdPgU1X2gQ"/>
      </ownedAttribute>
      <ownedOperation xmi:id="_9DrycQKlEeOyhdPgU1X2gQ" name="isTemplateParameter" isQuery="true">
        <ownedComment xmi:id="_9DrycgKlEeOyhdPgU1X2gQ" annotatedElement="_9DrycQKlEeOyhdPgU1X2gQ">
          <body>The query isTemplateParameter() determines if this parameterable element is exposed as a formal template parameter.</body>
        </ownedComment>
        <ownedParameter xmi:id="_9DrydQKlEeOyhdPgU1X2gQ" type="_9C8LRAKlEeOyhdPgU1X2gQ" direction="return"/>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_9FBO8wKlEeOyhdPgU1X2gQ" name="Precedence">
      <generalization xmi:id="_9FBO9AKlEeOyhdPgU1X2gQ" general="_9CVuQwKlEeOyhdPgU1X2gQ"/>
      <ownedAttribute xmi:id="_9FBO9QKlEeOyhdPgU1X2gQ" name="associativity" type="_9FBO5wKlEeOyhdPgU1X2gQ">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_9FBO9gKlEeOyhdPgU1X2gQ"/>
        <defaultValue xmi:type="uml:LiteralString" xmi:id="_9FBO9wKlEeOyhdPgU1X2gQ" value="Left"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_9FBO-AKlEeOyhdPgU1X2gQ" name="order" type="_9C8LQgKlEeOyhdPgU1X2gQ">
        <defaultValue xmi:type="uml:LiteralString" xmi:id="_9FBO-QKlEeOyhdPgU1X2gQ" value="0"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_9ERn8gKlEeOyhdPgU1X2gQ" name="PrimitiveLiteralExp" isAbstract="true">
      <generalization xmi:id="_9ERn8wKlEeOyhdPgU1X2gQ" general="_9ERn8AKlEeOyhdPgU1X2gQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_9CpQUwKlEeOyhdPgU1X2gQ" name="PrimitiveType">
      <ownedComment xmi:id="_9CpQVAKlEeOyhdPgU1X2gQ" annotatedElement="_9CpQUwKlEeOyhdPgU1X2gQ">
        <body>A primitive type is a data type implemented by the underlying infrastructure and made available for modeling.</body>
      </ownedComment>
      <generalization xmi:id="_9CpQVQKlEeOyhdPgU1X2gQ" general="_9CpQZAKlEeOyhdPgU1X2gQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_9C8LSQKlEeOyhdPgU1X2gQ" name="Profile">
      <generalization xmi:id="_9C8LSgKlEeOyhdPgU1X2gQ" general="_9CpQVgKlEeOyhdPgU1X2gQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_9CVubgKlEeOyhdPgU1X2gQ" name="Property">
      <ownedComment xmi:id="_9CVubwKlEeOyhdPgU1X2gQ" annotatedElement="_9CVubgKlEeOyhdPgU1X2gQ">
        <body>A property is a typed element that represents an attribute of a class.</body>
      </ownedComment>
      <ownedComment xmi:id="_9DrydgKlEeOyhdPgU1X2gQ" annotatedElement="_9CVubgKlEeOyhdPgU1X2gQ">
        <body>Property specializes ParameterableElement to specify that a property can be exposed as a formal template parameter, and provided as an actual parameter in a binding of a template.</body>
      </ownedComment>
      <generalization xmi:id="_9CVucAKlEeOyhdPgU1X2gQ" general="_9CpQQAKlEeOyhdPgU1X2gQ"/>
      <generalization xmi:id="_9DiBFQKlEeOyhdPgU1X2gQ" general="_9DiBEAKlEeOyhdPgU1X2gQ"/>
      <generalization xmi:id="_9DrydwKlEeOyhdPgU1X2gQ" general="_9DryaAKlEeOyhdPgU1X2gQ"/>
      <ownedAttribute xmi:id="_9CVucQKlEeOyhdPgU1X2gQ" name="isReadOnly" type="_9C8LRAKlEeOyhdPgU1X2gQ">
        <ownedComment xmi:id="_9CVucgKlEeOyhdPgU1X2gQ" annotatedElement="_9CVucQKlEeOyhdPgU1X2gQ">
          <body>If isReadOnly is true, the attribute may not be written to after initialization.</body>
        </ownedComment>
        <defaultValue xmi:type="uml:LiteralString" xmi:id="_9CVucwKlEeOyhdPgU1X2gQ" value="false"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_9CVudAKlEeOyhdPgU1X2gQ" name="default" type="_9C8LOgKlEeOyhdPgU1X2gQ">
        <ownedComment xmi:id="_9CVudQKlEeOyhdPgU1X2gQ" annotatedElement="_9CVudAKlEeOyhdPgU1X2gQ">
          <body>A string that is evaluated to give a default value for the attribute when an object of the owning class is instantiated.</body>
        </ownedComment>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_9CVudgKlEeOyhdPgU1X2gQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_9CVudwKlEeOyhdPgU1X2gQ" name="isComposite" type="_9C8LRAKlEeOyhdPgU1X2gQ">
        <ownedComment xmi:id="_9CVueAKlEeOyhdPgU1X2gQ" annotatedElement="_9CVudwKlEeOyhdPgU1X2gQ">
          <body>If isComposite is true, the object containing the attribute is a container for the object or value contained in the attribute.</body>
        </ownedComment>
        <defaultValue xmi:type="uml:LiteralString" xmi:id="_9CVueQKlEeOyhdPgU1X2gQ" value="false"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_9CVuegKlEeOyhdPgU1X2gQ" name="isDerived" type="_9C8LRAKlEeOyhdPgU1X2gQ">
        <ownedComment xmi:id="_9CVuewKlEeOyhdPgU1X2gQ" annotatedElement="_9CVuegKlEeOyhdPgU1X2gQ">
          <body>If isDerived is true, the value of the attribute is derived from information elsewhere.</body>
        </ownedComment>
        <defaultValue xmi:type="uml:LiteralString" xmi:id="_9CVufAKlEeOyhdPgU1X2gQ" value="false"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_9CVufQKlEeOyhdPgU1X2gQ" name="class" type="_9CVuSQKlEeOyhdPgU1X2gQ" association="_9CpQewKlEeOyhdPgU1X2gQ">
        <ownedComment xmi:id="_9CVufgKlEeOyhdPgU1X2gQ" annotatedElement="_9CVufQKlEeOyhdPgU1X2gQ">
          <body>The class that owns the property, and of which the property is an attribute.</body>
        </ownedComment>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_9CVufwKlEeOyhdPgU1X2gQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_9CVugAKlEeOyhdPgU1X2gQ" name="opposite" type="_9CVubgKlEeOyhdPgU1X2gQ" association="_9CpQfAKlEeOyhdPgU1X2gQ">
        <ownedComment xmi:id="_9CVugQKlEeOyhdPgU1X2gQ" annotatedElement="_9CVugAKlEeOyhdPgU1X2gQ">
          <body>Two attributes attr1 and attr2 of two objects o1 and o2 (which may be the same object) may be paired with each other so that o1.attr1 refers to o2 if and only if o2.attr2 refers to o1. In such a case attr1 is the opposite of attr2 and attr2 is the opposite of attr1.</body>
        </ownedComment>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_9CVuggKlEeOyhdPgU1X2gQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_9D-tBQKlEeOyhdPgU1X2gQ" name="association" type="_9D-tAAKlEeOyhdPgU1X2gQ" association="_9D-tCgKlEeOyhdPgU1X2gQ">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_9D-tBgKlEeOyhdPgU1X2gQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_9D-tBwKlEeOyhdPgU1X2gQ" name="implicit" type="_9C8LRAKlEeOyhdPgU1X2gQ">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_9D-tCAKlEeOyhdPgU1X2gQ"/>
        <defaultValue xmi:type="uml:LiteralString" xmi:id="_9D-tCQKlEeOyhdPgU1X2gQ" value="false"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_9D-tDgKlEeOyhdPgU1X2gQ" name="owningType" type="_9CffQAKlEeOyhdPgU1X2gQ" association="_9D-tGQKlEeOyhdPgU1X2gQ">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_9D-tDwKlEeOyhdPgU1X2gQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_9EIeCAKlEeOyhdPgU1X2gQ" name="defaultExpression" type="_9CyaYgKlEeOyhdPgU1X2gQ" aggregation="composite">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_9EIeCQKlEeOyhdPgU1X2gQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_9E4E6QKlEeOyhdPgU1X2gQ" name="isID" type="_9C8LRAKlEeOyhdPgU1X2gQ">
        <defaultValue xmi:type="uml:LiteralString" xmi:id="_9E4E6gKlEeOyhdPgU1X2gQ" value="false"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_9E4E6wKlEeOyhdPgU1X2gQ" name="keys" type="_9CVubgKlEeOyhdPgU1X2gQ">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_9E4E7AKlEeOyhdPgU1X2gQ"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_9E4E7QKlEeOyhdPgU1X2gQ" value="*"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_9E4E7gKlEeOyhdPgU1X2gQ" name="isResolveProxies" type="_9C8LRAKlEeOyhdPgU1X2gQ">
        <defaultValue xmi:type="uml:LiteralString" xmi:id="_9E4E7wKlEeOyhdPgU1X2gQ" value="true"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_9E4E8AKlEeOyhdPgU1X2gQ" name="isTransient" type="_9C8LRAKlEeOyhdPgU1X2gQ">
        <defaultValue xmi:type="uml:LiteralString" xmi:id="_9E4E8QKlEeOyhdPgU1X2gQ" value="false"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_9E4E8gKlEeOyhdPgU1X2gQ" name="isUnsettable" type="_9C8LRAKlEeOyhdPgU1X2gQ">
        <defaultValue xmi:type="uml:LiteralString" xmi:id="_9E4E8wKlEeOyhdPgU1X2gQ" value="false"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_9E4E9AKlEeOyhdPgU1X2gQ" name="isVolatile" type="_9C8LRAKlEeOyhdPgU1X2gQ">
        <defaultValue xmi:type="uml:LiteralString" xmi:id="_9E4E9QKlEeOyhdPgU1X2gQ" value="false"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_9FK_2gKlEeOyhdPgU1X2gQ" name="redefinedProperty" type="_9CVubgKlEeOyhdPgU1X2gQ">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_9FK_2wKlEeOyhdPgU1X2gQ"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_9FK_3AKlEeOyhdPgU1X2gQ" value="*"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_9FK_3QKlEeOyhdPgU1X2gQ" name="subsettedProperty" type="_9CVubgKlEeOyhdPgU1X2gQ">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_9FK_3gKlEeOyhdPgU1X2gQ"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_9FK_3wKlEeOyhdPgU1X2gQ" value="*"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_9FUJzQKlEeOyhdPgU1X2gQ" name="referredProperty" type="_9CVubgKlEeOyhdPgU1X2gQ">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_9FUJzgKlEeOyhdPgU1X2gQ"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_9EIeMwKlEeOyhdPgU1X2gQ" clientDependency="_9FK_4wKlEeOyhdPgU1X2gQ" name="PropertyCallExp">
      <generalization xmi:id="_9EIeNAKlEeOyhdPgU1X2gQ" general="_9ERoHwKlEeOyhdPgU1X2gQ"/>
      <ownedAttribute xmi:id="_9EIeNQKlEeOyhdPgU1X2gQ" name="referredProperty" type="_9CVubgKlEeOyhdPgU1X2gQ">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_9EIeNgKlEeOyhdPgU1X2gQ"/>
      </ownedAttribute>
      <interfaceRealization xmi:id="_9FK_4wKlEeOyhdPgU1X2gQ" client="_9EIeMwKlEeOyhdPgU1X2gQ" supplier="_9FUJwAKlEeOyhdPgU1X2gQ" contract="_9FUJwAKlEeOyhdPgU1X2gQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_9DPGIAKlEeOyhdPgU1X2gQ" name="Pseudostate">
      <ownedComment xmi:id="_9DPGIQKlEeOyhdPgU1X2gQ" annotatedElement="_9DPGIAKlEeOyhdPgU1X2gQ">
        <body>A pseudostate is an abstraction that encompasses different types of transient vertices in the state machine graph.</body>
      </ownedComment>
      <generalization xmi:id="_9DPGPQKlEeOyhdPgU1X2gQ" general="_9DFVjAKlEeOyhdPgU1X2gQ"/>
      <ownedAttribute xmi:id="_9DPGPgKlEeOyhdPgU1X2gQ" name="kind" type="_9DPGkAKlEeOyhdPgU1X2gQ">
        <ownedComment xmi:id="_9DPGPwKlEeOyhdPgU1X2gQ" annotatedElement="_9DPGPgKlEeOyhdPgU1X2gQ">
          <body>Determines the precise type of the Pseudostate and can be one of: entryPoint, exitPoint, initial, deepHistory, shallowHistory, join, fork, junction, terminate or choice.</body>
        </ownedComment>
        <defaultValue xmi:type="uml:LiteralString" xmi:id="_9DPGQAKlEeOyhdPgU1X2gQ" value="initial"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_9DPGQQKlEeOyhdPgU1X2gQ" name="stateMachine" type="_9C8LTQKlEeOyhdPgU1X2gQ">
        <ownedComment xmi:id="_9DPGQgKlEeOyhdPgU1X2gQ" annotatedElement="_9DPGQQKlEeOyhdPgU1X2gQ">
          <body>The StateMachine in which this Pseudostate is defined. This only applies to Pseudostates of the kind entryPoint or exitPoint.</body>
        </ownedComment>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_9DPGQwKlEeOyhdPgU1X2gQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_9DPGRAKlEeOyhdPgU1X2gQ" name="state" type="_9DFVIAKlEeOyhdPgU1X2gQ">
        <ownedComment xmi:id="_9DPGRQKlEeOyhdPgU1X2gQ" annotatedElement="_9DPGRAKlEeOyhdPgU1X2gQ">
          <body>The State that owns this pseudostate and in which it appears.</body>
        </ownedComment>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_9DPGRgKlEeOyhdPgU1X2gQ"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_9EIeVAKlEeOyhdPgU1X2gQ" name="RealLiteralExp">
      <generalization xmi:id="_9EIeVQKlEeOyhdPgU1X2gQ" general="_9ERn9AKlEeOyhdPgU1X2gQ"/>
      <ownedAttribute xmi:id="_9EIeVgKlEeOyhdPgU1X2gQ" name="realSymbol" type="_9Eki4AKlEeOyhdPgU1X2gQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_9DPGcAKlEeOyhdPgU1X2gQ" name="Region">
      <ownedComment xmi:id="_9DPGcQKlEeOyhdPgU1X2gQ" annotatedElement="_9DPGcAKlEeOyhdPgU1X2gQ">
        <body>A region is an orthogonal part of either a composite state or a state machine. It contains states and transitions.</body>
      </ownedComment>
      <generalization xmi:id="_9DPGfgKlEeOyhdPgU1X2gQ" general="_9CyacAKlEeOyhdPgU1X2gQ"/>
      <ownedAttribute xmi:id="_9DPGfwKlEeOyhdPgU1X2gQ" name="subvertex" type="_9DFVjAKlEeOyhdPgU1X2gQ" aggregation="composite" association="_9DPGtAKlEeOyhdPgU1X2gQ">
        <ownedComment xmi:id="_9DPGgAKlEeOyhdPgU1X2gQ" annotatedElement="_9DPGfwKlEeOyhdPgU1X2gQ">
          <body>The set of vertices that are owned by this region.</body>
        </ownedComment>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_9DPGgQKlEeOyhdPgU1X2gQ"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_9DPGggKlEeOyhdPgU1X2gQ" value="*"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_9DPGgwKlEeOyhdPgU1X2gQ" name="transition" type="_9DFVYQKlEeOyhdPgU1X2gQ" aggregation="composite" association="_9DPGtQKlEeOyhdPgU1X2gQ">
        <ownedComment xmi:id="_9DPGhAKlEeOyhdPgU1X2gQ" annotatedElement="_9DPGgwKlEeOyhdPgU1X2gQ">
          <body>The set of transitions owned by the region. Note that internal transitions are owned by a region, but applies to the source state.</body>
        </ownedComment>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_9DPGhQKlEeOyhdPgU1X2gQ"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_9DPGhgKlEeOyhdPgU1X2gQ" value="*"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_9DPGhwKlEeOyhdPgU1X2gQ" name="stateMachine" type="_9C8LTQKlEeOyhdPgU1X2gQ">
        <ownedComment xmi:id="_9DPGiAKlEeOyhdPgU1X2gQ" annotatedElement="_9DPGhwKlEeOyhdPgU1X2gQ">
          <body>The StateMachine that owns the Region. If a Region is owned by a StateMachine, then it cannot also be owned by a State.</body>
        </ownedComment>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_9DPGiQKlEeOyhdPgU1X2gQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_9DPGigKlEeOyhdPgU1X2gQ" name="state" type="_9DFVIAKlEeOyhdPgU1X2gQ">
        <ownedComment xmi:id="_9DPGiwKlEeOyhdPgU1X2gQ" annotatedElement="_9DPGigKlEeOyhdPgU1X2gQ">
          <body>The State that owns the Region. If a Region is owned by a State, then it cannot also be owned by a StateMachine.</body>
        </ownedComment>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_9DPGjAKlEeOyhdPgU1X2gQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_9DPGjQKlEeOyhdPgU1X2gQ" name="extendedRegion" type="_9DPGcAKlEeOyhdPgU1X2gQ">
        <ownedComment xmi:id="_9DPGjgKlEeOyhdPgU1X2gQ" annotatedElement="_9DPGjQKlEeOyhdPgU1X2gQ">
          <body>The region of which this region is an extension.</body>
        </ownedComment>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_9DPGjwKlEeOyhdPgU1X2gQ"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_9C8LMAKlEeOyhdPgU1X2gQ" name="Root">
      <generalization xmi:id="_9C8LMQKlEeOyhdPgU1X2gQ" general="_9CyacAKlEeOyhdPgU1X2gQ"/>
      <ownedAttribute xmi:id="_9C8LMgKlEeOyhdPgU1X2gQ" name="nestedPackage" type="_9CpQVgKlEeOyhdPgU1X2gQ" aggregation="composite">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_9C8LMwKlEeOyhdPgU1X2gQ"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_9C8LNAKlEeOyhdPgU1X2gQ" value="*"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_9C8LNQKlEeOyhdPgU1X2gQ" name="externalURI" type="_9C8LOgKlEeOyhdPgU1X2gQ">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_9C8LNgKlEeOyhdPgU1X2gQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_9C8LNwKlEeOyhdPgU1X2gQ" name="imports" type="_9CyadAKlEeOyhdPgU1X2gQ" isOrdered="true" aggregation="composite">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_9C8LOAKlEeOyhdPgU1X2gQ"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_9C8LOQKlEeOyhdPgU1X2gQ" value="*"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_9EkjAwKlEeOyhdPgU1X2gQ" name="SelfType">
      <generalization xmi:id="_9EkjBAKlEeOyhdPgU1X2gQ" general="_9CVuSQKlEeOyhdPgU1X2gQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_9CVuRQKlEeOyhdPgU1X2gQ" name="SendSignalAction">
      <generalization xmi:id="_9CVuRgKlEeOyhdPgU1X2gQ" general="_9CVuQwKlEeOyhdPgU1X2gQ"/>
      <ownedAttribute xmi:id="_9CVuRwKlEeOyhdPgU1X2gQ" name="signal" type="_9CVuSAKlEeOyhdPgU1X2gQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_9EkjBQKlEeOyhdPgU1X2gQ" name="SequenceType">
      <generalization xmi:id="_9EkjBgKlEeOyhdPgU1X2gQ" general="_9Eki5QKlEeOyhdPgU1X2gQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_9EkjBwKlEeOyhdPgU1X2gQ" name="SetType">
      <generalization xmi:id="_9EkjCAKlEeOyhdPgU1X2gQ" general="_9Eki5QKlEeOyhdPgU1X2gQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_9CVuSAKlEeOyhdPgU1X2gQ" name="Signal">
      <generalization xmi:id="_9EkjCQKlEeOyhdPgU1X2gQ" general="_9CVuQwKlEeOyhdPgU1X2gQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_9DFVIAKlEeOyhdPgU1X2gQ" name="State">
      <ownedComment xmi:id="_9DFVIQKlEeOyhdPgU1X2gQ" annotatedElement="_9DFVIAKlEeOyhdPgU1X2gQ">
        <body>A state models a situation during which some (usually implicit) invariant condition holds.</body>
      </ownedComment>
      <generalization xmi:id="_9DFVMQKlEeOyhdPgU1X2gQ" general="_9DFVjAKlEeOyhdPgU1X2gQ"/>
      <generalization xmi:id="_9DFVMgKlEeOyhdPgU1X2gQ" general="_9CyacAKlEeOyhdPgU1X2gQ"/>
      <generalization xmi:id="_9EkjCgKlEeOyhdPgU1X2gQ" general="_9CVuQwKlEeOyhdPgU1X2gQ"/>
      <ownedAttribute xmi:id="_9DFVMwKlEeOyhdPgU1X2gQ" name="isComposite" type="_9C8LRAKlEeOyhdPgU1X2gQ" isDerived="true">
        <ownedComment xmi:id="_9DFVNAKlEeOyhdPgU1X2gQ" annotatedElement="_9DFVMwKlEeOyhdPgU1X2gQ">
          <body>A state with isComposite=true is said to be a composite state. A composite state is a state that contains at least one region.</body>
        </ownedComment>
        <defaultValue xmi:type="uml:LiteralString" xmi:id="_9DFVNQKlEeOyhdPgU1X2gQ" value="false"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_9DFVNgKlEeOyhdPgU1X2gQ" name="isOrthogonal" type="_9C8LRAKlEeOyhdPgU1X2gQ" isDerived="true">
        <ownedComment xmi:id="_9DFVNwKlEeOyhdPgU1X2gQ" annotatedElement="_9DFVNgKlEeOyhdPgU1X2gQ">
          <body>A state with isOrthogonal=true is said to be an orthogonal composite state. An orthogonal composite state contains two or more regions.</body>
        </ownedComment>
        <defaultValue xmi:type="uml:LiteralString" xmi:id="_9DFVOAKlEeOyhdPgU1X2gQ" value="false"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_9DFVOQKlEeOyhdPgU1X2gQ" name="isSimple" type="_9C8LRAKlEeOyhdPgU1X2gQ" isDerived="true">
        <ownedComment xmi:id="_9DFVOgKlEeOyhdPgU1X2gQ" annotatedElement="_9DFVOQKlEeOyhdPgU1X2gQ">
          <body>A state with isSimple=true is said to be a simple state. A simple state does not have any regions and it does not refer to any submachine state machine.</body>
        </ownedComment>
        <defaultValue xmi:type="uml:LiteralString" xmi:id="_9DFVOwKlEeOyhdPgU1X2gQ" value="true"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_9DFVPAKlEeOyhdPgU1X2gQ" name="isSubmachineState" type="_9C8LRAKlEeOyhdPgU1X2gQ">
        <ownedComment xmi:id="_9DFVPQKlEeOyhdPgU1X2gQ" annotatedElement="_9DFVPAKlEeOyhdPgU1X2gQ">
          <body>A state with isSubmachineState=true is said to be a submachine state. Such a state refers to a state machine (submachine).</body>
        </ownedComment>
        <defaultValue xmi:type="uml:LiteralString" xmi:id="_9DFVPgKlEeOyhdPgU1X2gQ" value="false"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_9DFVPwKlEeOyhdPgU1X2gQ" name="submachine" type="_9C8LTQKlEeOyhdPgU1X2gQ" association="_9DPGuAKlEeOyhdPgU1X2gQ">
        <ownedComment xmi:id="_9DFVQAKlEeOyhdPgU1X2gQ" annotatedElement="_9DFVPwKlEeOyhdPgU1X2gQ">
          <body>The state machine that is to be inserted in place of the (submachine) state.</body>
        </ownedComment>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_9DFVQQKlEeOyhdPgU1X2gQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_9DFVQgKlEeOyhdPgU1X2gQ" name="connection" type="_9DPGXAKlEeOyhdPgU1X2gQ" aggregation="composite">
        <ownedComment xmi:id="_9DFVQwKlEeOyhdPgU1X2gQ" annotatedElement="_9DFVQgKlEeOyhdPgU1X2gQ">
          <body>The entry and exit connection points used in conjunction with this (submachine) state, i.e. as targets and sources, respectively, in the region with the submachine state. A connection point reference references the corresponding definition of a connection point pseudostate in the statemachine referenced by the submachinestate.</body>
        </ownedComment>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_9DFVRAKlEeOyhdPgU1X2gQ"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_9DFVRQKlEeOyhdPgU1X2gQ" value="*"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_9DFVRgKlEeOyhdPgU1X2gQ" name="redefinedState" type="_9DFVIAKlEeOyhdPgU1X2gQ">
        <ownedComment xmi:id="_9DFVRwKlEeOyhdPgU1X2gQ" annotatedElement="_9DFVRgKlEeOyhdPgU1X2gQ">
          <body>The state of which this state is a redefinition.</body>
        </ownedComment>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_9DFVSAKlEeOyhdPgU1X2gQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_9DFVSQKlEeOyhdPgU1X2gQ" name="region" type="_9DPGcAKlEeOyhdPgU1X2gQ" aggregation="composite">
        <ownedComment xmi:id="_9DFVSgKlEeOyhdPgU1X2gQ" annotatedElement="_9DFVSQKlEeOyhdPgU1X2gQ">
          <body>The regions owned directly by the state.</body>
        </ownedComment>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_9DFVSwKlEeOyhdPgU1X2gQ"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_9DFVTAKlEeOyhdPgU1X2gQ" value="*"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_9DFVTQKlEeOyhdPgU1X2gQ" name="stateInvariant" type="_9CyaMAKlEeOyhdPgU1X2gQ" aggregation="composite">
        <ownedComment xmi:id="_9DFVTgKlEeOyhdPgU1X2gQ" annotatedElement="_9DFVTQKlEeOyhdPgU1X2gQ">
          <body>Specifies conditions that are always true when this state is the current state. In protocol state machines, state invariants are additional conditions to the preconditions of the outgoing transitions, and to the postcondition of the incoming transitions.&#xD;
</body>
        </ownedComment>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_9DFVTwKlEeOyhdPgU1X2gQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_9DFVUAKlEeOyhdPgU1X2gQ" name="entry" type="_9DY3WAKlEeOyhdPgU1X2gQ" aggregation="composite">
        <ownedComment xmi:id="_9DFVUQKlEeOyhdPgU1X2gQ" annotatedElement="_9DFVUAKlEeOyhdPgU1X2gQ">
          <body>An optional behavior that is executed whenever this state is entered regardless of the transition taken to reach the state. If defined, entry actions are always executed to completion prior to any internal behavior or transitions performed within the state.&#xD;
</body>
        </ownedComment>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_9DFVUgKlEeOyhdPgU1X2gQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_9DFVUwKlEeOyhdPgU1X2gQ" name="exit" type="_9DY3WAKlEeOyhdPgU1X2gQ" aggregation="composite">
        <ownedComment xmi:id="_9DFVVAKlEeOyhdPgU1X2gQ" annotatedElement="_9DFVUwKlEeOyhdPgU1X2gQ">
          <body>An optional behavior that is executed whenever this state is exited regardless of which transition was taken out of the state. If defined, exit actions are always executed to completion only after all internal activities and transition actions have completed execution.</body>
        </ownedComment>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_9DFVVQKlEeOyhdPgU1X2gQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_9DFVVgKlEeOyhdPgU1X2gQ" name="doActivity" type="_9DY3WAKlEeOyhdPgU1X2gQ" aggregation="composite">
        <ownedComment xmi:id="_9DFVVwKlEeOyhdPgU1X2gQ" annotatedElement="_9DFVVgKlEeOyhdPgU1X2gQ">
          <body>An optional behavior that is executed while being in the state. The execution starts when this state is entered, and stops either by itself, or when the state is exited, whichever comes first.</body>
        </ownedComment>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_9DFVWAKlEeOyhdPgU1X2gQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_9DFVWQKlEeOyhdPgU1X2gQ" name="connectionPoint" type="_9DPGIAKlEeOyhdPgU1X2gQ" aggregation="composite">
        <ownedComment xmi:id="_9DFVWgKlEeOyhdPgU1X2gQ" annotatedElement="_9DFVWQKlEeOyhdPgU1X2gQ">
          <body>The entry and exit pseudostates of a composite state. These can only be entry or exit Pseudostates, and they must have different names. They can only be defined for composite states.</body>
        </ownedComment>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_9DFVWwKlEeOyhdPgU1X2gQ"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_9DFVXAKlEeOyhdPgU1X2gQ" value="*"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_9DFVXQKlEeOyhdPgU1X2gQ" name="deferrableTrigger" type="_9DY3XQKlEeOyhdPgU1X2gQ" aggregation="composite">
        <ownedComment xmi:id="_9DFVXgKlEeOyhdPgU1X2gQ" annotatedElement="_9DFVXQKlEeOyhdPgU1X2gQ">
          <body>A list of triggers that are candidates to be retained by the state machine if they trigger no transitions out of the state (not consumed). A deferred trigger is retained until the state machine reaches a state configuration where it is no longer deferred.&#xD;
</body>
        </ownedComment>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_9DFVXwKlEeOyhdPgU1X2gQ"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_9DFVYAKlEeOyhdPgU1X2gQ" value="*"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_9EbY8gKlEeOyhdPgU1X2gQ" name="StateExp">
      <generalization xmi:id="_9EbY8wKlEeOyhdPgU1X2gQ" general="_9EIeGwKlEeOyhdPgU1X2gQ"/>
      <ownedAttribute xmi:id="_9EbY9AKlEeOyhdPgU1X2gQ" name="referredState" type="_9DFVIAKlEeOyhdPgU1X2gQ">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_9EbY9QKlEeOyhdPgU1X2gQ"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_9C8LTQKlEeOyhdPgU1X2gQ" name="StateMachine">
      <ownedComment xmi:id="_9C8LTgKlEeOyhdPgU1X2gQ" annotatedElement="_9C8LTQKlEeOyhdPgU1X2gQ">
        <body>State machines can be used to express the behavior of part of a system. Behavior is modeled as a traversal of a graph of state nodes interconnected by one or more joined transition arcs that are triggered by the dispatching of series of (event) occurrences. During this traversal, the state machine executes a series of activities associated with various elements of the state machine.</body>
      </ownedComment>
      <generalization xmi:id="_9C8LWwKlEeOyhdPgU1X2gQ" general="_9DY3WAKlEeOyhdPgU1X2gQ"/>
      <ownedAttribute xmi:id="_9C8LXAKlEeOyhdPgU1X2gQ" name="region" type="_9DPGcAKlEeOyhdPgU1X2gQ" aggregation="composite">
        <ownedComment xmi:id="_9C8LXQKlEeOyhdPgU1X2gQ" annotatedElement="_9C8LXAKlEeOyhdPgU1X2gQ">
          <body>The regions owned directly by the state machine.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_9C8LXgKlEeOyhdPgU1X2gQ" value="*"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_9C8LXwKlEeOyhdPgU1X2gQ" name="connectionPoint" type="_9DPGIAKlEeOyhdPgU1X2gQ" aggregation="composite">
        <ownedComment xmi:id="_9C8LYAKlEeOyhdPgU1X2gQ" annotatedElement="_9C8LXwKlEeOyhdPgU1X2gQ">
          <body>The connection points defined for this state machine. They represent the interface of the state machine when used as part of submachine state.</body>
        </ownedComment>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_9C8LYQKlEeOyhdPgU1X2gQ"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_9C8LYgKlEeOyhdPgU1X2gQ" value="*"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_9C8LYwKlEeOyhdPgU1X2gQ" name="extendedStateMachine" type="_9C8LTQKlEeOyhdPgU1X2gQ">
        <ownedComment xmi:id="_9C8LZAKlEeOyhdPgU1X2gQ" annotatedElement="_9C8LYwKlEeOyhdPgU1X2gQ">
          <body>The state machines of which this is an extension.</body>
        </ownedComment>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_9C8LZQKlEeOyhdPgU1X2gQ"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_9C8LZgKlEeOyhdPgU1X2gQ" value="*"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_9C8LZwKlEeOyhdPgU1X2gQ" name="submachineState" type="_9DFVIAKlEeOyhdPgU1X2gQ" association="_9DPGuAKlEeOyhdPgU1X2gQ">
        <ownedComment xmi:id="_9C8LaAKlEeOyhdPgU1X2gQ" annotatedElement="_9C8LZwKlEeOyhdPgU1X2gQ">
          <body>References the submachine(s) in case of a submachine state. Multiple machines are referenced in case of a concurrent state.</body>
        </ownedComment>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_9C8LaQKlEeOyhdPgU1X2gQ"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_9C8LagKlEeOyhdPgU1X2gQ" value="*"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_9C8LSwKlEeOyhdPgU1X2gQ" name="Stereotype">
      <generalization xmi:id="_9C8LTAKlEeOyhdPgU1X2gQ" general="_9CVuSQKlEeOyhdPgU1X2gQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_9EIeRwKlEeOyhdPgU1X2gQ" name="StringLiteralExp">
      <generalization xmi:id="_9EIeSAKlEeOyhdPgU1X2gQ" general="_9ERn8gKlEeOyhdPgU1X2gQ"/>
      <ownedAttribute xmi:id="_9EIeSQKlEeOyhdPgU1X2gQ" name="stringSymbol" type="_9C8LOgKlEeOyhdPgU1X2gQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_9DryMgKlEeOyhdPgU1X2gQ" name="TemplateBinding">
      <ownedComment xmi:id="_9DryMwKlEeOyhdPgU1X2gQ" annotatedElement="_9DryMgKlEeOyhdPgU1X2gQ">
        <body>A template binding represents a relationship between a templateable element and a template. A template binding specifies the substitutions of actual parameters for the formal parameters of the template.</body>
      </ownedComment>
      <generalization xmi:id="_9DryOgKlEeOyhdPgU1X2gQ" general="_9CpQZwKlEeOyhdPgU1X2gQ"/>
      <ownedAttribute xmi:id="_9DryOwKlEeOyhdPgU1X2gQ" name="boundElement" type="_9DryUgKlEeOyhdPgU1X2gQ" association="_9D08KQKlEeOyhdPgU1X2gQ">
        <ownedComment xmi:id="_9DryPAKlEeOyhdPgU1X2gQ" annotatedElement="_9DryOwKlEeOyhdPgU1X2gQ">
          <body>The element that is bound by this binding.</body>
        </ownedComment>
      </ownedAttribute>
      <ownedAttribute xmi:id="_9DryPQKlEeOyhdPgU1X2gQ" name="signature" type="_9DryEAKlEeOyhdPgU1X2gQ" association="_9D08LgKlEeOyhdPgU1X2gQ">
        <ownedComment xmi:id="_9DryPgKlEeOyhdPgU1X2gQ" annotatedElement="_9DryPQKlEeOyhdPgU1X2gQ">
          <body>The template signature for the template that is the target of the binding.</body>
        </ownedComment>
      </ownedAttribute>
      <ownedAttribute xmi:id="_9DryPwKlEeOyhdPgU1X2gQ" name="parameterSubstitution" type="_9DryQwKlEeOyhdPgU1X2gQ" aggregation="composite"
          association="_9D08MgKlEeOyhdPgU1X2gQ">
        <ownedComment xmi:id="_9DryQAKlEeOyhdPgU1X2gQ" annotatedElement="_9DryPwKlEeOyhdPgU1X2gQ">
          <body>The parameter substitutions owned by this template binding.</body>
        </ownedComment>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_9DryQQKlEeOyhdPgU1X2gQ"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_9DryQgKlEeOyhdPgU1X2gQ" value="*"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_9DryHwKlEeOyhdPgU1X2gQ" name="TemplateParameter">
      <ownedComment xmi:id="_9DryIAKlEeOyhdPgU1X2gQ" annotatedElement="_9DryHwKlEeOyhdPgU1X2gQ">
        <body>A template parameter exposes a parameterable element as a formal template parameter of a template.</body>
      </ownedComment>
      <generalization xmi:id="_9DryJAKlEeOyhdPgU1X2gQ" general="_9CpQZwKlEeOyhdPgU1X2gQ"/>
      <ownedAttribute xmi:id="_9DryJQKlEeOyhdPgU1X2gQ" name="signature" type="_9DryEAKlEeOyhdPgU1X2gQ" association="_9D08KAKlEeOyhdPgU1X2gQ">
        <ownedComment xmi:id="_9DryJgKlEeOyhdPgU1X2gQ" annotatedElement="_9DryJQKlEeOyhdPgU1X2gQ">
          <body>The template signature that owns this template parameter.</body>
        </ownedComment>
      </ownedAttribute>
      <ownedAttribute xmi:id="_9DryJwKlEeOyhdPgU1X2gQ" name="parameteredElement" type="_9DryaAKlEeOyhdPgU1X2gQ" association="_9D08NwKlEeOyhdPgU1X2gQ">
        <ownedComment xmi:id="_9DryKAKlEeOyhdPgU1X2gQ" annotatedElement="_9DryJwKlEeOyhdPgU1X2gQ">
          <body>The element exposed by this template parameter.</body>
        </ownedComment>
      </ownedAttribute>
      <ownedAttribute xmi:id="_9DryKQKlEeOyhdPgU1X2gQ" name="ownedParameteredElement" type="_9DryaAKlEeOyhdPgU1X2gQ" aggregation="composite"
          subsettedProperty="_9DryJwKlEeOyhdPgU1X2gQ" association="_9D08OQKlEeOyhdPgU1X2gQ">
        <ownedComment xmi:id="_9DryKgKlEeOyhdPgU1X2gQ" annotatedElement="_9DryKQKlEeOyhdPgU1X2gQ">
          <body>The element that is owned by this template parameter.</body>
        </ownedComment>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_9DryKwKlEeOyhdPgU1X2gQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_9DryLAKlEeOyhdPgU1X2gQ" name="default" type="_9DryaAKlEeOyhdPgU1X2gQ" association="_9D08OgKlEeOyhdPgU1X2gQ">
        <ownedComment xmi:id="_9DryLQKlEeOyhdPgU1X2gQ" annotatedElement="_9DryLAKlEeOyhdPgU1X2gQ">
          <body>The element that is the default for this formal template parameter.</body>
        </ownedComment>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_9DryLgKlEeOyhdPgU1X2gQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_9DryLwKlEeOyhdPgU1X2gQ" name="ownedDefault" type="_9DryaAKlEeOyhdPgU1X2gQ" aggregation="composite" subsettedProperty="_9DryLAKlEeOyhdPgU1X2gQ"
          association="_9D08PgKlEeOyhdPgU1X2gQ">
        <ownedComment xmi:id="_9DryMAKlEeOyhdPgU1X2gQ" annotatedElement="_9DryLwKlEeOyhdPgU1X2gQ">
          <body>The element that is owned by this template parameter for the purpose of providing a default.</body>
        </ownedComment>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_9DryMQKlEeOyhdPgU1X2gQ"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_9DryQwKlEeOyhdPgU1X2gQ" name="TemplateParameterSubstitution">
      <ownedComment xmi:id="_9DryRAKlEeOyhdPgU1X2gQ" annotatedElement="_9DryQwKlEeOyhdPgU1X2gQ">
        <body>A template parameter substitution relates the actual parameter to a formal template parameter as part of a template binding.</body>
      </ownedComment>
      <generalization xmi:id="_9DrySAKlEeOyhdPgU1X2gQ" general="_9CpQZwKlEeOyhdPgU1X2gQ"/>
      <ownedAttribute xmi:id="_9DrySQKlEeOyhdPgU1X2gQ" name="formal" type="_9DryHwKlEeOyhdPgU1X2gQ" association="_9D08KgKlEeOyhdPgU1X2gQ">
        <ownedComment xmi:id="_9DrySgKlEeOyhdPgU1X2gQ" annotatedElement="_9DrySQKlEeOyhdPgU1X2gQ">
          <body>The formal template parameter that is associated with this substitution.</body>
        </ownedComment>
      </ownedAttribute>
      <ownedAttribute xmi:id="_9DrySwKlEeOyhdPgU1X2gQ" name="templateBinding" type="_9DryMgKlEeOyhdPgU1X2gQ" association="_9D08MgKlEeOyhdPgU1X2gQ">
        <ownedComment xmi:id="_9DryTAKlEeOyhdPgU1X2gQ" annotatedElement="_9DrySwKlEeOyhdPgU1X2gQ">
          <body>The optional bindings from this element to templates.</body>
        </ownedComment>
      </ownedAttribute>
      <ownedAttribute xmi:id="_9DryTQKlEeOyhdPgU1X2gQ" name="actual" type="_9DryaAKlEeOyhdPgU1X2gQ" association="_9D08MwKlEeOyhdPgU1X2gQ">
        <ownedComment xmi:id="_9DryTgKlEeOyhdPgU1X2gQ" annotatedElement="_9DryTQKlEeOyhdPgU1X2gQ">
          <body>The element that is the actual parameter for this substitution.</body>
        </ownedComment>
      </ownedAttribute>
      <ownedAttribute xmi:id="_9DryTwKlEeOyhdPgU1X2gQ" name="ownedActual" type="_9DryaAKlEeOyhdPgU1X2gQ" aggregation="composite" subsettedProperty="_9DryTQKlEeOyhdPgU1X2gQ"
          association="_9D08QQKlEeOyhdPgU1X2gQ">
        <ownedComment xmi:id="_9DryUAKlEeOyhdPgU1X2gQ" annotatedElement="_9DryTwKlEeOyhdPgU1X2gQ">
          <body>The actual parameter that is owned by this substitution.</body>
        </ownedComment>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_9DryUQKlEeOyhdPgU1X2gQ"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_9EkjCwKlEeOyhdPgU1X2gQ" name="TemplateParameterType">
      <generalization xmi:id="_9EkjDAKlEeOyhdPgU1X2gQ" general="_9CffQAKlEeOyhdPgU1X2gQ"/>
      <ownedAttribute xmi:id="_9EkjDQKlEeOyhdPgU1X2gQ" name="specification" type="_9C8LOgKlEeOyhdPgU1X2gQ">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_9EkjDgKlEeOyhdPgU1X2gQ"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_9DryEAKlEeOyhdPgU1X2gQ" name="TemplateSignature">
      <ownedComment xmi:id="_9DryEQKlEeOyhdPgU1X2gQ" annotatedElement="_9DryEAKlEeOyhdPgU1X2gQ">
        <body>A template signature bundles the set of formal template parameters for a templated element.</body>
      </ownedComment>
      <generalization xmi:id="_9DryFQKlEeOyhdPgU1X2gQ" general="_9CpQZwKlEeOyhdPgU1X2gQ"/>
      <ownedAttribute xmi:id="_9DryFgKlEeOyhdPgU1X2gQ" name="parameter" type="_9DryHwKlEeOyhdPgU1X2gQ" isOrdered="true" association="_9D08JAKlEeOyhdPgU1X2gQ">
        <ownedComment xmi:id="_9DryFwKlEeOyhdPgU1X2gQ" annotatedElement="_9DryFgKlEeOyhdPgU1X2gQ">
          <body>The ordered set of all formal template parameters for this template signature.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_9DryGAKlEeOyhdPgU1X2gQ" value="*"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_9DryGQKlEeOyhdPgU1X2gQ" name="ownedParameter" type="_9DryHwKlEeOyhdPgU1X2gQ" isOrdered="true" aggregation="composite"
          subsettedProperty="_9DryFgKlEeOyhdPgU1X2gQ" association="_9D08KAKlEeOyhdPgU1X2gQ">
        <ownedComment xmi:id="_9DryGgKlEeOyhdPgU1X2gQ" annotatedElement="_9DryGQKlEeOyhdPgU1X2gQ">
          <body>The formal template parameters that are owned by this template signature.</body>
        </ownedComment>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_9DryGwKlEeOyhdPgU1X2gQ"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_9DryHAKlEeOyhdPgU1X2gQ" value="*"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_9DryHQKlEeOyhdPgU1X2gQ" name="template" type="_9DryUgKlEeOyhdPgU1X2gQ" association="_9D08OAKlEeOyhdPgU1X2gQ">
        <ownedComment xmi:id="_9DryHgKlEeOyhdPgU1X2gQ" annotatedElement="_9DryHQKlEeOyhdPgU1X2gQ">
          <body>The element that owns this template signature.</body>
        </ownedComment>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_9DryUgKlEeOyhdPgU1X2gQ" name="TemplateableElement" isAbstract="true">
      <ownedComment xmi:id="_9DryUwKlEeOyhdPgU1X2gQ" annotatedElement="_9DryUgKlEeOyhdPgU1X2gQ">
        <body>A templateable element is an element that can optionally be defined as a template and bound to other templates.</body>
      </ownedComment>
      <generalization xmi:id="_9DryVAKlEeOyhdPgU1X2gQ" general="_9CpQZwKlEeOyhdPgU1X2gQ"/>
      <ownedAttribute xmi:id="_9DryVQKlEeOyhdPgU1X2gQ" name="templateBinding" type="_9DryMgKlEeOyhdPgU1X2gQ" aggregation="composite" association="_9D08KQKlEeOyhdPgU1X2gQ">
        <ownedComment xmi:id="_9DryVgKlEeOyhdPgU1X2gQ" annotatedElement="_9DryVQKlEeOyhdPgU1X2gQ">
          <body>The optional bindings from this element to templates.</body>
        </ownedComment>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_9DryVwKlEeOyhdPgU1X2gQ"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_9DryWAKlEeOyhdPgU1X2gQ" value="*"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_9DryWQKlEeOyhdPgU1X2gQ" name="ownedTemplateSignature" type="_9DryEAKlEeOyhdPgU1X2gQ" aggregation="composite"
          association="_9D08OAKlEeOyhdPgU1X2gQ">
        <ownedComment xmi:id="_9DryWgKlEeOyhdPgU1X2gQ" annotatedElement="_9DryWQKlEeOyhdPgU1X2gQ">
          <body>The optional template signature specifying the formal template parameters.</body>
        </ownedComment>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_9DryWwKlEeOyhdPgU1X2gQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_9EuT-gKlEeOyhdPgU1X2gQ" name="unspecializedElement" type="_9DryUgKlEeOyhdPgU1X2gQ">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_9EuT-wKlEeOyhdPgU1X2gQ"/>
      </ownedAttribute>
      <ownedOperation xmi:id="_9DryXAKlEeOyhdPgU1X2gQ" name="parameterableElements" isQuery="true">
        <ownedComment xmi:id="_9DryXQKlEeOyhdPgU1X2gQ" annotatedElement="_9DryXAKlEeOyhdPgU1X2gQ">
          <body>The query parameterableElements() returns the set of elements that may be used as the parametered elements for a template parameter of this templateable element. By default, this set includes all the owned elements. Subclasses may override this operation if they choose to restrict the set of parameterable elements.</body>
        </ownedComment>
        <ownedParameter xmi:id="_9DryYAKlEeOyhdPgU1X2gQ" type="_9DryaAKlEeOyhdPgU1X2gQ" direction="return">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_9DryYQKlEeOyhdPgU1X2gQ"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_9DryYgKlEeOyhdPgU1X2gQ" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_9DryYwKlEeOyhdPgU1X2gQ" name="isTemplate" isQuery="true">
        <ownedComment xmi:id="_9DryZAKlEeOyhdPgU1X2gQ" annotatedElement="_9DryYwKlEeOyhdPgU1X2gQ">
          <body>The query isTemplate() returns whether this templateable element is actually a template.</body>
        </ownedComment>
        <ownedParameter xmi:id="_9DryZwKlEeOyhdPgU1X2gQ" type="_9C8LRAKlEeOyhdPgU1X2gQ" direction="return"/>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_9DFVYQKlEeOyhdPgU1X2gQ" name="Transition">
      <ownedComment xmi:id="_9DFVYgKlEeOyhdPgU1X2gQ" annotatedElement="_9DFVYQKlEeOyhdPgU1X2gQ">
        <body>A transition is a directed relationship between a source vertex and a target vertex. It may be part of a compound transition, which takes the state machine from one state configuration to another, representing the complete response of the state machine to an occurrence of an event of a particular type.</body>
      </ownedComment>
      <generalization xmi:id="_9DFVeAKlEeOyhdPgU1X2gQ" general="_9CyacAKlEeOyhdPgU1X2gQ"/>
      <ownedAttribute xmi:id="_9DFVeQKlEeOyhdPgU1X2gQ" name="kind" type="_9DPGpgKlEeOyhdPgU1X2gQ">
        <ownedComment xmi:id="_9DFVegKlEeOyhdPgU1X2gQ" annotatedElement="_9DFVeQKlEeOyhdPgU1X2gQ">
          <body>Indicates  the precise type of the transition.</body>
        </ownedComment>
        <defaultValue xmi:type="uml:LiteralString" xmi:id="_9DFVewKlEeOyhdPgU1X2gQ" value="external"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_9DFVfAKlEeOyhdPgU1X2gQ" name="container" type="_9DPGcAKlEeOyhdPgU1X2gQ" association="_9DPGtQKlEeOyhdPgU1X2gQ">
        <ownedComment xmi:id="_9DFVfQKlEeOyhdPgU1X2gQ" annotatedElement="_9DFVfAKlEeOyhdPgU1X2gQ">
          <body>Designates the region that owns this transition.</body>
        </ownedComment>
      </ownedAttribute>
      <ownedAttribute xmi:id="_9DFVfgKlEeOyhdPgU1X2gQ" name="source" type="_9DFVjAKlEeOyhdPgU1X2gQ" association="_9DPGtgKlEeOyhdPgU1X2gQ">
        <ownedComment xmi:id="_9DFVfwKlEeOyhdPgU1X2gQ" annotatedElement="_9DFVfgKlEeOyhdPgU1X2gQ">
          <body>Designates the originating vertex (state or pseudostate) of the transition.</body>
        </ownedComment>
      </ownedAttribute>
      <ownedAttribute xmi:id="_9DFVgAKlEeOyhdPgU1X2gQ" name="target" type="_9DFVjAKlEeOyhdPgU1X2gQ" association="_9DPGtwKlEeOyhdPgU1X2gQ">
        <ownedComment xmi:id="_9DFVgQKlEeOyhdPgU1X2gQ" annotatedElement="_9DFVgAKlEeOyhdPgU1X2gQ">
          <body>Designates the target vertex that is reached when the transition is taken.</body>
        </ownedComment>
      </ownedAttribute>
      <ownedAttribute xmi:id="_9DFVggKlEeOyhdPgU1X2gQ" name="guard" type="_9CyaMAKlEeOyhdPgU1X2gQ" aggregation="composite">
        <ownedComment xmi:id="_9DFVgwKlEeOyhdPgU1X2gQ" annotatedElement="_9DFVggKlEeOyhdPgU1X2gQ">
          <body>A guard is a constraint that provides a fine-grained control over the firing of the transition. The guard is evaluated when an event occurrence is dispatched by the state machine. If the guard is true at that time, the transition may be enabled, otherwise, it is disabled. Guards should be pure expressions without side effects. Guard expressions with side effects are ill formed.</body>
        </ownedComment>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_9DFVhAKlEeOyhdPgU1X2gQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_9DFVhQKlEeOyhdPgU1X2gQ" name="effect" type="_9DY3WAKlEeOyhdPgU1X2gQ" aggregation="composite">
        <ownedComment xmi:id="_9DFVhgKlEeOyhdPgU1X2gQ" annotatedElement="_9DFVhQKlEeOyhdPgU1X2gQ">
          <body>Specifies an optional behavior to be performed when the transition fires.</body>
        </ownedComment>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_9DFVhwKlEeOyhdPgU1X2gQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_9DFViAKlEeOyhdPgU1X2gQ" name="trigger" type="_9DY3XQKlEeOyhdPgU1X2gQ" aggregation="composite">
        <ownedComment xmi:id="_9DFViQKlEeOyhdPgU1X2gQ" annotatedElement="_9DFViAKlEeOyhdPgU1X2gQ">
          <body>Specifies the triggers that may fire the transition.</body>
        </ownedComment>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_9DFVigKlEeOyhdPgU1X2gQ"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_9DFViwKlEeOyhdPgU1X2gQ" value="*"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_9DY3XQKlEeOyhdPgU1X2gQ" name="Trigger">
      <generalization xmi:id="_9DY3XgKlEeOyhdPgU1X2gQ" general="_9CVuQwKlEeOyhdPgU1X2gQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_9ERoBQKlEeOyhdPgU1X2gQ" name="TupleLiteralExp">
      <generalization xmi:id="_9ERoBgKlEeOyhdPgU1X2gQ" general="_9ERn8AKlEeOyhdPgU1X2gQ"/>
      <ownedAttribute xmi:id="_9ERoBwKlEeOyhdPgU1X2gQ" name="part" type="_9ERoGwKlEeOyhdPgU1X2gQ" isOrdered="true" aggregation="composite">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_9ERoCAKlEeOyhdPgU1X2gQ"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_9ERoCQKlEeOyhdPgU1X2gQ" value="*"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_9ERoGwKlEeOyhdPgU1X2gQ" name="TupleLiteralPart">
      <generalization xmi:id="_9ERoHAKlEeOyhdPgU1X2gQ" general="_9CpQQAKlEeOyhdPgU1X2gQ"/>
      <generalization xmi:id="_9EkjFAKlEeOyhdPgU1X2gQ" general="_9EbY9gKlEeOyhdPgU1X2gQ"/>
      <ownedAttribute xmi:id="_9ERoHQKlEeOyhdPgU1X2gQ" name="initExpression" type="_9EIeGwKlEeOyhdPgU1X2gQ" aggregation="composite">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_9ERoHgKlEeOyhdPgU1X2gQ"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_9EkjDwKlEeOyhdPgU1X2gQ" name="TupleType">
      <generalization xmi:id="_9EkjEAKlEeOyhdPgU1X2gQ" general="_9CpQZAKlEeOyhdPgU1X2gQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_9CffQAKlEeOyhdPgU1X2gQ" name="Type">
      <ownedComment xmi:id="_9CffQQKlEeOyhdPgU1X2gQ" annotatedElement="_9CffQAKlEeOyhdPgU1X2gQ">
        <body>A type is a named element that is used as the type for a typed element. A type can be contained in a package.</body>
      </ownedComment>
      <ownedComment xmi:id="_9D08CAKlEeOyhdPgU1X2gQ" annotatedElement="_9CffQAKlEeOyhdPgU1X2gQ">
        <body>Type is defined to be a kind of templateable element so that a type can be parameterized. It is also defined to be a kind of parameterable element so that a type can be a formal template parameter.</body>
      </ownedComment>
      <generalization xmi:id="_9CffQgKlEeOyhdPgU1X2gQ" general="_9CVuQwKlEeOyhdPgU1X2gQ"/>
      <generalization xmi:id="_9D08CQKlEeOyhdPgU1X2gQ" general="_9DryUgKlEeOyhdPgU1X2gQ"/>
      <generalization xmi:id="_9D08CgKlEeOyhdPgU1X2gQ" general="_9DryaAKlEeOyhdPgU1X2gQ"/>
      <ownedAttribute xmi:id="_9CffQwKlEeOyhdPgU1X2gQ" name="package" type="_9CpQVgKlEeOyhdPgU1X2gQ" association="_9CpQiwKlEeOyhdPgU1X2gQ">
        <ownedComment xmi:id="_9CffRAKlEeOyhdPgU1X2gQ" annotatedElement="_9CffQwKlEeOyhdPgU1X2gQ">
          <body>Specifies the owning package of this classifier, if any.</body>
        </ownedComment>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_9CffRQKlEeOyhdPgU1X2gQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_9D08CwKlEeOyhdPgU1X2gQ" name="templateParameter" type="_9D08EwKlEeOyhdPgU1X2gQ" redefinedProperty="_9DryawKlEeOyhdPgU1X2gQ"
          association="_9D08RAKlEeOyhdPgU1X2gQ">
        <ownedComment xmi:id="_9D08DAKlEeOyhdPgU1X2gQ" annotatedElement="_9D08CwKlEeOyhdPgU1X2gQ">
          <body>The template parameter that exposes this element as a formal parameter.</body>
        </ownedComment>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_9D08DQKlEeOyhdPgU1X2gQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_9D-tEAKlEeOyhdPgU1X2gQ" name="ownedAttribute" type="_9CVubgKlEeOyhdPgU1X2gQ" isOrdered="true" aggregation="composite"
          association="_9D-tGQKlEeOyhdPgU1X2gQ">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_9D-tEQKlEeOyhdPgU1X2gQ"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_9D-tEgKlEeOyhdPgU1X2gQ" value="*"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_9D-tEwKlEeOyhdPgU1X2gQ" name="ownedOperation" type="_9CVuRAKlEeOyhdPgU1X2gQ" isOrdered="true" aggregation="composite"
          association="_9D-tGgKlEeOyhdPgU1X2gQ">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_9D-tFAKlEeOyhdPgU1X2gQ"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_9D-tFQKlEeOyhdPgU1X2gQ" value="*"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_9D-tFgKlEeOyhdPgU1X2gQ" name="superClass" type="_9CffQAKlEeOyhdPgU1X2gQ" isOrdered="true">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_9D-tFwKlEeOyhdPgU1X2gQ"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_9D-tGAKlEeOyhdPgU1X2gQ" value="*"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_9EIeBQKlEeOyhdPgU1X2gQ" name="ownedInvariant" type="_9CyaMAKlEeOyhdPgU1X2gQ" aggregation="composite">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_9EIeBgKlEeOyhdPgU1X2gQ"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_9EIeBwKlEeOyhdPgU1X2gQ" value="*"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_9E4E9gKlEeOyhdPgU1X2gQ" name="instanceClassName" type="_9C8LOgKlEeOyhdPgU1X2gQ">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_9E4E9wKlEeOyhdPgU1X2gQ"/>
      </ownedAttribute>
      <ownedOperation xmi:id="_9D08DgKlEeOyhdPgU1X2gQ" name="isTemplate" isQuery="true" redefinedOperation="_9DryYwKlEeOyhdPgU1X2gQ">
        <ownedComment xmi:id="_9D08DwKlEeOyhdPgU1X2gQ" annotatedElement="_9D08DgKlEeOyhdPgU1X2gQ">
          <body>The query isTemplate() returns whether this templateable element is actually a template.</body>
        </ownedComment>
        <ownedParameter xmi:id="_9D08EgKlEeOyhdPgU1X2gQ" type="_9C8LRAKlEeOyhdPgU1X2gQ" direction="return"/>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_9EIeOwKlEeOyhdPgU1X2gQ" clientDependency="_9FUJwwKlEeOyhdPgU1X2gQ" name="TypeExp">
      <generalization xmi:id="_9EIePAKlEeOyhdPgU1X2gQ" general="_9EIeGwKlEeOyhdPgU1X2gQ"/>
      <ownedAttribute xmi:id="_9EIePQKlEeOyhdPgU1X2gQ" name="referredType" type="_9CffQAKlEeOyhdPgU1X2gQ">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_9EIePgKlEeOyhdPgU1X2gQ"/>
      </ownedAttribute>
      <interfaceRealization xmi:id="_9FUJwwKlEeOyhdPgU1X2gQ" client="_9EIeOwKlEeOyhdPgU1X2gQ" supplier="_9FUJwAKlEeOyhdPgU1X2gQ" contract="_9FUJwAKlEeOyhdPgU1X2gQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_9D08EwKlEeOyhdPgU1X2gQ" name="TypeTemplateParameter">
      <ownedComment xmi:id="_9D08FAKlEeOyhdPgU1X2gQ" annotatedElement="_9D08EwKlEeOyhdPgU1X2gQ">
        <body>A type template parameter exposes a type as a formal template parameter.</body>
      </ownedComment>
      <generalization xmi:id="_9D08GAKlEeOyhdPgU1X2gQ" general="_9DryHwKlEeOyhdPgU1X2gQ"/>
      <ownedAttribute xmi:id="_9D08GQKlEeOyhdPgU1X2gQ" name="allowSubstitutable" type="_9C8LRAKlEeOyhdPgU1X2gQ">
        <ownedComment xmi:id="_9D08GgKlEeOyhdPgU1X2gQ" annotatedElement="_9D08GQKlEeOyhdPgU1X2gQ">
          <body>Constrains the required relationship between an actual parameter and the parameteredElement for this formal parameter.</body>
        </ownedComment>
        <defaultValue xmi:type="uml:LiteralString" xmi:id="_9D08GwKlEeOyhdPgU1X2gQ" value="true"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_9D08HAKlEeOyhdPgU1X2gQ" name="parameteredElement" type="_9CffQAKlEeOyhdPgU1X2gQ" redefinedProperty="_9DryJwKlEeOyhdPgU1X2gQ"
          association="_9D08RAKlEeOyhdPgU1X2gQ">
        <ownedComment xmi:id="_9D08HQKlEeOyhdPgU1X2gQ" annotatedElement="_9D08HAKlEeOyhdPgU1X2gQ">
          <body>The parameterable classifier for this template parameter.</body>
        </ownedComment>
      </ownedAttribute>
      <ownedAttribute xmi:id="_9D08HgKlEeOyhdPgU1X2gQ" name="constrainingType" type="_9CffQAKlEeOyhdPgU1X2gQ" association="_9D08RgKlEeOyhdPgU1X2gQ">
        <ownedComment xmi:id="_9D08HwKlEeOyhdPgU1X2gQ" annotatedElement="_9D08HgKlEeOyhdPgU1X2gQ">
          <body>The classifiers that constrain the argument that can be used for the parameter. If the allowSubstitutable attribute is true, then any classifier that is compatible with this constraining classifier can be substituted; otherwise, it must be either this classifier or one of its subclasses. If this property is empty, there are no constraints on the classifier that can be used as an argument.</body>
        </ownedComment>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_9D08IAKlEeOyhdPgU1X2gQ"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_9D08IQKlEeOyhdPgU1X2gQ" value="*"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_9CpQQAKlEeOyhdPgU1X2gQ" name="TypedElement" isAbstract="true">
      <ownedComment xmi:id="_9CpQQQKlEeOyhdPgU1X2gQ" annotatedElement="_9CpQQAKlEeOyhdPgU1X2gQ">
        <body>A typed element is a kind of named element that represents an element with a type.</body>
      </ownedComment>
      <generalization xmi:id="_9CpQQgKlEeOyhdPgU1X2gQ" general="_9CVuQwKlEeOyhdPgU1X2gQ"/>
      <ownedAttribute xmi:id="_9CpQQwKlEeOyhdPgU1X2gQ" name="type" type="_9CffQAKlEeOyhdPgU1X2gQ" association="_9CpQhQKlEeOyhdPgU1X2gQ">
        <ownedComment xmi:id="_9CpQRAKlEeOyhdPgU1X2gQ" annotatedElement="_9CpQQwKlEeOyhdPgU1X2gQ">
          <body>The type of the TypedElement.</body>
        </ownedComment>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_9CpQRQKlEeOyhdPgU1X2gQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_9FUJ0gKlEeOyhdPgU1X2gQ" name="isRequired" type="_9C8LRAKlEeOyhdPgU1X2gQ">
        <defaultValue xmi:type="uml:LiteralString" xmi:id="_9FUJ0wKlEeOyhdPgU1X2gQ" value="true"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_9FUJ1AKlEeOyhdPgU1X2gQ" name="TypedMultiplicityElement" isAbstract="true">
      <generalization xmi:id="_9FUJ1QKlEeOyhdPgU1X2gQ" general="_9CpQQAKlEeOyhdPgU1X2gQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_9EIeHQKlEeOyhdPgU1X2gQ" name="UnlimitedNaturalLiteralExp">
      <generalization xmi:id="_9EIeHgKlEeOyhdPgU1X2gQ" general="_9ERn9AKlEeOyhdPgU1X2gQ"/>
      <ownedAttribute xmi:id="_9EIeHwKlEeOyhdPgU1X2gQ" name="unlimitedNaturalSymbol" type="_9C8LRwKlEeOyhdPgU1X2gQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_9FBO4AKlEeOyhdPgU1X2gQ" name="UnspecifiedType">
      <generalization xmi:id="_9FBO4QKlEeOyhdPgU1X2gQ" general="_9CVuSQKlEeOyhdPgU1X2gQ"/>
      <ownedAttribute xmi:id="_9FBO4gKlEeOyhdPgU1X2gQ" name="lowerBound" type="_9CffQAKlEeOyhdPgU1X2gQ"/>
      <ownedAttribute xmi:id="_9FBO4wKlEeOyhdPgU1X2gQ" name="upperBound" type="_9CffQAKlEeOyhdPgU1X2gQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_9EbY8AKlEeOyhdPgU1X2gQ" name="UnspecifiedValueExp">
      <generalization xmi:id="_9EbY8QKlEeOyhdPgU1X2gQ" general="_9EIeGwKlEeOyhdPgU1X2gQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_9CyaQQKlEeOyhdPgU1X2gQ" name="ValueSpecification" isAbstract="true">
      <ownedComment xmi:id="_9CyaQgKlEeOyhdPgU1X2gQ" annotatedElement="_9CyaQQKlEeOyhdPgU1X2gQ">
        <body>A value specification is the specification of a (possibly empty) set of instances, including both objects and data values.</body>
      </ownedComment>
      <ownedComment xmi:id="_9DryeAKlEeOyhdPgU1X2gQ" annotatedElement="_9CyaQQKlEeOyhdPgU1X2gQ">
        <body>ValueSpecification specializes ParameterableElement to specify that a value specification can be exposed as a formal template parameter, and provided as an actual parameter in a binding of a template.</body>
      </ownedComment>
      <generalization xmi:id="_9CyaQwKlEeOyhdPgU1X2gQ" general="_9CpQQAKlEeOyhdPgU1X2gQ"/>
      <generalization xmi:id="_9DryeQKlEeOyhdPgU1X2gQ" general="_9DryaAKlEeOyhdPgU1X2gQ"/>
      <ownedOperation xmi:id="_9CyaRAKlEeOyhdPgU1X2gQ" name="isComputable" isQuery="true">
        <ownedComment xmi:id="_9CyaRQKlEeOyhdPgU1X2gQ" annotatedElement="_9CyaRAKlEeOyhdPgU1X2gQ">
          <body>The query isComputable() determines whether a value specification can be computed in a model. This operation cannot be fully defined in OCL. A conforming implementation is expected to deliver true for this operation for all value specifications that it can compute, and to compute all of those for which the operation is true. A conforming implementation is expected to be able to compute the value of all literals.</body>
        </ownedComment>
        <ownedParameter xmi:id="_9CyaSAKlEeOyhdPgU1X2gQ" type="_9C8LRAKlEeOyhdPgU1X2gQ" direction="return"/>
      </ownedOperation>
      <ownedOperation xmi:id="_9CyaSQKlEeOyhdPgU1X2gQ" name="integerValue" isQuery="true">
        <ownedComment xmi:id="_9CyaSgKlEeOyhdPgU1X2gQ" annotatedElement="_9CyaSQKlEeOyhdPgU1X2gQ">
          <body>The query integerValue() gives a single Integer value when one can be computed.</body>
        </ownedComment>
        <ownedParameter xmi:id="_9CyaTQKlEeOyhdPgU1X2gQ" type="_9C8LQgKlEeOyhdPgU1X2gQ" direction="return"/>
      </ownedOperation>
      <ownedOperation xmi:id="_9CyaTgKlEeOyhdPgU1X2gQ" name="booleanValue" isQuery="true">
        <ownedComment xmi:id="_9CyaTwKlEeOyhdPgU1X2gQ" annotatedElement="_9CyaTgKlEeOyhdPgU1X2gQ">
          <body>The query booleanValue() gives a single Boolean value when one can be computed.</body>
        </ownedComment>
        <ownedParameter xmi:id="_9CyaUgKlEeOyhdPgU1X2gQ" type="_9C8LRAKlEeOyhdPgU1X2gQ" direction="return"/>
      </ownedOperation>
      <ownedOperation xmi:id="_9CyaUwKlEeOyhdPgU1X2gQ" name="stringValue" isQuery="true">
        <ownedComment xmi:id="_9CyaVAKlEeOyhdPgU1X2gQ" annotatedElement="_9CyaUwKlEeOyhdPgU1X2gQ">
          <body>The query stringValue() gives a single String value when one can be computed.</body>
        </ownedComment>
        <ownedParameter xmi:id="_9CyaVwKlEeOyhdPgU1X2gQ" type="_9C8LOgKlEeOyhdPgU1X2gQ" direction="return"/>
      </ownedOperation>
      <ownedOperation xmi:id="_9CyaWAKlEeOyhdPgU1X2gQ" name="unlimitedValue" isQuery="true">
        <ownedComment xmi:id="_9CyaWQKlEeOyhdPgU1X2gQ" annotatedElement="_9CyaWAKlEeOyhdPgU1X2gQ">
          <body>The query unlimitedValue() gives a single UnlimitedNatural value when one can be computed.</body>
        </ownedComment>
        <ownedParameter xmi:id="_9CyaXAKlEeOyhdPgU1X2gQ" type="_9C8LRwKlEeOyhdPgU1X2gQ" direction="return"/>
      </ownedOperation>
      <ownedOperation xmi:id="_9CyaXQKlEeOyhdPgU1X2gQ" name="isNull" isQuery="true">
        <ownedComment xmi:id="_9CyaXgKlEeOyhdPgU1X2gQ" annotatedElement="_9CyaXQKlEeOyhdPgU1X2gQ">
          <body>The query isNull() returns true when it can be computed that the value is null.</body>
        </ownedComment>
        <ownedParameter xmi:id="_9CyaYQKlEeOyhdPgU1X2gQ" type="_9C8LRAKlEeOyhdPgU1X2gQ" direction="return"/>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_9EIeLQKlEeOyhdPgU1X2gQ" name="Variable">
      <generalization xmi:id="_9EIeLgKlEeOyhdPgU1X2gQ" general="_9CpQQAKlEeOyhdPgU1X2gQ"/>
      <generalization xmi:id="_9EkjFgKlEeOyhdPgU1X2gQ" general="_9EbY9gKlEeOyhdPgU1X2gQ"/>
      <ownedAttribute xmi:id="_9EIeLwKlEeOyhdPgU1X2gQ" name="initExpression" type="_9EIeGwKlEeOyhdPgU1X2gQ" aggregation="composite">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_9EIeMAKlEeOyhdPgU1X2gQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_9EIeMQKlEeOyhdPgU1X2gQ" name="representedParameter" type="_9CVuaAKlEeOyhdPgU1X2gQ">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_9EIeMgKlEeOyhdPgU1X2gQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_9EkjFwKlEeOyhdPgU1X2gQ" name="implicit" type="_9C8LRAKlEeOyhdPgU1X2gQ">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_9EkjGAKlEeOyhdPgU1X2gQ"/>
        <defaultValue xmi:type="uml:LiteralString" xmi:id="_9EkjGQKlEeOyhdPgU1X2gQ" value="false"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_9EbY9gKlEeOyhdPgU1X2gQ" name="VariableDeclaration" isAbstract="true">
      <generalization xmi:id="_9EkjFQKlEeOyhdPgU1X2gQ" general="_9CpQQAKlEeOyhdPgU1X2gQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_9EIeNwKlEeOyhdPgU1X2gQ" clientDependency="_9FUJxAKlEeOyhdPgU1X2gQ" name="VariableExp">
      <generalization xmi:id="_9EIeOAKlEeOyhdPgU1X2gQ" general="_9EIeGwKlEeOyhdPgU1X2gQ"/>
      <ownedAttribute xmi:id="_9EIeOQKlEeOyhdPgU1X2gQ" name="referredVariable" type="_9EbY9gKlEeOyhdPgU1X2gQ">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_9EIeOgKlEeOyhdPgU1X2gQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_9EuT4AKlEeOyhdPgU1X2gQ" name="implicit" type="_9C8LRAKlEeOyhdPgU1X2gQ">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_9EuT4QKlEeOyhdPgU1X2gQ"/>
        <defaultValue xmi:type="uml:LiteralString" xmi:id="_9EuT4gKlEeOyhdPgU1X2gQ" value="false"/>
      </ownedAttribute>
      <interfaceRealization xmi:id="_9FUJxAKlEeOyhdPgU1X2gQ" client="_9EIeNwKlEeOyhdPgU1X2gQ" supplier="_9FUJwAKlEeOyhdPgU1X2gQ" contract="_9FUJwAKlEeOyhdPgU1X2gQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_9DFVjAKlEeOyhdPgU1X2gQ" name="Vertex" isAbstract="true">
      <ownedComment xmi:id="_9DFVjQKlEeOyhdPgU1X2gQ" annotatedElement="_9DFVjAKlEeOyhdPgU1X2gQ">
        <body>A vertex is an abstraction of a node in a state machine graph. In general, it can be the source or destination of any number of transitions.</body>
      </ownedComment>
      <generalization xmi:id="_9DFVjgKlEeOyhdPgU1X2gQ" general="_9CVuQwKlEeOyhdPgU1X2gQ"/>
      <ownedAttribute xmi:id="_9DFVjwKlEeOyhdPgU1X2gQ" name="container" type="_9DPGcAKlEeOyhdPgU1X2gQ" association="_9DPGtAKlEeOyhdPgU1X2gQ">
        <ownedComment xmi:id="_9DFVkAKlEeOyhdPgU1X2gQ" annotatedElement="_9DFVjwKlEeOyhdPgU1X2gQ">
          <body>The region that contains this vertex.</body>
        </ownedComment>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_9DFVkQKlEeOyhdPgU1X2gQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_9DFVkgKlEeOyhdPgU1X2gQ" name="outgoing" type="_9DFVYQKlEeOyhdPgU1X2gQ" association="_9DPGtgKlEeOyhdPgU1X2gQ">
        <ownedComment xmi:id="_9DFVkwKlEeOyhdPgU1X2gQ" annotatedElement="_9DFVkgKlEeOyhdPgU1X2gQ">
          <body>Specifies the transitions departing from this vertex.</body>
        </ownedComment>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_9DFVlAKlEeOyhdPgU1X2gQ"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_9DFVlQKlEeOyhdPgU1X2gQ" value="*"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_9DFVlgKlEeOyhdPgU1X2gQ" name="incoming" type="_9DFVYQKlEeOyhdPgU1X2gQ" association="_9DPGtwKlEeOyhdPgU1X2gQ">
        <ownedComment xmi:id="_9DFVlwKlEeOyhdPgU1X2gQ" annotatedElement="_9DFVlgKlEeOyhdPgU1X2gQ">
          <body>Specifies the transitions entering this vertex.</body>
        </ownedComment>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_9DFVmAKlEeOyhdPgU1X2gQ"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_9DFVmQKlEeOyhdPgU1X2gQ" value="*"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_9EkjEQKlEeOyhdPgU1X2gQ" name="VoidType">
      <generalization xmi:id="_9EkjEgKlEeOyhdPgU1X2gQ" general="_9CVuSQKlEeOyhdPgU1X2gQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_9D08MwKlEeOyhdPgU1X2gQ" name="A_actual_templateParameterSubstitution" memberEnd="_9DryTQKlEeOyhdPgU1X2gQ _9D08NAKlEeOyhdPgU1X2gQ">
      <ownedEnd xmi:id="_9D08NAKlEeOyhdPgU1X2gQ" name="templateParameterSubstitution" type="_9DryQwKlEeOyhdPgU1X2gQ" association="_9D08MwKlEeOyhdPgU1X2gQ">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_9D08NQKlEeOyhdPgU1X2gQ"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_9D08NgKlEeOyhdPgU1X2gQ" value="*"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_9CpQjAKlEeOyhdPgU1X2gQ" name="A_annotatedElement_comment" memberEnd="_9CpQcwKlEeOyhdPgU1X2gQ _9CpQjQKlEeOyhdPgU1X2gQ">
      <ownedEnd xmi:id="_9CpQjQKlEeOyhdPgU1X2gQ" name="comment" type="_9CpQbQKlEeOyhdPgU1X2gQ" association="_9CpQjAKlEeOyhdPgU1X2gQ">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_9CpQjgKlEeOyhdPgU1X2gQ"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_9CpQjwKlEeOyhdPgU1X2gQ" value="*"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_9D-tCgKlEeOyhdPgU1X2gQ" name="A_associationClass_property" memberEnd="_9D-tAgKlEeOyhdPgU1X2gQ _9D-tBQKlEeOyhdPgU1X2gQ"/>
    <packagedElement xmi:type="uml:Association" xmi:id="_9FUJzwKlEeOyhdPgU1X2gQ" name="A_base_extension" memberEnd="_9FUJxgKlEeOyhdPgU1X2gQ _9FUJywKlEeOyhdPgU1X2gQ"/>
    <packagedElement xmi:type="uml:Association" xmi:id="_9DY3UQKlEeOyhdPgU1X2gQ" name="A_connectionPoint_state"/>
    <packagedElement xmi:type="uml:Association" xmi:id="_9DY3KwKlEeOyhdPgU1X2gQ" name="A_connectionPoint_stateMachine"/>
    <packagedElement xmi:type="uml:Association" xmi:id="_9D08RgKlEeOyhdPgU1X2gQ" name="A_constrainingType_typeTemplateParameter" memberEnd="_9D08HgKlEeOyhdPgU1X2gQ _9D08RwKlEeOyhdPgU1X2gQ">
      <ownedEnd xmi:id="_9D08RwKlEeOyhdPgU1X2gQ" name="typeTemplateParameter" type="_9D08EwKlEeOyhdPgU1X2gQ" association="_9D08RgKlEeOyhdPgU1X2gQ">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_9D08SAKlEeOyhdPgU1X2gQ"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_9D08SQKlEeOyhdPgU1X2gQ" value="*"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_9DPGtAKlEeOyhdPgU1X2gQ" name="A_container_subvertex" memberEnd="_9DFVjwKlEeOyhdPgU1X2gQ _9DPGfwKlEeOyhdPgU1X2gQ"/>
    <packagedElement xmi:type="uml:Association" xmi:id="_9DPGtQKlEeOyhdPgU1X2gQ" name="A_container_transition" memberEnd="_9DFVfAKlEeOyhdPgU1X2gQ _9DPGgwKlEeOyhdPgU1X2gQ"/>
    <packagedElement xmi:type="uml:Association" xmi:id="_9D08OgKlEeOyhdPgU1X2gQ" name="A_default_templateParameter" memberEnd="_9DryLAKlEeOyhdPgU1X2gQ _9D08OwKlEeOyhdPgU1X2gQ">
      <ownedEnd xmi:id="_9D08OwKlEeOyhdPgU1X2gQ" name="templateParameter" type="_9DryHwKlEeOyhdPgU1X2gQ" association="_9D08OgKlEeOyhdPgU1X2gQ">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_9D08PAKlEeOyhdPgU1X2gQ"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_9D08PQKlEeOyhdPgU1X2gQ" value="*"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_9DY3VQKlEeOyhdPgU1X2gQ" name="A_deferrableTrigger_state" memberEnd="_9DY3VgKlEeOyhdPgU1X2gQ">
      <ownedEnd xmi:id="_9DY3VgKlEeOyhdPgU1X2gQ" type="_9DFVIAKlEeOyhdPgU1X2gQ" association="_9DY3VQKlEeOyhdPgU1X2gQ">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_9DY3VwKlEeOyhdPgU1X2gQ"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_9DY3TgKlEeOyhdPgU1X2gQ" name="A_doActivity_state" memberEnd="_9DY3TwKlEeOyhdPgU1X2gQ">
      <ownedEnd xmi:id="_9DY3TwKlEeOyhdPgU1X2gQ" type="_9DFVIAKlEeOyhdPgU1X2gQ" association="_9DY3TgKlEeOyhdPgU1X2gQ">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_9DY3UAKlEeOyhdPgU1X2gQ"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_9DY3RQKlEeOyhdPgU1X2gQ" name="A_effect_transition" memberEnd="_9DY3RgKlEeOyhdPgU1X2gQ">
      <ownedEnd xmi:id="_9DY3RgKlEeOyhdPgU1X2gQ" type="_9DFVYQKlEeOyhdPgU1X2gQ" association="_9DY3RQKlEeOyhdPgU1X2gQ">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_9DY3RwKlEeOyhdPgU1X2gQ"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_9DPGuQKlEeOyhdPgU1X2gQ" name="A_entry_connectionPointReference" memberEnd="_9DPGugKlEeOyhdPgU1X2gQ">
      <ownedEnd xmi:id="_9DPGugKlEeOyhdPgU1X2gQ" name="" type="_9DPGXAKlEeOyhdPgU1X2gQ" association="_9DPGuQKlEeOyhdPgU1X2gQ">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_9DPGuwKlEeOyhdPgU1X2gQ"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_9DY3SAKlEeOyhdPgU1X2gQ" name="A_entry_state" memberEnd="_9DY3SQKlEeOyhdPgU1X2gQ">
      <ownedEnd xmi:id="_9DY3SQKlEeOyhdPgU1X2gQ" type="_9DFVIAKlEeOyhdPgU1X2gQ" association="_9DY3SAKlEeOyhdPgU1X2gQ">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_9DY3SgKlEeOyhdPgU1X2gQ"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_9DY3JwKlEeOyhdPgU1X2gQ" name="A_exit_connectionPointReference" memberEnd="_9DY3KAKlEeOyhdPgU1X2gQ">
      <ownedEnd xmi:id="_9DY3KAKlEeOyhdPgU1X2gQ" type="_9DPGXAKlEeOyhdPgU1X2gQ" association="_9DY3JwKlEeOyhdPgU1X2gQ">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_9DY3KQKlEeOyhdPgU1X2gQ"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_9DY3SwKlEeOyhdPgU1X2gQ" name="A_exit_state" memberEnd="_9DY3TAKlEeOyhdPgU1X2gQ">
      <ownedEnd xmi:id="_9DY3TAKlEeOyhdPgU1X2gQ" type="_9DFVIAKlEeOyhdPgU1X2gQ" association="_9DY3SwKlEeOyhdPgU1X2gQ">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_9DY3TQKlEeOyhdPgU1X2gQ"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_9D08KgKlEeOyhdPgU1X2gQ" name="A_formal_templateParameterSubstitution" memberEnd="_9DrySQKlEeOyhdPgU1X2gQ _9D08KwKlEeOyhdPgU1X2gQ">
      <ownedEnd xmi:id="_9D08KwKlEeOyhdPgU1X2gQ" name="templateParameterSubstitution" type="_9DryQwKlEeOyhdPgU1X2gQ" association="_9D08KgKlEeOyhdPgU1X2gQ">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_9D08LAKlEeOyhdPgU1X2gQ"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_9D08LQKlEeOyhdPgU1X2gQ" value="*"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_9DY3MwKlEeOyhdPgU1X2gQ" name="A_guard_transition" memberEnd="_9DY3NAKlEeOyhdPgU1X2gQ">
      <ownedEnd xmi:id="_9DY3NAKlEeOyhdPgU1X2gQ" type="_9DFVYQKlEeOyhdPgU1X2gQ" association="_9DY3MwKlEeOyhdPgU1X2gQ">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_9DY3NQKlEeOyhdPgU1X2gQ"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_9DPGtwKlEeOyhdPgU1X2gQ" name="A_incoming_target" memberEnd="_9DFVlgKlEeOyhdPgU1X2gQ _9DFVgAKlEeOyhdPgU1X2gQ"/>
    <packagedElement xmi:type="uml:Association" xmi:id="_9CpQigKlEeOyhdPgU1X2gQ" name="A_nestedPackage_nestingPackage" memberEnd="_9CpQWQKlEeOyhdPgU1X2gQ _9CpQXQKlEeOyhdPgU1X2gQ"/>
    <packagedElement xmi:type="uml:Association" xmi:id="_9D08RQKlEeOyhdPgU1X2gQ" name="A_operation_templateParameter_parameteredElement"
        memberEnd="_9DryfQKlEeOyhdPgU1X2gQ _9D08AwKlEeOyhdPgU1X2gQ"/>
    <packagedElement xmi:type="uml:Association" xmi:id="_9CpQfAKlEeOyhdPgU1X2gQ" name="A_opposite_property" memberEnd="_9CVugAKlEeOyhdPgU1X2gQ _9CpQfQKlEeOyhdPgU1X2gQ">
      <ownedEnd xmi:id="_9CpQfQKlEeOyhdPgU1X2gQ" name="property" type="_9CVubgKlEeOyhdPgU1X2gQ" association="_9CpQfAKlEeOyhdPgU1X2gQ">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_9CpQfgKlEeOyhdPgU1X2gQ"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_9DPGtgKlEeOyhdPgU1X2gQ" name="A_outgoing_source" memberEnd="_9DFVkgKlEeOyhdPgU1X2gQ _9DFVfgKlEeOyhdPgU1X2gQ"/>
    <packagedElement xmi:type="uml:Association" xmi:id="_9D08QQKlEeOyhdPgU1X2gQ" name="A_ownedActual_templateParameterSubstitution" memberEnd="_9DryTwKlEeOyhdPgU1X2gQ _9D08QgKlEeOyhdPgU1X2gQ">
      <ownedEnd xmi:id="_9D08QgKlEeOyhdPgU1X2gQ" name="templateParameterSubstitution" type="_9DryQwKlEeOyhdPgU1X2gQ" association="_9D08QQKlEeOyhdPgU1X2gQ">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_9D08QwKlEeOyhdPgU1X2gQ"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_9CpQewKlEeOyhdPgU1X2gQ" name="A_ownedAttribute_class" memberEnd="_9CVuTwKlEeOyhdPgU1X2gQ _9CVufQKlEeOyhdPgU1X2gQ"/>
    <packagedElement xmi:type="uml:Association" xmi:id="_9D-tGQKlEeOyhdPgU1X2gQ" name="A_ownedAttribute_owningType" memberEnd="_9D-tEAKlEeOyhdPgU1X2gQ _9D-tDgKlEeOyhdPgU1X2gQ"/>
    <packagedElement xmi:type="uml:Association" xmi:id="_9CpQkAKlEeOyhdPgU1X2gQ" name="A_ownedComment_owningElement" memberEnd="_9CpQaQKlEeOyhdPgU1X2gQ _9CpQkQKlEeOyhdPgU1X2gQ">
      <ownedEnd xmi:id="_9CpQkQKlEeOyhdPgU1X2gQ" name="owningElement" type="_9CpQZwKlEeOyhdPgU1X2gQ" association="_9CpQkAKlEeOyhdPgU1X2gQ">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_9CpQkgKlEeOyhdPgU1X2gQ"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_9D08PgKlEeOyhdPgU1X2gQ" name="A_ownedDefault_templateParameter" memberEnd="_9DryLwKlEeOyhdPgU1X2gQ _9D08PwKlEeOyhdPgU1X2gQ">
      <ownedEnd xmi:id="_9D08PwKlEeOyhdPgU1X2gQ" name="templateParameter" type="_9DryHwKlEeOyhdPgU1X2gQ" association="_9D08PgKlEeOyhdPgU1X2gQ">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_9D08QAKlEeOyhdPgU1X2gQ"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_9CpQiQKlEeOyhdPgU1X2gQ" name="A_ownedLiteral_enumeration" memberEnd="_9CpQSQKlEeOyhdPgU1X2gQ _9CpQUAKlEeOyhdPgU1X2gQ"/>
    <packagedElement xmi:type="uml:Association" xmi:id="_9CpQgAKlEeOyhdPgU1X2gQ" name="A_ownedOperation_class" memberEnd="_9CVuUwKlEeOyhdPgU1X2gQ _9CVuZQKlEeOyhdPgU1X2gQ"/>
    <packagedElement xmi:type="uml:Association" xmi:id="_9D-tGgKlEeOyhdPgU1X2gQ" name="A_ownedOperation_owningType" memberEnd="_9D-tEwKlEeOyhdPgU1X2gQ _9D-tDAKlEeOyhdPgU1X2gQ"/>
    <packagedElement xmi:type="uml:Association" xmi:id="_9CpQfwKlEeOyhdPgU1X2gQ" name="A_ownedParameter_operation" memberEnd="_9CVuYQKlEeOyhdPgU1X2gQ _9CVuawKlEeOyhdPgU1X2gQ"/>
    <packagedElement xmi:type="uml:Association" xmi:id="_9D08KAKlEeOyhdPgU1X2gQ" name="A_ownedParameter_signature" memberEnd="_9DryGQKlEeOyhdPgU1X2gQ _9DryJQKlEeOyhdPgU1X2gQ"/>
    <packagedElement xmi:type="uml:Association" xmi:id="_9D08OQKlEeOyhdPgU1X2gQ" name="A_ownedParameteredElement_owningTemplateParameter"
        memberEnd="_9DryKQKlEeOyhdPgU1X2gQ _9DrybgKlEeOyhdPgU1X2gQ"/>
    <packagedElement xmi:type="uml:Association" xmi:id="_9D08OAKlEeOyhdPgU1X2gQ" name="A_ownedTemplateSignature_template" memberEnd="_9DryWQKlEeOyhdPgU1X2gQ _9DryHQKlEeOyhdPgU1X2gQ"/>
    <packagedElement xmi:type="uml:Association" xmi:id="_9CpQiwKlEeOyhdPgU1X2gQ" name="A_ownedType_package" memberEnd="_9CpQYAKlEeOyhdPgU1X2gQ _9CffQwKlEeOyhdPgU1X2gQ"/>
    <packagedElement xmi:type="uml:Association" xmi:id="_9D08MgKlEeOyhdPgU1X2gQ" name="A_parameterSubstitution_templateBinding" memberEnd="_9DryPwKlEeOyhdPgU1X2gQ _9DrySwKlEeOyhdPgU1X2gQ"/>
    <packagedElement xmi:type="uml:Association" xmi:id="_9D08JAKlEeOyhdPgU1X2gQ" name="A_parameter_templateSignature" memberEnd="_9DryFgKlEeOyhdPgU1X2gQ _9D08JQKlEeOyhdPgU1X2gQ">
      <ownedEnd xmi:id="_9D08JQKlEeOyhdPgU1X2gQ" name="templateSignature" type="_9DryEAKlEeOyhdPgU1X2gQ" association="_9D08JAKlEeOyhdPgU1X2gQ">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_9D08JgKlEeOyhdPgU1X2gQ"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_9D08JwKlEeOyhdPgU1X2gQ" value="*"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_9D08NwKlEeOyhdPgU1X2gQ" name="A_parameteredElement_templateParameter" memberEnd="_9DryJwKlEeOyhdPgU1X2gQ _9DryawKlEeOyhdPgU1X2gQ"/>
    <packagedElement xmi:type="uml:Association" xmi:id="_9CpQdwKlEeOyhdPgU1X2gQ" name="A_raisedException_operation" memberEnd="_9CVuXQKlEeOyhdPgU1X2gQ _9CpQeAKlEeOyhdPgU1X2gQ">
      <ownedEnd xmi:id="_9CpQeAKlEeOyhdPgU1X2gQ" name="operation" type="_9CVuRAKlEeOyhdPgU1X2gQ" association="_9CpQdwKlEeOyhdPgU1X2gQ">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_9CpQeQKlEeOyhdPgU1X2gQ"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_9CpQegKlEeOyhdPgU1X2gQ" value="*"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_9DY3IQKlEeOyhdPgU1X2gQ" name="A_redefinedState_state" memberEnd="_9DY3IgKlEeOyhdPgU1X2gQ">
      <ownedEnd xmi:id="_9DY3IgKlEeOyhdPgU1X2gQ" type="_9DFVIAKlEeOyhdPgU1X2gQ" association="_9DY3IQKlEeOyhdPgU1X2gQ">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_9DY3IwKlEeOyhdPgU1X2gQ"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_9DY3JAKlEeOyhdPgU1X2gQ" name="A_redefinedTransition_transition" memberEnd="_9DY3JQKlEeOyhdPgU1X2gQ">
      <ownedEnd xmi:id="_9DY3JQKlEeOyhdPgU1X2gQ" type="_9DFVYQKlEeOyhdPgU1X2gQ" association="_9DY3JAKlEeOyhdPgU1X2gQ">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_9DY3JgKlEeOyhdPgU1X2gQ"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_9DY3NgKlEeOyhdPgU1X2gQ" name="A_redefinitionContext_region" memberEnd="_9DY3NwKlEeOyhdPgU1X2gQ">
      <ownedEnd xmi:id="_9DY3NwKlEeOyhdPgU1X2gQ" type="_9DPGcAKlEeOyhdPgU1X2gQ" association="_9DY3NgKlEeOyhdPgU1X2gQ">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_9DY3OAKlEeOyhdPgU1X2gQ"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_9DY3OQKlEeOyhdPgU1X2gQ" value="*"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_9DY3LQKlEeOyhdPgU1X2gQ" name="A_region_extendedRegion" memberEnd="_9DY3LgKlEeOyhdPgU1X2gQ">
      <ownedEnd xmi:id="_9DY3LgKlEeOyhdPgU1X2gQ" type="_9DPGcAKlEeOyhdPgU1X2gQ" association="_9DY3LQKlEeOyhdPgU1X2gQ">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_9DY3LwKlEeOyhdPgU1X2gQ"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_9DY3LAKlEeOyhdPgU1X2gQ" name="A_region_state"/>
    <packagedElement xmi:type="uml:Association" xmi:id="_9DY3KgKlEeOyhdPgU1X2gQ" name="A_region_stateMachine"/>
    <packagedElement xmi:type="uml:Association" xmi:id="_9D08LgKlEeOyhdPgU1X2gQ" name="A_signature_templateBinding" memberEnd="_9DryPQKlEeOyhdPgU1X2gQ _9D08LwKlEeOyhdPgU1X2gQ">
      <ownedEnd xmi:id="_9D08LwKlEeOyhdPgU1X2gQ" name="templateBinding" type="_9DryMgKlEeOyhdPgU1X2gQ" association="_9D08LgKlEeOyhdPgU1X2gQ">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_9D08MAKlEeOyhdPgU1X2gQ"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_9D08MQKlEeOyhdPgU1X2gQ" value="*"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_9DY3QgKlEeOyhdPgU1X2gQ" name="A_stateInvariant_owningState" memberEnd="_9DY3QwKlEeOyhdPgU1X2gQ">
      <ownedEnd xmi:id="_9DY3QwKlEeOyhdPgU1X2gQ" name="owningState" type="_9DFVIAKlEeOyhdPgU1X2gQ" association="_9DY3QgKlEeOyhdPgU1X2gQ">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_9DY3RAKlEeOyhdPgU1X2gQ"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_9DY3MAKlEeOyhdPgU1X2gQ" name="A_stateMachine_extendedStateMachine" memberEnd="_9DY3MQKlEeOyhdPgU1X2gQ">
      <ownedEnd xmi:id="_9DY3MQKlEeOyhdPgU1X2gQ" type="_9C8LTQKlEeOyhdPgU1X2gQ" association="_9DY3MAKlEeOyhdPgU1X2gQ">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_9DY3MgKlEeOyhdPgU1X2gQ"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_9DY3IAKlEeOyhdPgU1X2gQ" name="A_state_connection"/>
    <packagedElement xmi:type="uml:Association" xmi:id="_9DY3OgKlEeOyhdPgU1X2gQ" name="A_state_redefinitionContext" isDerived="true" memberEnd="_9DY3OwKlEeOyhdPgU1X2gQ">
      <ownedEnd xmi:id="_9DY3OwKlEeOyhdPgU1X2gQ" type="_9DFVIAKlEeOyhdPgU1X2gQ" association="_9DY3OgKlEeOyhdPgU1X2gQ">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_9DY3PAKlEeOyhdPgU1X2gQ"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_9DY3PQKlEeOyhdPgU1X2gQ" value="*"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_9DPGuAKlEeOyhdPgU1X2gQ" name="A_submachineState_submachine" memberEnd="_9C8LZwKlEeOyhdPgU1X2gQ _9DFVPwKlEeOyhdPgU1X2gQ"/>
    <packagedElement xmi:type="uml:Association" xmi:id="_9CpQgQKlEeOyhdPgU1X2gQ" name="A_superClass_class" memberEnd="_9CVuVwKlEeOyhdPgU1X2gQ _9CpQggKlEeOyhdPgU1X2gQ">
      <ownedEnd xmi:id="_9CpQggKlEeOyhdPgU1X2gQ" name="class" type="_9CVuSQKlEeOyhdPgU1X2gQ" association="_9CpQgQKlEeOyhdPgU1X2gQ">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_9CpQgwKlEeOyhdPgU1X2gQ"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_9CpQhAKlEeOyhdPgU1X2gQ" value="*"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_9D08KQKlEeOyhdPgU1X2gQ" name="A_templateBinding_boundElement" memberEnd="_9DryVQKlEeOyhdPgU1X2gQ _9DryOwKlEeOyhdPgU1X2gQ"/>
    <packagedElement xmi:type="uml:Association" xmi:id="_9DY3PgKlEeOyhdPgU1X2gQ" name="A_transition_redefinitionContext" memberEnd="_9DY3PwKlEeOyhdPgU1X2gQ">
      <ownedEnd xmi:id="_9DY3PwKlEeOyhdPgU1X2gQ" type="_9DFVYQKlEeOyhdPgU1X2gQ" association="_9DY3PgKlEeOyhdPgU1X2gQ">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_9DY3QAKlEeOyhdPgU1X2gQ"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_9DY3QQKlEeOyhdPgU1X2gQ" value="*"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_9DY3UgKlEeOyhdPgU1X2gQ" name="A_trigger_transition" memberEnd="_9DY3UwKlEeOyhdPgU1X2gQ">
      <ownedEnd xmi:id="_9DY3UwKlEeOyhdPgU1X2gQ" type="_9DFVYQKlEeOyhdPgU1X2gQ" association="_9DY3UgKlEeOyhdPgU1X2gQ">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_9DY3VAKlEeOyhdPgU1X2gQ"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_9D08RAKlEeOyhdPgU1X2gQ" name="A_type_templateParameter_parameteredElement" memberEnd="_9D08CwKlEeOyhdPgU1X2gQ _9D08HAKlEeOyhdPgU1X2gQ"/>
    <packagedElement xmi:type="uml:Association" xmi:id="_9CpQhQKlEeOyhdPgU1X2gQ" name="A_type_typedElement" memberEnd="_9CpQQwKlEeOyhdPgU1X2gQ _9CpQhgKlEeOyhdPgU1X2gQ">
      <ownedEnd xmi:id="_9CpQhgKlEeOyhdPgU1X2gQ" name="typedElement" type="_9CpQQAKlEeOyhdPgU1X2gQ" association="_9CpQhQKlEeOyhdPgU1X2gQ">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_9CpQhwKlEeOyhdPgU1X2gQ"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_9CpQiAKlEeOyhdPgU1X2gQ" value="*"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Interface" xmi:id="_9FBO1QKlEeOyhdPgU1X2gQ" name="MorePivotable" isAbstract="true"/>
    <packagedElement xmi:type="uml:Interface" xmi:id="_9FBO1gKlEeOyhdPgU1X2gQ" name="Nameable" isAbstract="true"/>
    <packagedElement xmi:type="uml:Interface" xmi:id="_9FBO3wKlEeOyhdPgU1X2gQ" name="Pivotable" isAbstract="true"/>
    <packagedElement xmi:type="uml:Interface" xmi:id="_9FUJwAKlEeOyhdPgU1X2gQ" name="ReferringElement">
      <ownedOperation xmi:id="_9FUJwQKlEeOyhdPgU1X2gQ" name="getReferredElement">
        <ownedParameter xmi:id="_9FUJwgKlEeOyhdPgU1X2gQ" type="_9CpQZwKlEeOyhdPgU1X2gQ" direction="return"/>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Interface" xmi:id="_9FUJ1wKlEeOyhdPgU1X2gQ" name="Visitable" isAbstract="true"/>
    <packagedElement xmi:type="uml:Interface" xmi:id="_9FUJ2AKlEeOyhdPgU1X2gQ" name="Visitor" isAbstract="true">
      <ownedTemplateSignature xmi:type="uml:RedefinableTemplateSignature" xmi:id="_9FUJ2QKlEeOyhdPgU1X2gQ" parameter="_9FUJ2gKlEeOyhdPgU1X2gQ">
        <ownedParameter xmi:type="uml:ClassifierTemplateParameter" xmi:id="_9FUJ2gKlEeOyhdPgU1X2gQ" parameteredElement="_9FUJ2wKlEeOyhdPgU1X2gQ">
          <ownedParameteredElement xmi:type="uml:Class" xmi:id="_9FUJ2wKlEeOyhdPgU1X2gQ" name="R" templateParameter="_9FUJ2gKlEeOyhdPgU1X2gQ"/>
        </ownedParameter>
      </ownedTemplateSignature>
    </packagedElement>
    <profileApplication xmi:id="_mwJtgIenEd-N4tjuug6Vsw">
      <eAnnotations xmi:id="_mwJtgYenEd-N4tjuug6Vsw" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="pathmap://UML_PROFILES/Ecore.profile.uml#_z1OFcHjqEdy8S4Cr8Rc_NA"/>
      </eAnnotations>
      <appliedProfile href="pathmap://UML_PROFILES/Ecore.profile.uml#_0"/>
    </profileApplication>
  </uml:Package>
  <Ecore:EPackage xmi:id="_5mpFcIdyEd-N4tjuug6Vsw" base_Package="_0" nsPrefix="pivot" nsURI="http://www.eclipse.org/ocl/3.1.0/Pivot" basePackage=""/>
  <Ecore:EPackage xmi:id="_TPVhdod0Ed-N4tjuug6Vsw" base_Package="_0" nsPrefix="uml" nsURI="http://www.omg.org/spec/UML/20090901"/>
  <Ecore:EPackage xmi:id="_U-GB8Id3Ed-N4tjuug6Vsw" base_Package="_0" nsPrefix="pivot" nsURI="http://org.eclipse.ocl/Pivot/20100704"/>
  <Ecore:EPackage xmi:id="_q3AqoIemEd-N4tjuug6Vsw" nsPrefix="oclpivot" nsURI="http://org.eclipse.ocl/OCL/20100704/Pivot"/>
  <Ecore:EPackage xmi:id="_sWEpoIemEd-N4tjuug6Vsw" nsPrefix="oclexp" nsURI="http://org.eclipse.ocl/OCL/20100704/Expression"/>
  <Ecore:EPackage xmi:id="_n_43EIenEd-N4tjuug6Vsw" nsPrefix="ocltyp" nsURI="http://org.eclipse.ocl/OCL/20100704/Types"/>
  <Ecore:EPackage xmi:id="_m7YDwIkgEd-C9fe6N-G3qw" nsPrefix="oclprim" nsURI="http://org.eclipse.ocl/OCL/20100704/Primitives"/>
  <Ecore:EAttribute xmi:id="_2pU6sJv1Ed-z3OwhWUwlQQ" isTransient="true"/>
  <Ecore:EClass xmi:id="_E-3sIJ0jEd-JkelcPbiG5Q" instanceClassName="org.eclipse.ocl.examples.pivot.utilities.INameableElement" className="INameableElement"/>
  <Ecore:EClass xmi:id="_MO684J0kEd-JkelcPbiG5Q" instanceClassName="org.eclipse.ocl.examples.pivot.utilities.INameableElement" className="INameableElement"/>
  <Ecore:EClass xmi:id="_LkkGYJ0mEd-JkelcPbiG5Q" instanceClassName="org.eclipse.ocl.examples.pivot.utilities.INameableElement"/>
  <Ecore:EDataType xmi:id="_leEVYKd2Ed-p0fyBXlv83w" instanceClassName="java.lang.Class"/>
  <Ecore:EReference xmi:id="_U0BTwKeTEd-p0fyBXlv83w" isTransient="true" isResolveProxies="false"/>
  <Ecore:EReference xmi:id="_kot7kKeTEd-p0fyBXlv83w" isResolveProxies="false"/>
  <Ecore:EDataType xmi:id="_mHEcALjCEd-IDaWL0FHlwg" instanceClassName="java.lang.Class&lt;?>"/>
  <Ecore:EAttribute xmi:id="_yqM3UL2iEd-nQufuYygZtQ" isTransient="true"/>
  <Ecore:EPackage xmi:id="_hn2o4sinEd-sJIf4tYBt-g" base_Package="_0" nsPrefix="pivot" nsURI="http://www.eclipse.org/ocl/3.1.0/Pivot"/>
  <Ecore:EPackage xmi:id="_6wkKcMknEd-bx742yyafXQ" base_Package="_0" nsPrefix="pivot" nsURI="http://www.eclipse.org/ocl/3.1.0/Pivot"/>
  <Ecore:EReference xmi:id="_9EuT_AKlEeOyhdPgU1X2gQ" isTransient="true" base_Property="_9EuT-gKlEeOyhdPgU1X2gQ" isResolveProxies="false"/>
  <Ecore:EAttribute xmi:id="_9E4FAQKlEeOyhdPgU1X2gQ" isTransient="true" base_Property="_9E4E_AKlEeOyhdPgU1X2gQ"/>
  <Ecore:EDataType xmi:id="_9FBO0AKlEeOyhdPgU1X2gQ" instanceClassName="org.eclipse.ocl.examples.domain.library.LibraryFeature" base_PrimitiveType="_9E4E_gKlEeOyhdPgU1X2gQ"/>
  <Ecore:EDataType xmi:id="_9FBO0QKlEeOyhdPgU1X2gQ" instanceClassName="java.lang.Object" base_PrimitiveType="_9E4E_wKlEeOyhdPgU1X2gQ"/>
  <Ecore:EDataType xmi:id="_9FBO0gKlEeOyhdPgU1X2gQ" instanceClassName="java.lang.Throwable" base_PrimitiveType="_9E4FAAKlEeOyhdPgU1X2gQ"/>
  <Ecore:EClass xmi:id="_9FBO5AKlEeOyhdPgU1X2gQ" instanceClassName="org.eclipse.ocl.examples.pivot.util.MorePivotable" base_Interface="_9FBO1QKlEeOyhdPgU1X2gQ"
      className="MorePivotable"/>
  <Ecore:EClass xmi:id="_9FBO5QKlEeOyhdPgU1X2gQ" instanceClassName="org.eclipse.ocl.examples.domain.elements.Nameable" base_Interface="_9FBO1gKlEeOyhdPgU1X2gQ"
      className="Nameable"/>
  <Ecore:EClass xmi:id="_9FBO5gKlEeOyhdPgU1X2gQ" instanceClassName="org.eclipse.ocl.examples.pivot.util.Pivotable" base_Interface="_9FBO3wKlEeOyhdPgU1X2gQ"
      className="Pivotable"/>
  <Ecore:EAttribute xmi:id="_9FK_0AKlEeOyhdPgU1X2gQ" base_Property="_9FBO-AKlEeOyhdPgU1X2gQ"/>
  <Ecore:EDataType xmi:id="_9FK_0QKlEeOyhdPgU1X2gQ" instanceClassName="boolean" base_PrimitiveType="_9C8LRAKlEeOyhdPgU1X2gQ"/>
  <Ecore:EDataType xmi:id="_9FK_0gKlEeOyhdPgU1X2gQ" instanceClassName="java.lang.Number" base_PrimitiveType="_9C8LQgKlEeOyhdPgU1X2gQ"/>
  <Ecore:EDataType xmi:id="_9FK_0wKlEeOyhdPgU1X2gQ" instanceClassName="java.lang.Number" base_PrimitiveType="_9Eki4AKlEeOyhdPgU1X2gQ"/>
  <Ecore:EDataType xmi:id="_9FK_1AKlEeOyhdPgU1X2gQ" instanceClassName="java.lang.String" base_PrimitiveType="_9C8LOgKlEeOyhdPgU1X2gQ"/>
  <Ecore:EDataType xmi:id="_9FK_1QKlEeOyhdPgU1X2gQ" instanceClassName="java.lang.Number" base_PrimitiveType="_9C8LRwKlEeOyhdPgU1X2gQ"/>
  <Ecore:EAttribute xmi:id="_9FK_1gKlEeOyhdPgU1X2gQ" isUnsettable="true" base_Property="_9EIeDQKlEeOyhdPgU1X2gQ"/>
  <Ecore:EClass xmi:id="_9FUJxQKlEeOyhdPgU1X2gQ" base_Interface="_9FUJwAKlEeOyhdPgU1X2gQ"/>
  <Ecore:EClass xmi:id="_9FUJ3AKlEeOyhdPgU1X2gQ" instanceClassName="org.eclipse.ocl.examples.pivot.util.Visitable" base_Interface="_9FUJ1wKlEeOyhdPgU1X2gQ"
      className="Visitable"/>
  <Ecore:EClass xmi:id="_9FUJ3QKlEeOyhdPgU1X2gQ" instanceClassName="org.eclipse.ocl.examples.pivot.util.Visitor" base_Interface="_9FUJ2AKlEeOyhdPgU1X2gQ"/>
</xmi:XMI>
