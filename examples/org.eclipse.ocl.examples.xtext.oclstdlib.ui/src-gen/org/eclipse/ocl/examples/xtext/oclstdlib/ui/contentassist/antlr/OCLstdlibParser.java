/*******************************************************************************
 * Copyright (c) 2014 E.D.Willink and others.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *     E.D.Willink - initial API and implementation
 *******************************************************************************/
/*
* generated by Xtext
*/
package org.eclipse.ocl.examples.xtext.oclstdlib.ui.contentassist.antlr;

import java.util.Collection;
import java.util.Map;
import java.util.HashMap;

import org.antlr.runtime.RecognitionException;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.AbstractContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.FollowElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;

import com.google.inject.Inject;

import org.eclipse.ocl.examples.xtext.oclstdlib.services.OCLstdlibGrammarAccess;

public class OCLstdlibParser extends AbstractContentAssistParser {
	
	@Inject
	private OCLstdlibGrammarAccess grammarAccess;
	
	private Map<AbstractElement, String> nameMappings;
	
	@Override
	protected org.eclipse.ocl.examples.xtext.oclstdlib.ui.contentassist.antlr.internal.InternalOCLstdlibParser createParser() {
		org.eclipse.ocl.examples.xtext.oclstdlib.ui.contentassist.antlr.internal.InternalOCLstdlibParser result = new org.eclipse.ocl.examples.xtext.oclstdlib.ui.contentassist.antlr.internal.InternalOCLstdlibParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}
	
	@Override
	protected String getRuleName(AbstractElement element) {
		if (nameMappings == null) {
			nameMappings = new HashMap<AbstractElement, String>() {
				private static final long serialVersionUID = 1L;
				{
					put(grammarAccess.getIdentifierAccess().getAlternatives(), "rule__Identifier__Alternatives");
					put(grammarAccess.getRestrictedKeywordsAccess().getAlternatives(), "rule__RestrictedKeywords__Alternatives");
					put(grammarAccess.getNameAccess().getAlternatives(), "rule__Name__Alternatives");
					put(grammarAccess.getAnyNameAccess().getAlternatives(), "rule__AnyName__Alternatives");
					put(grammarAccess.getAnnotationCSAccess().getNameAlternatives_1_0(), "rule__AnnotationCS__NameAlternatives_1_0");
					put(grammarAccess.getAnnotationCSAccess().getAlternatives_3(), "rule__AnnotationCS__Alternatives_3");
					put(grammarAccess.getAnnotationElementCSAccess().getAlternatives(), "rule__AnnotationElementCS__Alternatives");
					put(grammarAccess.getClassCSAccess().getAlternatives_6(), "rule__ClassCS__Alternatives_6");
					put(grammarAccess.getDetailCSAccess().getNameAlternatives_0_0(), "rule__DetailCS__NameAlternatives_0_0");
					put(grammarAccess.getDetailCSAccess().getValueAlternatives_2_0(), "rule__DetailCS__ValueAlternatives_2_0");
					put(grammarAccess.getLibIterationCSAccess().getAlternatives_14(), "rule__LibIterationCS__Alternatives_14");
					put(grammarAccess.getLibIterationCSAccess().getAlternatives_14_0_1(), "rule__LibIterationCS__Alternatives_14_0_1");
					put(grammarAccess.getOperationCSAccess().getAlternatives(), "rule__OperationCS__Alternatives");
					put(grammarAccess.getLibOperationCSAccess().getAlternatives_13(), "rule__LibOperationCS__Alternatives_13");
					put(grammarAccess.getLibOperationCSAccess().getAlternatives_13_0_1(), "rule__LibOperationCS__Alternatives_13_0_1");
					put(grammarAccess.getLibPackageCSAccess().getAlternatives_4(), "rule__LibPackageCS__Alternatives_4");
					put(grammarAccess.getPackageCSAccess().getAlternatives_4(), "rule__PackageCS__Alternatives_4");
					put(grammarAccess.getLibPropertyCSAccess().getAlternatives_6(), "rule__LibPropertyCS__Alternatives_6");
					put(grammarAccess.getPrecedenceCSAccess().getAlternatives_0(), "rule__PrecedenceCS__Alternatives_0");
					put(grammarAccess.getTypeParameterCSAccess().getAlternatives_1(), "rule__TypeParameterCS__Alternatives_1");
					put(grammarAccess.getTypeRefCSAccess().getAlternatives(), "rule__TypeRefCS__Alternatives");
					put(grammarAccess.getTypedMultiplicityRefCSAccess().getAlternatives_0(), "rule__TypedMultiplicityRefCS__Alternatives_0");
					put(grammarAccess.getTypedRefCSAccess().getAlternatives(), "rule__TypedRefCS__Alternatives");
					put(grammarAccess.getTypedTypeRefCSAccess().getAlternatives(), "rule__TypedTypeRefCS__Alternatives");
					put(grammarAccess.getWildcardTypeRefCSAccess().getAlternatives_2(), "rule__WildcardTypeRefCS__Alternatives_2");
					put(grammarAccess.getIDAccess().getAlternatives(), "rule__ID__Alternatives");
					put(grammarAccess.getUPPERAccess().getAlternatives(), "rule__UPPER__Alternatives");
					put(grammarAccess.getEssentialOCLReservedKeywordAccess().getAlternatives(), "rule__EssentialOCLReservedKeyword__Alternatives");
					put(grammarAccess.getEssentialOCLUnaryOperatorCSAccess().getNameAlternatives_0(), "rule__EssentialOCLUnaryOperatorCS__NameAlternatives_0");
					put(grammarAccess.getEssentialOCLInfixOperatorCSAccess().getNameAlternatives_0(), "rule__EssentialOCLInfixOperatorCS__NameAlternatives_0");
					put(grammarAccess.getEssentialOCLNavigationOperatorCSAccess().getNameAlternatives_0(), "rule__EssentialOCLNavigationOperatorCS__NameAlternatives_0");
					put(grammarAccess.getBinaryOperatorCSAccess().getAlternatives(), "rule__BinaryOperatorCS__Alternatives");
					put(grammarAccess.getEssentialOCLUnreservedNameAccess().getAlternatives(), "rule__EssentialOCLUnreservedName__Alternatives");
					put(grammarAccess.getURIFirstPathElementCSAccess().getAlternatives(), "rule__URIFirstPathElementCS__Alternatives");
					put(grammarAccess.getPrimitiveTypeIdentifierAccess().getAlternatives(), "rule__PrimitiveTypeIdentifier__Alternatives");
					put(grammarAccess.getCollectionTypeIdentifierAccess().getAlternatives(), "rule__CollectionTypeIdentifier__Alternatives");
					put(grammarAccess.getMultiplicityCSAccess().getAlternatives_1(), "rule__MultiplicityCS__Alternatives_1");
					put(grammarAccess.getMultiplicityStringCSAccess().getStringBoundsAlternatives_0(), "rule__MultiplicityStringCS__StringBoundsAlternatives_0");
					put(grammarAccess.getPrimitiveLiteralExpCSAccess().getAlternatives(), "rule__PrimitiveLiteralExpCS__Alternatives");
					put(grammarAccess.getBooleanLiteralExpCSAccess().getAlternatives(), "rule__BooleanLiteralExpCS__Alternatives");
					put(grammarAccess.getTypeLiteralCSAccess().getAlternatives(), "rule__TypeLiteralCS__Alternatives");
					put(grammarAccess.getTypeExpCSAccess().getAlternatives_0(), "rule__TypeExpCS__Alternatives_0");
					put(grammarAccess.getExpCSAccess().getAlternatives(), "rule__ExpCS__Alternatives");
					put(grammarAccess.getExpCSAccess().getAlternatives_0_1_2(), "rule__ExpCS__Alternatives_0_1_2");
					put(grammarAccess.getPrefixedExpCSAccess().getAlternatives(), "rule__PrefixedExpCS__Alternatives");
					put(grammarAccess.getPrimaryExpCSAccess().getAlternatives(), "rule__PrimaryExpCS__Alternatives");
					put(grammarAccess.getCurlyBracketedClauseCSAccess().getAlternatives_2(), "rule__CurlyBracketedClauseCS__Alternatives_2");
					put(grammarAccess.getLibraryAccess().getGroup(), "rule__Library__Group__0");
					put(grammarAccess.getLibraryAccess().getGroup_0(), "rule__Library__Group_0__0");
					put(grammarAccess.getLibPathNameCSAccess().getGroup(), "rule__LibPathNameCS__Group__0");
					put(grammarAccess.getLibPathNameCSAccess().getGroup_1(), "rule__LibPathNameCS__Group_1__0");
					put(grammarAccess.getAccumulatorCSAccess().getGroup(), "rule__AccumulatorCS__Group__0");
					put(grammarAccess.getAnnotationCSAccess().getGroup(), "rule__AnnotationCS__Group__0");
					put(grammarAccess.getAnnotationCSAccess().getGroup_2(), "rule__AnnotationCS__Group_2__0");
					put(grammarAccess.getAnnotationCSAccess().getGroup_2_2(), "rule__AnnotationCS__Group_2_2__0");
					put(grammarAccess.getAnnotationCSAccess().getGroup_3_0(), "rule__AnnotationCS__Group_3_0__0");
					put(grammarAccess.getClassCSAccess().getGroup(), "rule__ClassCS__Group__0");
					put(grammarAccess.getClassCSAccess().getGroup_3(), "rule__ClassCS__Group_3__0");
					put(grammarAccess.getClassCSAccess().getGroup_4(), "rule__ClassCS__Group_4__0");
					put(grammarAccess.getClassCSAccess().getGroup_4_2(), "rule__ClassCS__Group_4_2__0");
					put(grammarAccess.getDetailCSAccess().getGroup(), "rule__DetailCS__Group__0");
					put(grammarAccess.getDocumentationCSAccess().getGroup(), "rule__DocumentationCS__Group__0");
					put(grammarAccess.getDocumentationCSAccess().getGroup_3(), "rule__DocumentationCS__Group_3__0");
					put(grammarAccess.getDocumentationCSAccess().getGroup_3_2(), "rule__DocumentationCS__Group_3_2__0");
					put(grammarAccess.getInvCSAccess().getGroup(), "rule__InvCS__Group__0");
					put(grammarAccess.getInvCSAccess().getGroup_1(), "rule__InvCS__Group_1__0");
					put(grammarAccess.getInvCSAccess().getGroup_1_1(), "rule__InvCS__Group_1_1__0");
					put(grammarAccess.getLibIterationCSAccess().getGroup(), "rule__LibIterationCS__Group__0");
					put(grammarAccess.getLibIterationCSAccess().getGroup_5(), "rule__LibIterationCS__Group_5__0");
					put(grammarAccess.getLibIterationCSAccess().getGroup_6(), "rule__LibIterationCS__Group_6__0");
					put(grammarAccess.getLibIterationCSAccess().getGroup_6_2(), "rule__LibIterationCS__Group_6_2__0");
					put(grammarAccess.getLibIterationCSAccess().getGroup_7(), "rule__LibIterationCS__Group_7__0");
					put(grammarAccess.getLibIterationCSAccess().getGroup_7_2(), "rule__LibIterationCS__Group_7_2__0");
					put(grammarAccess.getLibIterationCSAccess().getGroup_13(), "rule__LibIterationCS__Group_13__0");
					put(grammarAccess.getLibIterationCSAccess().getGroup_14_0(), "rule__LibIterationCS__Group_14_0__0");
					put(grammarAccess.getIteratorCSAccess().getGroup(), "rule__IteratorCS__Group__0");
					put(grammarAccess.getLambdaTypeCSAccess().getGroup(), "rule__LambdaTypeCS__Group__0");
					put(grammarAccess.getLambdaTypeCSAccess().getGroup_4(), "rule__LambdaTypeCS__Group_4__0");
					put(grammarAccess.getLambdaTypeCSAccess().getGroup_4_1(), "rule__LambdaTypeCS__Group_4_1__0");
					put(grammarAccess.getLibraryCSAccess().getGroup(), "rule__LibraryCS__Group__0");
					put(grammarAccess.getLibOperationCSAccess().getGroup(), "rule__LibOperationCS__Group__0");
					put(grammarAccess.getLibOperationCSAccess().getGroup_5(), "rule__LibOperationCS__Group_5__0");
					put(grammarAccess.getLibOperationCSAccess().getGroup_5_1(), "rule__LibOperationCS__Group_5_1__0");
					put(grammarAccess.getLibOperationCSAccess().getGroup_11(), "rule__LibOperationCS__Group_11__0");
					put(grammarAccess.getLibOperationCSAccess().getGroup_12(), "rule__LibOperationCS__Group_12__0");
					put(grammarAccess.getLibOperationCSAccess().getGroup_13_0(), "rule__LibOperationCS__Group_13_0__0");
					put(grammarAccess.getLibOperationCSAccess().getGroup_13_0_1_1(), "rule__LibOperationCS__Group_13_0_1_1__0");
					put(grammarAccess.getLibPackageCSAccess().getGroup(), "rule__LibPackageCS__Group__0");
					put(grammarAccess.getLibPackageCSAccess().getGroup_2(), "rule__LibPackageCS__Group_2__0");
					put(grammarAccess.getLibPackageCSAccess().getGroup_4_1(), "rule__LibPackageCS__Group_4_1__0");
					put(grammarAccess.getPackageCSAccess().getGroup(), "rule__PackageCS__Group__0");
					put(grammarAccess.getPackageCSAccess().getGroup_2(), "rule__PackageCS__Group_2__0");
					put(grammarAccess.getParameterCSAccess().getGroup(), "rule__ParameterCS__Group__0");
					put(grammarAccess.getLibPropertyCSAccess().getGroup(), "rule__LibPropertyCS__Group__0");
					put(grammarAccess.getLibPropertyCSAccess().getGroup_5(), "rule__LibPropertyCS__Group_5__0");
					put(grammarAccess.getLibPropertyCSAccess().getGroup_6_0(), "rule__LibPropertyCS__Group_6_0__0");
					put(grammarAccess.getPostCSAccess().getGroup(), "rule__PostCS__Group__0");
					put(grammarAccess.getPostCSAccess().getGroup_1(), "rule__PostCS__Group_1__0");
					put(grammarAccess.getPostCSAccess().getGroup_1_1(), "rule__PostCS__Group_1_1__0");
					put(grammarAccess.getPreCSAccess().getGroup(), "rule__PreCS__Group__0");
					put(grammarAccess.getPreCSAccess().getGroup_1(), "rule__PreCS__Group_1__0");
					put(grammarAccess.getPreCSAccess().getGroup_1_1(), "rule__PreCS__Group_1_1__0");
					put(grammarAccess.getPrecedenceCSAccess().getGroup(), "rule__PrecedenceCS__Group__0");
					put(grammarAccess.getTemplateBindingCSAccess().getGroup(), "rule__TemplateBindingCS__Group__0");
					put(grammarAccess.getTemplateBindingCSAccess().getGroup_2(), "rule__TemplateBindingCS__Group_2__0");
					put(grammarAccess.getTemplateSignatureCSAccess().getGroup(), "rule__TemplateSignatureCS__Group__0");
					put(grammarAccess.getTemplateSignatureCSAccess().getGroup_2(), "rule__TemplateSignatureCS__Group_2__0");
					put(grammarAccess.getLibTupleCSAccess().getGroup(), "rule__LibTupleCS__Group__0");
					put(grammarAccess.getLibTupleCSAccess().getGroup_2(), "rule__LibTupleCS__Group_2__0");
					put(grammarAccess.getLibTupleCSAccess().getGroup_2_1(), "rule__LibTupleCS__Group_2_1__0");
					put(grammarAccess.getLibTuplePartCSAccess().getGroup(), "rule__LibTuplePartCS__Group__0");
					put(grammarAccess.getTypeParameterCSAccess().getGroup(), "rule__TypeParameterCS__Group__0");
					put(grammarAccess.getTypeParameterCSAccess().getGroup_1_0(), "rule__TypeParameterCS__Group_1_0__0");
					put(grammarAccess.getTypeParameterCSAccess().getGroup_1_0_2(), "rule__TypeParameterCS__Group_1_0_2__0");
					put(grammarAccess.getTypeParameterCSAccess().getGroup_1_1(), "rule__TypeParameterCS__Group_1_1__0");
					put(grammarAccess.getTypedMultiplicityRefCSAccess().getGroup(), "rule__TypedMultiplicityRefCS__Group__0");
					put(grammarAccess.getTypedTypeRefCSAccess().getGroup_0(), "rule__TypedTypeRefCS__Group_0__0");
					put(grammarAccess.getTypedTypeRefCSAccess().getGroup_1(), "rule__TypedTypeRefCS__Group_1__0");
					put(grammarAccess.getWildcardTypeRefCSAccess().getGroup(), "rule__WildcardTypeRefCS__Group__0");
					put(grammarAccess.getWildcardTypeRefCSAccess().getGroup_2_0(), "rule__WildcardTypeRefCS__Group_2_0__0");
					put(grammarAccess.getWildcardTypeRefCSAccess().getGroup_2_1(), "rule__WildcardTypeRefCS__Group_2_1__0");
					put(grammarAccess.getPathNameCSAccess().getGroup(), "rule__PathNameCS__Group__0");
					put(grammarAccess.getPathNameCSAccess().getGroup_1(), "rule__PathNameCS__Group_1__0");
					put(grammarAccess.getURIPathNameCSAccess().getGroup(), "rule__URIPathNameCS__Group__0");
					put(grammarAccess.getURIPathNameCSAccess().getGroup_1(), "rule__URIPathNameCS__Group_1__0");
					put(grammarAccess.getURIFirstPathElementCSAccess().getGroup_1(), "rule__URIFirstPathElementCS__Group_1__0");
					put(grammarAccess.getCollectionTypeCSAccess().getGroup(), "rule__CollectionTypeCS__Group__0");
					put(grammarAccess.getCollectionTypeCSAccess().getGroup_1(), "rule__CollectionTypeCS__Group_1__0");
					put(grammarAccess.getMultiplicityBoundsCSAccess().getGroup(), "rule__MultiplicityBoundsCS__Group__0");
					put(grammarAccess.getMultiplicityBoundsCSAccess().getGroup_1(), "rule__MultiplicityBoundsCS__Group_1__0");
					put(grammarAccess.getMultiplicityCSAccess().getGroup(), "rule__MultiplicityCS__Group__0");
					put(grammarAccess.getTupleTypeCSAccess().getGroup(), "rule__TupleTypeCS__Group__0");
					put(grammarAccess.getTupleTypeCSAccess().getGroup_1(), "rule__TupleTypeCS__Group_1__0");
					put(grammarAccess.getTupleTypeCSAccess().getGroup_1_1(), "rule__TupleTypeCS__Group_1_1__0");
					put(grammarAccess.getTupleTypeCSAccess().getGroup_1_1_1(), "rule__TupleTypeCS__Group_1_1_1__0");
					put(grammarAccess.getTuplePartCSAccess().getGroup(), "rule__TuplePartCS__Group__0");
					put(grammarAccess.getCollectionLiteralExpCSAccess().getGroup(), "rule__CollectionLiteralExpCS__Group__0");
					put(grammarAccess.getCollectionLiteralExpCSAccess().getGroup_2(), "rule__CollectionLiteralExpCS__Group_2__0");
					put(grammarAccess.getCollectionLiteralExpCSAccess().getGroup_2_1(), "rule__CollectionLiteralExpCS__Group_2_1__0");
					put(grammarAccess.getCollectionLiteralPartCSAccess().getGroup(), "rule__CollectionLiteralPartCS__Group__0");
					put(grammarAccess.getCollectionLiteralPartCSAccess().getGroup_1(), "rule__CollectionLiteralPartCS__Group_1__0");
					put(grammarAccess.getConstructorPartCSAccess().getGroup(), "rule__ConstructorPartCS__Group__0");
					put(grammarAccess.getTupleLiteralExpCSAccess().getGroup(), "rule__TupleLiteralExpCS__Group__0");
					put(grammarAccess.getTupleLiteralExpCSAccess().getGroup_3(), "rule__TupleLiteralExpCS__Group_3__0");
					put(grammarAccess.getTupleLiteralPartCSAccess().getGroup(), "rule__TupleLiteralPartCS__Group__0");
					put(grammarAccess.getTupleLiteralPartCSAccess().getGroup_1(), "rule__TupleLiteralPartCS__Group_1__0");
					put(grammarAccess.getUnlimitedNaturalLiteralExpCSAccess().getGroup(), "rule__UnlimitedNaturalLiteralExpCS__Group__0");
					put(grammarAccess.getInvalidLiteralExpCSAccess().getGroup(), "rule__InvalidLiteralExpCS__Group__0");
					put(grammarAccess.getNullLiteralExpCSAccess().getGroup(), "rule__NullLiteralExpCS__Group__0");
					put(grammarAccess.getTypeLiteralWithMultiplicityCSAccess().getGroup(), "rule__TypeLiteralWithMultiplicityCS__Group__0");
					put(grammarAccess.getTypeExpCSAccess().getGroup(), "rule__TypeExpCS__Group__0");
					put(grammarAccess.getExpCSAccess().getGroup_0(), "rule__ExpCS__Group_0__0");
					put(grammarAccess.getExpCSAccess().getGroup_0_1(), "rule__ExpCS__Group_0_1__0");
					put(grammarAccess.getExpCSAccess().getGroup_0_1_2_0(), "rule__ExpCS__Group_0_1_2_0__0");
					put(grammarAccess.getExpCSAccess().getGroup_0_1_2_0_1(), "rule__ExpCS__Group_0_1_2_0_1__0");
					put(grammarAccess.getExpCSAccess().getGroup_0_1_2_0_2(), "rule__ExpCS__Group_0_1_2_0_2__0");
					put(grammarAccess.getExpCSAccess().getGroup_1(), "rule__ExpCS__Group_1__0");
					put(grammarAccess.getPrefixedExpCSAccess().getGroup_0(), "rule__PrefixedExpCS__Group_0__0");
					put(grammarAccess.getNameExpCSAccess().getGroup(), "rule__NameExpCS__Group__0");
					put(grammarAccess.getNameExpCSAccess().getGroup_4(), "rule__NameExpCS__Group_4__0");
					put(grammarAccess.getCurlyBracketedClauseCSAccess().getGroup(), "rule__CurlyBracketedClauseCS__Group__0");
					put(grammarAccess.getCurlyBracketedClauseCSAccess().getGroup_2_0(), "rule__CurlyBracketedClauseCS__Group_2_0__0");
					put(grammarAccess.getCurlyBracketedClauseCSAccess().getGroup_2_0_1(), "rule__CurlyBracketedClauseCS__Group_2_0_1__0");
					put(grammarAccess.getRoundBracketedClauseCSAccess().getGroup(), "rule__RoundBracketedClauseCS__Group__0");
					put(grammarAccess.getRoundBracketedClauseCSAccess().getGroup_2(), "rule__RoundBracketedClauseCS__Group_2__0");
					put(grammarAccess.getRoundBracketedClauseCSAccess().getGroup_2_2(), "rule__RoundBracketedClauseCS__Group_2_2__0");
					put(grammarAccess.getRoundBracketedClauseCSAccess().getGroup_2_3(), "rule__RoundBracketedClauseCS__Group_2_3__0");
					put(grammarAccess.getSquareBracketedClauseCSAccess().getGroup(), "rule__SquareBracketedClauseCS__Group__0");
					put(grammarAccess.getSquareBracketedClauseCSAccess().getGroup_2(), "rule__SquareBracketedClauseCS__Group_2__0");
					put(grammarAccess.getNavigatingArgCSAccess().getGroup(), "rule__NavigatingArgCS__Group__0");
					put(grammarAccess.getNavigatingArgCSAccess().getGroup_1(), "rule__NavigatingArgCS__Group_1__0");
					put(grammarAccess.getNavigatingArgCSAccess().getGroup_1_2(), "rule__NavigatingArgCS__Group_1_2__0");
					put(grammarAccess.getNavigatingBarArgCSAccess().getGroup(), "rule__NavigatingBarArgCS__Group__0");
					put(grammarAccess.getNavigatingBarArgCSAccess().getGroup_2(), "rule__NavigatingBarArgCS__Group_2__0");
					put(grammarAccess.getNavigatingBarArgCSAccess().getGroup_2_2(), "rule__NavigatingBarArgCS__Group_2_2__0");
					put(grammarAccess.getNavigatingCommaArgCSAccess().getGroup(), "rule__NavigatingCommaArgCS__Group__0");
					put(grammarAccess.getNavigatingCommaArgCSAccess().getGroup_2(), "rule__NavigatingCommaArgCS__Group_2__0");
					put(grammarAccess.getNavigatingCommaArgCSAccess().getGroup_2_2(), "rule__NavigatingCommaArgCS__Group_2_2__0");
					put(grammarAccess.getNavigatingSemiArgCSAccess().getGroup(), "rule__NavigatingSemiArgCS__Group__0");
					put(grammarAccess.getNavigatingSemiArgCSAccess().getGroup_2(), "rule__NavigatingSemiArgCS__Group_2__0");
					put(grammarAccess.getNavigatingSemiArgCSAccess().getGroup_2_2(), "rule__NavigatingSemiArgCS__Group_2_2__0");
					put(grammarAccess.getIfExpCSAccess().getGroup(), "rule__IfExpCS__Group__0");
					put(grammarAccess.getLetExpCSAccess().getGroup(), "rule__LetExpCS__Group__0");
					put(grammarAccess.getLetExpCSAccess().getGroup_2(), "rule__LetExpCS__Group_2__0");
					put(grammarAccess.getLetVariableCSAccess().getGroup(), "rule__LetVariableCS__Group__0");
					put(grammarAccess.getLetVariableCSAccess().getGroup_1(), "rule__LetVariableCS__Group_1__0");
					put(grammarAccess.getNestedExpCSAccess().getGroup(), "rule__NestedExpCS__Group__0");
					put(grammarAccess.getSelfExpCSAccess().getGroup(), "rule__SelfExpCS__Group__0");
					put(grammarAccess.getLibraryAccess().getOwnedLibraryAssignment_0_0(), "rule__Library__OwnedLibraryAssignment_0_0");
					put(grammarAccess.getLibraryAccess().getOwnedNestedPackageAssignment_1(), "rule__Library__OwnedNestedPackageAssignment_1");
					put(grammarAccess.getLibPathNameCSAccess().getPathAssignment_0(), "rule__LibPathNameCS__PathAssignment_0");
					put(grammarAccess.getLibPathNameCSAccess().getPathAssignment_1_1(), "rule__LibPathNameCS__PathAssignment_1_1");
					put(grammarAccess.getLibPathElementCSAccess().getElementAssignment(), "rule__LibPathElementCS__ElementAssignment");
					put(grammarAccess.getAccumulatorCSAccess().getNameAssignment_0(), "rule__AccumulatorCS__NameAssignment_0");
					put(grammarAccess.getAccumulatorCSAccess().getOwnedTypeAssignment_2(), "rule__AccumulatorCS__OwnedTypeAssignment_2");
					put(grammarAccess.getAnnotationCSAccess().getNameAssignment_1(), "rule__AnnotationCS__NameAssignment_1");
					put(grammarAccess.getAnnotationCSAccess().getOwnedDetailAssignment_2_1(), "rule__AnnotationCS__OwnedDetailAssignment_2_1");
					put(grammarAccess.getAnnotationCSAccess().getOwnedDetailAssignment_2_2_1(), "rule__AnnotationCS__OwnedDetailAssignment_2_2_1");
					put(grammarAccess.getAnnotationCSAccess().getOwnedAnnotationAssignment_3_0_1(), "rule__AnnotationCS__OwnedAnnotationAssignment_3_0_1");
					put(grammarAccess.getClassCSAccess().getNameAssignment_1(), "rule__ClassCS__NameAssignment_1");
					put(grammarAccess.getClassCSAccess().getOwnedTemplateSignatureAssignment_2(), "rule__ClassCS__OwnedTemplateSignatureAssignment_2");
					put(grammarAccess.getClassCSAccess().getMetaTypeNameAssignment_3_1(), "rule__ClassCS__MetaTypeNameAssignment_3_1");
					put(grammarAccess.getClassCSAccess().getOwnedSuperTypeAssignment_4_1(), "rule__ClassCS__OwnedSuperTypeAssignment_4_1");
					put(grammarAccess.getClassCSAccess().getOwnedSuperTypeAssignment_4_2_1(), "rule__ClassCS__OwnedSuperTypeAssignment_4_2_1");
					put(grammarAccess.getClassCSAccess().getOwnedOperationAssignment_6_0(), "rule__ClassCS__OwnedOperationAssignment_6_0");
					put(grammarAccess.getClassCSAccess().getOwnedPropertyAssignment_6_1(), "rule__ClassCS__OwnedPropertyAssignment_6_1");
					put(grammarAccess.getClassCSAccess().getOwnedConstraintAssignment_6_2(), "rule__ClassCS__OwnedConstraintAssignment_6_2");
					put(grammarAccess.getClassCSAccess().getOwnedAnnotationAssignment_6_3(), "rule__ClassCS__OwnedAnnotationAssignment_6_3");
					put(grammarAccess.getDetailCSAccess().getNameAssignment_0(), "rule__DetailCS__NameAssignment_0");
					put(grammarAccess.getDetailCSAccess().getValueAssignment_2(), "rule__DetailCS__ValueAssignment_2");
					put(grammarAccess.getDocumentationCSAccess().getValueAssignment_2(), "rule__DocumentationCS__ValueAssignment_2");
					put(grammarAccess.getDocumentationCSAccess().getOwnedDetailAssignment_3_1(), "rule__DocumentationCS__OwnedDetailAssignment_3_1");
					put(grammarAccess.getDocumentationCSAccess().getOwnedDetailAssignment_3_2_1(), "rule__DocumentationCS__OwnedDetailAssignment_3_2_1");
					put(grammarAccess.getInvCSAccess().getStereotypeAssignment_0(), "rule__InvCS__StereotypeAssignment_0");
					put(grammarAccess.getInvCSAccess().getNameAssignment_1_0(), "rule__InvCS__NameAssignment_1_0");
					put(grammarAccess.getInvCSAccess().getMessageSpecificationAssignment_1_1_1(), "rule__InvCS__MessageSpecificationAssignment_1_1_1");
					put(grammarAccess.getInvCSAccess().getSpecificationAssignment_3(), "rule__InvCS__SpecificationAssignment_3");
					put(grammarAccess.getLibIterationCSAccess().getNameAssignment_1(), "rule__LibIterationCS__NameAssignment_1");
					put(grammarAccess.getLibIterationCSAccess().getOwnedTemplateSignatureAssignment_2(), "rule__LibIterationCS__OwnedTemplateSignatureAssignment_2");
					put(grammarAccess.getLibIterationCSAccess().getOwnedIteratorAssignment_4(), "rule__LibIterationCS__OwnedIteratorAssignment_4");
					put(grammarAccess.getLibIterationCSAccess().getOwnedIteratorAssignment_5_1(), "rule__LibIterationCS__OwnedIteratorAssignment_5_1");
					put(grammarAccess.getLibIterationCSAccess().getOwnedAccumulatorAssignment_6_1(), "rule__LibIterationCS__OwnedAccumulatorAssignment_6_1");
					put(grammarAccess.getLibIterationCSAccess().getOwnedAccumulatorAssignment_6_2_1(), "rule__LibIterationCS__OwnedAccumulatorAssignment_6_2_1");
					put(grammarAccess.getLibIterationCSAccess().getOwnedParameterAssignment_7_1(), "rule__LibIterationCS__OwnedParameterAssignment_7_1");
					put(grammarAccess.getLibIterationCSAccess().getOwnedParameterAssignment_7_2_1(), "rule__LibIterationCS__OwnedParameterAssignment_7_2_1");
					put(grammarAccess.getLibIterationCSAccess().getOwnedTypeAssignment_10(), "rule__LibIterationCS__OwnedTypeAssignment_10");
					put(grammarAccess.getLibIterationCSAccess().getInvalidatingAssignment_11(), "rule__LibIterationCS__InvalidatingAssignment_11");
					put(grammarAccess.getLibIterationCSAccess().getValidatingAssignment_12(), "rule__LibIterationCS__ValidatingAssignment_12");
					put(grammarAccess.getLibIterationCSAccess().getImplementationAssignment_13_1(), "rule__LibIterationCS__ImplementationAssignment_13_1");
					put(grammarAccess.getLibIterationCSAccess().getOwnedAnnotationAssignment_14_0_1_0(), "rule__LibIterationCS__OwnedAnnotationAssignment_14_0_1_0");
					put(grammarAccess.getLibIterationCSAccess().getOwnedPreconditionAssignment_14_0_1_1(), "rule__LibIterationCS__OwnedPreconditionAssignment_14_0_1_1");
					put(grammarAccess.getLibIterationCSAccess().getOwnedPostconditionAssignment_14_0_1_2(), "rule__LibIterationCS__OwnedPostconditionAssignment_14_0_1_2");
					put(grammarAccess.getIteratorCSAccess().getNameAssignment_0(), "rule__IteratorCS__NameAssignment_0");
					put(grammarAccess.getIteratorCSAccess().getOwnedTypeAssignment_2(), "rule__IteratorCS__OwnedTypeAssignment_2");
					put(grammarAccess.getLambdaTypeCSAccess().getNameAssignment_0(), "rule__LambdaTypeCS__NameAssignment_0");
					put(grammarAccess.getLambdaTypeCSAccess().getOwnedTemplateSignatureAssignment_1(), "rule__LambdaTypeCS__OwnedTemplateSignatureAssignment_1");
					put(grammarAccess.getLambdaTypeCSAccess().getOwnedContextTypeAssignment_2(), "rule__LambdaTypeCS__OwnedContextTypeAssignment_2");
					put(grammarAccess.getLambdaTypeCSAccess().getOwnedParameterTypeAssignment_4_0(), "rule__LambdaTypeCS__OwnedParameterTypeAssignment_4_0");
					put(grammarAccess.getLambdaTypeCSAccess().getOwnedParameterTypeAssignment_4_1_1(), "rule__LambdaTypeCS__OwnedParameterTypeAssignment_4_1_1");
					put(grammarAccess.getLambdaTypeCSAccess().getOwnedResultTypeAssignment_7(), "rule__LambdaTypeCS__OwnedResultTypeAssignment_7");
					put(grammarAccess.getLambdaContextTypeRefCSAccess().getPathNameAssignment(), "rule__LambdaContextTypeRefCS__PathNameAssignment");
					put(grammarAccess.getLibraryCSAccess().getPackageAssignment_1(), "rule__LibraryCS__PackageAssignment_1");
					put(grammarAccess.getLibOperationCSAccess().getStaticAssignment_0(), "rule__LibOperationCS__StaticAssignment_0");
					put(grammarAccess.getLibOperationCSAccess().getNameAssignment_2(), "rule__LibOperationCS__NameAssignment_2");
					put(grammarAccess.getLibOperationCSAccess().getOwnedTemplateSignatureAssignment_3(), "rule__LibOperationCS__OwnedTemplateSignatureAssignment_3");
					put(grammarAccess.getLibOperationCSAccess().getOwnedParameterAssignment_5_0(), "rule__LibOperationCS__OwnedParameterAssignment_5_0");
					put(grammarAccess.getLibOperationCSAccess().getOwnedParameterAssignment_5_1_1(), "rule__LibOperationCS__OwnedParameterAssignment_5_1_1");
					put(grammarAccess.getLibOperationCSAccess().getOwnedTypeAssignment_8(), "rule__LibOperationCS__OwnedTypeAssignment_8");
					put(grammarAccess.getLibOperationCSAccess().getValidatingAssignment_9(), "rule__LibOperationCS__ValidatingAssignment_9");
					put(grammarAccess.getLibOperationCSAccess().getInvalidatingAssignment_10(), "rule__LibOperationCS__InvalidatingAssignment_10");
					put(grammarAccess.getLibOperationCSAccess().getPrecedenceAssignment_11_2(), "rule__LibOperationCS__PrecedenceAssignment_11_2");
					put(grammarAccess.getLibOperationCSAccess().getImplementationAssignment_12_1(), "rule__LibOperationCS__ImplementationAssignment_12_1");
					put(grammarAccess.getLibOperationCSAccess().getOwnedAnnotationAssignment_13_0_1_0(), "rule__LibOperationCS__OwnedAnnotationAssignment_13_0_1_0");
					put(grammarAccess.getLibOperationCSAccess().getOwnedBodyExpressionAssignment_13_0_1_1_3(), "rule__LibOperationCS__OwnedBodyExpressionAssignment_13_0_1_1_3");
					put(grammarAccess.getLibOperationCSAccess().getOwnedPostconditionAssignment_13_0_1_2(), "rule__LibOperationCS__OwnedPostconditionAssignment_13_0_1_2");
					put(grammarAccess.getLibOperationCSAccess().getOwnedPreconditionAssignment_13_0_1_3(), "rule__LibOperationCS__OwnedPreconditionAssignment_13_0_1_3");
					put(grammarAccess.getLibPackageCSAccess().getNameAssignment_1(), "rule__LibPackageCS__NameAssignment_1");
					put(grammarAccess.getLibPackageCSAccess().getNsPrefixAssignment_2_1(), "rule__LibPackageCS__NsPrefixAssignment_2_1");
					put(grammarAccess.getLibPackageCSAccess().getNsURIAssignment_2_3(), "rule__LibPackageCS__NsURIAssignment_2_3");
					put(grammarAccess.getLibPackageCSAccess().getOwnedNestedPackageAssignment_4_0(), "rule__LibPackageCS__OwnedNestedPackageAssignment_4_0");
					put(grammarAccess.getLibPackageCSAccess().getOwnedPrecedenceAssignment_4_1_1(), "rule__LibPackageCS__OwnedPrecedenceAssignment_4_1_1");
					put(grammarAccess.getLibPackageCSAccess().getOwnedTypeAssignment_4_2(), "rule__LibPackageCS__OwnedTypeAssignment_4_2");
					put(grammarAccess.getLibPackageCSAccess().getOwnedAnnotationAssignment_4_3(), "rule__LibPackageCS__OwnedAnnotationAssignment_4_3");
					put(grammarAccess.getPackageCSAccess().getNameAssignment_1(), "rule__PackageCS__NameAssignment_1");
					put(grammarAccess.getPackageCSAccess().getNsPrefixAssignment_2_1(), "rule__PackageCS__NsPrefixAssignment_2_1");
					put(grammarAccess.getPackageCSAccess().getNsURIAssignment_2_3(), "rule__PackageCS__NsURIAssignment_2_3");
					put(grammarAccess.getPackageCSAccess().getOwnedNestedPackageAssignment_4_0(), "rule__PackageCS__OwnedNestedPackageAssignment_4_0");
					put(grammarAccess.getPackageCSAccess().getOwnedTypeAssignment_4_1(), "rule__PackageCS__OwnedTypeAssignment_4_1");
					put(grammarAccess.getPackageCSAccess().getOwnedAnnotationAssignment_4_2(), "rule__PackageCS__OwnedAnnotationAssignment_4_2");
					put(grammarAccess.getParameterCSAccess().getNameAssignment_0(), "rule__ParameterCS__NameAssignment_0");
					put(grammarAccess.getParameterCSAccess().getOwnedTypeAssignment_2(), "rule__ParameterCS__OwnedTypeAssignment_2");
					put(grammarAccess.getLibPropertyCSAccess().getStaticAssignment_0(), "rule__LibPropertyCS__StaticAssignment_0");
					put(grammarAccess.getLibPropertyCSAccess().getNameAssignment_2(), "rule__LibPropertyCS__NameAssignment_2");
					put(grammarAccess.getLibPropertyCSAccess().getOwnedTypeAssignment_4(), "rule__LibPropertyCS__OwnedTypeAssignment_4");
					put(grammarAccess.getLibPropertyCSAccess().getImplementationAssignment_5_1(), "rule__LibPropertyCS__ImplementationAssignment_5_1");
					put(grammarAccess.getLibPropertyCSAccess().getOwnedAnnotationAssignment_6_0_1(), "rule__LibPropertyCS__OwnedAnnotationAssignment_6_0_1");
					put(grammarAccess.getPostCSAccess().getStereotypeAssignment_0(), "rule__PostCS__StereotypeAssignment_0");
					put(grammarAccess.getPostCSAccess().getNameAssignment_1_0(), "rule__PostCS__NameAssignment_1_0");
					put(grammarAccess.getPostCSAccess().getMessageSpecificationAssignment_1_1_1(), "rule__PostCS__MessageSpecificationAssignment_1_1_1");
					put(grammarAccess.getPostCSAccess().getSpecificationAssignment_3(), "rule__PostCS__SpecificationAssignment_3");
					put(grammarAccess.getPreCSAccess().getStereotypeAssignment_0(), "rule__PreCS__StereotypeAssignment_0");
					put(grammarAccess.getPreCSAccess().getNameAssignment_1_0(), "rule__PreCS__NameAssignment_1_0");
					put(grammarAccess.getPreCSAccess().getMessageSpecificationAssignment_1_1_1(), "rule__PreCS__MessageSpecificationAssignment_1_1_1");
					put(grammarAccess.getPreCSAccess().getSpecificationAssignment_3(), "rule__PreCS__SpecificationAssignment_3");
					put(grammarAccess.getPrecedenceCSAccess().getRightAssociativeAssignment_0_1(), "rule__PrecedenceCS__RightAssociativeAssignment_0_1");
					put(grammarAccess.getPrecedenceCSAccess().getNameAssignment_2(), "rule__PrecedenceCS__NameAssignment_2");
					put(grammarAccess.getSpecificationCSAccess().getOwnedExpressionAssignment(), "rule__SpecificationCS__OwnedExpressionAssignment");
					put(grammarAccess.getTemplateBindingCSAccess().getOwnedParameterSubstitutionAssignment_1(), "rule__TemplateBindingCS__OwnedParameterSubstitutionAssignment_1");
					put(grammarAccess.getTemplateBindingCSAccess().getOwnedParameterSubstitutionAssignment_2_1(), "rule__TemplateBindingCS__OwnedParameterSubstitutionAssignment_2_1");
					put(grammarAccess.getTemplateParameterSubstitutionCSAccess().getOwnedActualParameterAssignment(), "rule__TemplateParameterSubstitutionCS__OwnedActualParameterAssignment");
					put(grammarAccess.getTemplateSignatureCSAccess().getOwnedTemplateParameterAssignment_1(), "rule__TemplateSignatureCS__OwnedTemplateParameterAssignment_1");
					put(grammarAccess.getTemplateSignatureCSAccess().getOwnedTemplateParameterAssignment_2_1(), "rule__TemplateSignatureCS__OwnedTemplateParameterAssignment_2_1");
					put(grammarAccess.getLibTupleCSAccess().getNameAssignment_0(), "rule__LibTupleCS__NameAssignment_0");
					put(grammarAccess.getLibTupleCSAccess().getOwnedPartsAssignment_2_0(), "rule__LibTupleCS__OwnedPartsAssignment_2_0");
					put(grammarAccess.getLibTupleCSAccess().getOwnedPartsAssignment_2_1_1(), "rule__LibTupleCS__OwnedPartsAssignment_2_1_1");
					put(grammarAccess.getLibTuplePartCSAccess().getNameAssignment_0(), "rule__LibTuplePartCS__NameAssignment_0");
					put(grammarAccess.getLibTuplePartCSAccess().getOwnedTypeAssignment_2(), "rule__LibTuplePartCS__OwnedTypeAssignment_2");
					put(grammarAccess.getTypeParameterCSAccess().getNameAssignment_0(), "rule__TypeParameterCS__NameAssignment_0");
					put(grammarAccess.getTypeParameterCSAccess().getOwnedExtendsAssignment_1_0_1(), "rule__TypeParameterCS__OwnedExtendsAssignment_1_0_1");
					put(grammarAccess.getTypeParameterCSAccess().getOwnedExtendsAssignment_1_0_2_1(), "rule__TypeParameterCS__OwnedExtendsAssignment_1_0_2_1");
					put(grammarAccess.getTypeParameterCSAccess().getOwnedSuperAssignment_1_1_1(), "rule__TypeParameterCS__OwnedSuperAssignment_1_1_1");
					put(grammarAccess.getTypedMultiplicityRefCSAccess().getMultiplicityAssignment_1(), "rule__TypedMultiplicityRefCS__MultiplicityAssignment_1");
					put(grammarAccess.getTypedTypeRefCSAccess().getTypeofAssignment_0_0(), "rule__TypedTypeRefCS__TypeofAssignment_0_0");
					put(grammarAccess.getTypedTypeRefCSAccess().getPathNameAssignment_0_2(), "rule__TypedTypeRefCS__PathNameAssignment_0_2");
					put(grammarAccess.getTypedTypeRefCSAccess().getPathNameAssignment_1_0(), "rule__TypedTypeRefCS__PathNameAssignment_1_0");
					put(grammarAccess.getTypedTypeRefCSAccess().getOwnedTemplateBindingAssignment_1_1(), "rule__TypedTypeRefCS__OwnedTemplateBindingAssignment_1_1");
					put(grammarAccess.getWildcardTypeRefCSAccess().getExtendsAssignment_2_0_1(), "rule__WildcardTypeRefCS__ExtendsAssignment_2_0_1");
					put(grammarAccess.getWildcardTypeRefCSAccess().getSuperAssignment_2_1_1(), "rule__WildcardTypeRefCS__SuperAssignment_2_1_1");
					put(grammarAccess.getModelAccess().getOwnedExpressionAssignment(), "rule__Model__OwnedExpressionAssignment");
					put(grammarAccess.getEssentialOCLUnaryOperatorCSAccess().getNameAssignment(), "rule__EssentialOCLUnaryOperatorCS__NameAssignment");
					put(grammarAccess.getEssentialOCLInfixOperatorCSAccess().getNameAssignment(), "rule__EssentialOCLInfixOperatorCS__NameAssignment");
					put(grammarAccess.getEssentialOCLNavigationOperatorCSAccess().getNameAssignment(), "rule__EssentialOCLNavigationOperatorCS__NameAssignment");
					put(grammarAccess.getPathNameCSAccess().getPathAssignment_0(), "rule__PathNameCS__PathAssignment_0");
					put(grammarAccess.getPathNameCSAccess().getPathAssignment_1_1(), "rule__PathNameCS__PathAssignment_1_1");
					put(grammarAccess.getFirstPathElementCSAccess().getElementAssignment(), "rule__FirstPathElementCS__ElementAssignment");
					put(grammarAccess.getNextPathElementCSAccess().getElementAssignment(), "rule__NextPathElementCS__ElementAssignment");
					put(grammarAccess.getURIPathNameCSAccess().getPathAssignment_0(), "rule__URIPathNameCS__PathAssignment_0");
					put(grammarAccess.getURIPathNameCSAccess().getPathAssignment_1_1(), "rule__URIPathNameCS__PathAssignment_1_1");
					put(grammarAccess.getURIFirstPathElementCSAccess().getElementAssignment_0(), "rule__URIFirstPathElementCS__ElementAssignment_0");
					put(grammarAccess.getURIFirstPathElementCSAccess().getElementAssignment_1_1(), "rule__URIFirstPathElementCS__ElementAssignment_1_1");
					put(grammarAccess.getPrimitiveTypeCSAccess().getNameAssignment(), "rule__PrimitiveTypeCS__NameAssignment");
					put(grammarAccess.getCollectionTypeCSAccess().getNameAssignment_0(), "rule__CollectionTypeCS__NameAssignment_0");
					put(grammarAccess.getCollectionTypeCSAccess().getOwnedTypeAssignment_1_1(), "rule__CollectionTypeCS__OwnedTypeAssignment_1_1");
					put(grammarAccess.getMultiplicityBoundsCSAccess().getLowerBoundAssignment_0(), "rule__MultiplicityBoundsCS__LowerBoundAssignment_0");
					put(grammarAccess.getMultiplicityBoundsCSAccess().getUpperBoundAssignment_1_1(), "rule__MultiplicityBoundsCS__UpperBoundAssignment_1_1");
					put(grammarAccess.getMultiplicityStringCSAccess().getStringBoundsAssignment(), "rule__MultiplicityStringCS__StringBoundsAssignment");
					put(grammarAccess.getTupleTypeCSAccess().getNameAssignment_0(), "rule__TupleTypeCS__NameAssignment_0");
					put(grammarAccess.getTupleTypeCSAccess().getOwnedPartsAssignment_1_1_0(), "rule__TupleTypeCS__OwnedPartsAssignment_1_1_0");
					put(grammarAccess.getTupleTypeCSAccess().getOwnedPartsAssignment_1_1_1_1(), "rule__TupleTypeCS__OwnedPartsAssignment_1_1_1_1");
					put(grammarAccess.getTuplePartCSAccess().getNameAssignment_0(), "rule__TuplePartCS__NameAssignment_0");
					put(grammarAccess.getTuplePartCSAccess().getOwnedTypeAssignment_2(), "rule__TuplePartCS__OwnedTypeAssignment_2");
					put(grammarAccess.getCollectionLiteralExpCSAccess().getOwnedTypeAssignment_0(), "rule__CollectionLiteralExpCS__OwnedTypeAssignment_0");
					put(grammarAccess.getCollectionLiteralExpCSAccess().getOwnedPartsAssignment_2_0(), "rule__CollectionLiteralExpCS__OwnedPartsAssignment_2_0");
					put(grammarAccess.getCollectionLiteralExpCSAccess().getOwnedPartsAssignment_2_1_1(), "rule__CollectionLiteralExpCS__OwnedPartsAssignment_2_1_1");
					put(grammarAccess.getCollectionLiteralPartCSAccess().getExpressionCSAssignment_0(), "rule__CollectionLiteralPartCS__ExpressionCSAssignment_0");
					put(grammarAccess.getCollectionLiteralPartCSAccess().getLastExpressionCSAssignment_1_1(), "rule__CollectionLiteralPartCS__LastExpressionCSAssignment_1_1");
					put(grammarAccess.getConstructorPartCSAccess().getPropertyAssignment_0(), "rule__ConstructorPartCS__PropertyAssignment_0");
					put(grammarAccess.getConstructorPartCSAccess().getInitExpressionAssignment_2(), "rule__ConstructorPartCS__InitExpressionAssignment_2");
					put(grammarAccess.getTupleLiteralExpCSAccess().getOwnedPartsAssignment_2(), "rule__TupleLiteralExpCS__OwnedPartsAssignment_2");
					put(grammarAccess.getTupleLiteralExpCSAccess().getOwnedPartsAssignment_3_1(), "rule__TupleLiteralExpCS__OwnedPartsAssignment_3_1");
					put(grammarAccess.getTupleLiteralPartCSAccess().getNameAssignment_0(), "rule__TupleLiteralPartCS__NameAssignment_0");
					put(grammarAccess.getTupleLiteralPartCSAccess().getOwnedTypeAssignment_1_1(), "rule__TupleLiteralPartCS__OwnedTypeAssignment_1_1");
					put(grammarAccess.getTupleLiteralPartCSAccess().getInitExpressionAssignment_3(), "rule__TupleLiteralPartCS__InitExpressionAssignment_3");
					put(grammarAccess.getNumberLiteralExpCSAccess().getNameAssignment(), "rule__NumberLiteralExpCS__NameAssignment");
					put(grammarAccess.getStringLiteralExpCSAccess().getNameAssignment(), "rule__StringLiteralExpCS__NameAssignment");
					put(grammarAccess.getBooleanLiteralExpCSAccess().getNameAssignment_0(), "rule__BooleanLiteralExpCS__NameAssignment_0");
					put(grammarAccess.getBooleanLiteralExpCSAccess().getNameAssignment_1(), "rule__BooleanLiteralExpCS__NameAssignment_1");
					put(grammarAccess.getTypeLiteralWithMultiplicityCSAccess().getMultiplicityAssignment_1(), "rule__TypeLiteralWithMultiplicityCS__MultiplicityAssignment_1");
					put(grammarAccess.getTypeLiteralExpCSAccess().getOwnedTypeAssignment(), "rule__TypeLiteralExpCS__OwnedTypeAssignment");
					put(grammarAccess.getTypeNameExpCSAccess().getPathNameAssignment(), "rule__TypeNameExpCS__PathNameAssignment");
					put(grammarAccess.getTypeExpCSAccess().getMultiplicityAssignment_1(), "rule__TypeExpCS__MultiplicityAssignment_1");
					put(grammarAccess.getExpCSAccess().getOwnedOperatorAssignment_0_1_1(), "rule__ExpCS__OwnedOperatorAssignment_0_1_1");
					put(grammarAccess.getExpCSAccess().getOwnedExpressionAssignment_0_1_2_0_0(), "rule__ExpCS__OwnedExpressionAssignment_0_1_2_0_0");
					put(grammarAccess.getExpCSAccess().getOwnedOperatorAssignment_0_1_2_0_1_0(), "rule__ExpCS__OwnedOperatorAssignment_0_1_2_0_1_0");
					put(grammarAccess.getExpCSAccess().getOwnedExpressionAssignment_0_1_2_0_1_1(), "rule__ExpCS__OwnedExpressionAssignment_0_1_2_0_1_1");
					put(grammarAccess.getExpCSAccess().getOwnedOperatorAssignment_0_1_2_0_2_0(), "rule__ExpCS__OwnedOperatorAssignment_0_1_2_0_2_0");
					put(grammarAccess.getExpCSAccess().getOwnedExpressionAssignment_0_1_2_0_2_1(), "rule__ExpCS__OwnedExpressionAssignment_0_1_2_0_2_1");
					put(grammarAccess.getExpCSAccess().getOwnedExpressionAssignment_0_1_2_1(), "rule__ExpCS__OwnedExpressionAssignment_0_1_2_1");
					put(grammarAccess.getExpCSAccess().getOwnedOperatorAssignment_1_1(), "rule__ExpCS__OwnedOperatorAssignment_1_1");
					put(grammarAccess.getExpCSAccess().getOwnedExpressionAssignment_1_2(), "rule__ExpCS__OwnedExpressionAssignment_1_2");
					put(grammarAccess.getPrefixedExpCSAccess().getOwnedOperatorAssignment_0_1(), "rule__PrefixedExpCS__OwnedOperatorAssignment_0_1");
					put(grammarAccess.getPrefixedExpCSAccess().getOwnedExpressionAssignment_0_2(), "rule__PrefixedExpCS__OwnedExpressionAssignment_0_2");
					put(grammarAccess.getNameExpCSAccess().getPathNameAssignment_0(), "rule__NameExpCS__PathNameAssignment_0");
					put(grammarAccess.getNameExpCSAccess().getSquareBracketedClausesAssignment_1(), "rule__NameExpCS__SquareBracketedClausesAssignment_1");
					put(grammarAccess.getNameExpCSAccess().getRoundBracketedClauseAssignment_2(), "rule__NameExpCS__RoundBracketedClauseAssignment_2");
					put(grammarAccess.getNameExpCSAccess().getCurlyBracketedClauseAssignment_3(), "rule__NameExpCS__CurlyBracketedClauseAssignment_3");
					put(grammarAccess.getNameExpCSAccess().getAtPreAssignment_4_0(), "rule__NameExpCS__AtPreAssignment_4_0");
					put(grammarAccess.getCurlyBracketedClauseCSAccess().getOwnedPartsAssignment_2_0_0(), "rule__CurlyBracketedClauseCS__OwnedPartsAssignment_2_0_0");
					put(grammarAccess.getCurlyBracketedClauseCSAccess().getOwnedPartsAssignment_2_0_1_1(), "rule__CurlyBracketedClauseCS__OwnedPartsAssignment_2_0_1_1");
					put(grammarAccess.getCurlyBracketedClauseCSAccess().getValueAssignment_2_1(), "rule__CurlyBracketedClauseCS__ValueAssignment_2_1");
					put(grammarAccess.getRoundBracketedClauseCSAccess().getArgumentsAssignment_2_0(), "rule__RoundBracketedClauseCS__ArgumentsAssignment_2_0");
					put(grammarAccess.getRoundBracketedClauseCSAccess().getArgumentsAssignment_2_1(), "rule__RoundBracketedClauseCS__ArgumentsAssignment_2_1");
					put(grammarAccess.getRoundBracketedClauseCSAccess().getArgumentsAssignment_2_2_0(), "rule__RoundBracketedClauseCS__ArgumentsAssignment_2_2_0");
					put(grammarAccess.getRoundBracketedClauseCSAccess().getArgumentsAssignment_2_2_1(), "rule__RoundBracketedClauseCS__ArgumentsAssignment_2_2_1");
					put(grammarAccess.getRoundBracketedClauseCSAccess().getArgumentsAssignment_2_3_0(), "rule__RoundBracketedClauseCS__ArgumentsAssignment_2_3_0");
					put(grammarAccess.getRoundBracketedClauseCSAccess().getArgumentsAssignment_2_3_1(), "rule__RoundBracketedClauseCS__ArgumentsAssignment_2_3_1");
					put(grammarAccess.getSquareBracketedClauseCSAccess().getTermsAssignment_1(), "rule__SquareBracketedClauseCS__TermsAssignment_1");
					put(grammarAccess.getSquareBracketedClauseCSAccess().getTermsAssignment_2_1(), "rule__SquareBracketedClauseCS__TermsAssignment_2_1");
					put(grammarAccess.getNavigatingArgCSAccess().getNameAssignment_0(), "rule__NavigatingArgCS__NameAssignment_0");
					put(grammarAccess.getNavigatingArgCSAccess().getOwnedTypeAssignment_1_1(), "rule__NavigatingArgCS__OwnedTypeAssignment_1_1");
					put(grammarAccess.getNavigatingArgCSAccess().getInitAssignment_1_2_1(), "rule__NavigatingArgCS__InitAssignment_1_2_1");
					put(grammarAccess.getNavigatingBarArgCSAccess().getPrefixAssignment_0(), "rule__NavigatingBarArgCS__PrefixAssignment_0");
					put(grammarAccess.getNavigatingBarArgCSAccess().getNameAssignment_1(), "rule__NavigatingBarArgCS__NameAssignment_1");
					put(grammarAccess.getNavigatingBarArgCSAccess().getOwnedTypeAssignment_2_1(), "rule__NavigatingBarArgCS__OwnedTypeAssignment_2_1");
					put(grammarAccess.getNavigatingBarArgCSAccess().getInitAssignment_2_2_1(), "rule__NavigatingBarArgCS__InitAssignment_2_2_1");
					put(grammarAccess.getNavigatingCommaArgCSAccess().getPrefixAssignment_0(), "rule__NavigatingCommaArgCS__PrefixAssignment_0");
					put(grammarAccess.getNavigatingCommaArgCSAccess().getNameAssignment_1(), "rule__NavigatingCommaArgCS__NameAssignment_1");
					put(grammarAccess.getNavigatingCommaArgCSAccess().getOwnedTypeAssignment_2_1(), "rule__NavigatingCommaArgCS__OwnedTypeAssignment_2_1");
					put(grammarAccess.getNavigatingCommaArgCSAccess().getInitAssignment_2_2_1(), "rule__NavigatingCommaArgCS__InitAssignment_2_2_1");
					put(grammarAccess.getNavigatingSemiArgCSAccess().getPrefixAssignment_0(), "rule__NavigatingSemiArgCS__PrefixAssignment_0");
					put(grammarAccess.getNavigatingSemiArgCSAccess().getNameAssignment_1(), "rule__NavigatingSemiArgCS__NameAssignment_1");
					put(grammarAccess.getNavigatingSemiArgCSAccess().getOwnedTypeAssignment_2_1(), "rule__NavigatingSemiArgCS__OwnedTypeAssignment_2_1");
					put(grammarAccess.getNavigatingSemiArgCSAccess().getInitAssignment_2_2_1(), "rule__NavigatingSemiArgCS__InitAssignment_2_2_1");
					put(grammarAccess.getIfExpCSAccess().getConditionAssignment_1(), "rule__IfExpCS__ConditionAssignment_1");
					put(grammarAccess.getIfExpCSAccess().getThenExpressionAssignment_3(), "rule__IfExpCS__ThenExpressionAssignment_3");
					put(grammarAccess.getIfExpCSAccess().getElseExpressionAssignment_5(), "rule__IfExpCS__ElseExpressionAssignment_5");
					put(grammarAccess.getLetExpCSAccess().getVariableAssignment_1(), "rule__LetExpCS__VariableAssignment_1");
					put(grammarAccess.getLetExpCSAccess().getVariableAssignment_2_1(), "rule__LetExpCS__VariableAssignment_2_1");
					put(grammarAccess.getLetExpCSAccess().getInAssignment_4(), "rule__LetExpCS__InAssignment_4");
					put(grammarAccess.getLetVariableCSAccess().getNameAssignment_0(), "rule__LetVariableCS__NameAssignment_0");
					put(grammarAccess.getLetVariableCSAccess().getOwnedTypeAssignment_1_1(), "rule__LetVariableCS__OwnedTypeAssignment_1_1");
					put(grammarAccess.getLetVariableCSAccess().getInitExpressionAssignment_3(), "rule__LetVariableCS__InitExpressionAssignment_3");
					put(grammarAccess.getNestedExpCSAccess().getSourceAssignment_1(), "rule__NestedExpCS__SourceAssignment_1");
				}
			};
		}
		return nameMappings.get(element);
	}
	
	@Override
	protected Collection<FollowElement> getFollowElements(AbstractInternalContentAssistParser parser) {
		try {
			org.eclipse.ocl.examples.xtext.oclstdlib.ui.contentassist.antlr.internal.InternalOCLstdlibParser typedParser = (org.eclipse.ocl.examples.xtext.oclstdlib.ui.contentassist.antlr.internal.InternalOCLstdlibParser) parser;
			typedParser.entryRuleLibrary();
			return typedParser.getFollowElements();
		} catch(RecognitionException ex) {
			throw new RuntimeException(ex);
		}		
	}
	
	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}
	
	public OCLstdlibGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}
	
	public void setGrammarAccess(OCLstdlibGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
}
