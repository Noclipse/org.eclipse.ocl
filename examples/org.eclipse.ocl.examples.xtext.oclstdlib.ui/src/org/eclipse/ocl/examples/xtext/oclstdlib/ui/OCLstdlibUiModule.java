/*******************************************************************************
 * Copyright (c) 2013 E.D.Willink and others.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *     E.D.Willink - initial API and implementation
 *******************************************************************************/
/*
 * generated by Xtext
 */
package org.eclipse.ocl.examples.xtext.oclstdlib.ui;

import java.util.List;

import org.eclipse.ocl.examples.xtext.oclstdlib.ui.internal.OCLstdlibActivator;
import org.eclipse.ocl.examples.xtext.oclstdlib.ui.refactoring.OCLstdlibReferenceUpdater;
import org.eclipse.ui.plugin.AbstractUIPlugin;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.common.types.access.jdt.IJavaProjectProvider;
import org.eclipse.xtext.ui.editor.contentassist.antlr.FollowElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.ParserBasedContentAssistContextFactory;

import com.google.common.collect.Multimap;

/**
 * Use this class to register components to be used within the IDE.
 */
public class OCLstdlibUiModule extends AbstractOCLstdlibUiModule
{
	public static final String EDITOR_ID = OCLstdlibActivator.ORG_ECLIPSE_OCL_EXAMPLES_XTEXT_OCLSTDLIB_OCLSTDLIB;
	
	public static boolean USE_RUNTIME_CONFIGURATION = false;		// Set true for JUnit plugin tests
	
	public OCLstdlibUiModule(AbstractUIPlugin plugin) {
		super(plugin);
	}

	public Class<? extends org.eclipse.xtext.validation.CompositeEValidator> bindCompositeEValidator() {
		return org.eclipse.xtext.validation.CompositeEValidator.class;
	}
	
//	@SuppressWarnings("restriction")
//	public Class<? extends org.eclipse.xtext.ui.refactoring.IRenameStrategy.Provider> bindIRenameStrategy$Provider() {
//		return OCLstdlibRenameStrategy.Provider.class;
//	}
	
	@SuppressWarnings("restriction")
	public Class<? extends org.eclipse.xtext.ui.refactoring.IReferenceUpdater> bindIReferenceUpdater() {
		return OCLstdlibReferenceUpdater.class;
	}
	
	@Override
	public Class<? extends IJavaProjectProvider> bindIJavaProjectProvider() {
		return NonXtextResourceSetBasedProjectProvider.class;
	}

	@Override
	@SuppressWarnings("restriction")
	public Class<? extends org.eclipse.xtext.common.types.access.IJvmTypeProvider.Factory> bindIJvmTypeProvider$Factory() {
		if (USE_RUNTIME_CONFIGURATION) {
			return org.eclipse.xtext.common.types.access.ClasspathTypeProviderFactory.class;
		}
		else {
			return super.bindIJvmTypeProvider$Factory();
		}
	}

	@Override
	@SuppressWarnings("restriction")
	public Class<? extends org.eclipse.xtext.common.types.xtext.AbstractTypeScopeProvider> bindAbstractTypeScopeProvider() {
		if (USE_RUNTIME_CONFIGURATION) {
			return org.eclipse.xtext.common.types.xtext.ClasspathBasedTypeScopeProvider.class;
		}
		else {
			return super.bindAbstractTypeScopeProvider();
		}
	}

	public static class Bug382088Workaround extends ParserBasedContentAssistContextFactory.StatefulFactory
	{
		private int depth = 0;

		@Override
		protected void computeFollowElements(ParserBasedContentAssistContextFactory.FollowElementCalculator calculator,
				FollowElement element, Multimap<Integer, List<AbstractElement>> visited) {
			try {
				if (++depth < 10) {
					super.computeFollowElements(calculator, element, visited);
				}
			} finally {
				depth--;
			}
		}		
	}
	
	public Class<? extends ParserBasedContentAssistContextFactory.StatefulFactory> bindStatefulFactory() {
		return Bug382088Workaround.class;		// BUG 382088
	}
}
