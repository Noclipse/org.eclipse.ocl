/*
 * generated by Xtext
 */
package org.eclipse.ocl.examples.xtext.oclstdlib.ui;

import java.util.List;

import org.eclipse.ocl.examples.xtext.oclstdlib.ui.internal.OCLstdlibActivator;
import org.eclipse.ocl.examples.xtext.oclstdlib.ui.refactoring.OCLstdlibReferenceUpdater;
import org.eclipse.ui.plugin.AbstractUIPlugin;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.common.types.access.jdt.IJavaProjectProvider;
import org.eclipse.xtext.ui.editor.contentassist.antlr.FollowElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.ParserBasedContentAssistContextFactory;

import com.google.common.collect.Multimap;

/**
 * Use this class to register components to be used within the IDE.
 */
public class OCLstdlibUiModule extends AbstractOCLstdlibUiModule
{
	public static final String EDITOR_ID = OCLstdlibActivator.ORG_ECLIPSE_OCL_EXAMPLES_XTEXT_OCLSTDLIB_OCLSTDLIB;

	public OCLstdlibUiModule(AbstractUIPlugin plugin) {
		super(plugin);
	}
	
//	@SuppressWarnings("restriction")
//	public Class<? extends org.eclipse.xtext.ui.refactoring.IRenameStrategy.Provider> bindIRenameStrategy$Provider() {
//		return OCLstdlibRenameStrategy.Provider.class;
//	}
	
	@SuppressWarnings("restriction")
	public Class<? extends org.eclipse.xtext.ui.refactoring.IReferenceUpdater> bindIReferenceUpdater() {
		return OCLstdlibReferenceUpdater.class;
	}
	
	@Override
	public Class<? extends IJavaProjectProvider> bindIJavaProjectProvider() {
		return NonXtextResourceSetBasedProjectProvider.class;
	}

	public static class Bug382088Workaround extends ParserBasedContentAssistContextFactory.StatefulFactory
	{
		private int depth = 0;

		@Override
		protected void computeFollowElements(ParserBasedContentAssistContextFactory.FollowElementCalculator calculator,
				FollowElement element, Multimap<Integer, List<AbstractElement>> visited) {
			try {
				if (++depth < 10) {
					super.computeFollowElements(calculator, element, visited);
				}
			} finally {
				depth--;
			}
		}		
	}
	
	public Class<? extends ParserBasedContentAssistContextFactory.StatefulFactory> bindStatefulFactory() {
		return Bug382088Workaround.class;		// BUG 382088
	}
}
